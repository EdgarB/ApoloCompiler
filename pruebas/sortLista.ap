programa prueba;
variables lista entero[11] liGlobal;

funciones


void merge(entero l, entero m, entero r)
{
    variables entero i,j,k,n1,n2, iB;
        lista entero[100]L, R;

    n1 = m - l + 1;
    n2 =  r - m;


    ciclo (i = -1; i < n1 - 1; i+=1){
        L[i] = liGlobal[l + i];
    }

    ciclo(i = -1; j < n2 - 1; j+=1){
        R[j] = liGlobal[m + 1+ j];
    }

    i = 0;
    j = 0;
    k = l;
    ciclo (iB=0;i < n1 && j < n2;iB+=1)
    {
        si (L[i] <= R[j])
        {
            liGlobal[k] = L[i];
            i+=1;
        }
        sino
        {
            liGlobal[k] = R[j];
            j+=1;
        };
        k+=1;
    }


    ciclo (iB=0;i < n1;iB+=1)
    {
        liGlobal[k] = L[i];
        i+=1;
        k+=1;
    }

    ciclo (iB=0;j < n2;iB+=1)
    {
        liGlobal[k] = R[j];
        j+=1;
        k+=1;
    }
}


void mergeSort( entero l, entero r){
    variables entero m;
    si (l < r)
    {

        m = l+(r-l)/2;


        mergeSort(l, m);
        mergeSort(m+1, r);

        merge(l, m, r);
    };
}

apolo{
    variables
        entero i;

    liGlobal = [2,31,32,44,1,4,0,12,3,90];
    imprimir(liGlobal[9]);
    mergeSort(0,9);
    imprimir("Resultado:");
    ciclo(i=-1;i< 9; i+=1){
        imprimir(liGlobal[i]);
    }


}
