Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar
Rule 2     variablesAuxiliar -> creaTablaVar variables
Rule 3     variablesAuxiliar -> empty
Rule 4     pantallaAuxiliar -> pantalla
Rule 5     pantallaAuxiliar -> empty agregarCuadDefectoPantalla
Rule 6     figurasAuxiliar -> figuras
Rule 7     figurasAuxiliar -> empty
Rule 8     gravedadAuxiliar -> gravedad
Rule 9     gravedadAuxiliar -> empty agregarCuadDefectoGravedad
Rule 10    funcionesAuxiliar -> FUNCIONES funciones
Rule 11    funcionesAuxiliar -> empty
Rule 12    apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla creaTablaVar bloque
Rule 13    agregarIdHaciaPilas -> empty
Rule 14    agregarOperador -> empty
Rule 15    compSemMasMenosYGenCuad -> empty
Rule 16    comprobarSemanticaPorEntre -> empty
Rule 17    agregarPisoFalso -> empty
Rule 18    eliminarPisoFalso -> empty
Rule 19    comprobarSemanticaOperadoresRelacionales -> empty
Rule 20    compSemYGenCuadYO -> empty
Rule 21    agregarOperando -> empty
Rule 22    agregarlistaAPilaOperando -> empty
Rule 23    agregarCuadYCompSemAsignacion -> empty
Rule 24    agregarCuadYCompSemPantalla -> empty
Rule 25    agregarCuadDefectoPantalla -> empty
Rule 26    agregarCuadYCompSemGravedad -> empty
Rule 27    agregarCuadDefectoGravedad -> empty
Rule 28    agregarCuadEScrituraExpresion -> empty
Rule 29    agregarCuadEscrituraSPCTE -> empty
Rule 30    agregarOperadorDibujarLinea -> empty
Rule 31    agregarOperadorDibujar -> empty
Rule 32    agregarCuadDibujarGen -> empty
Rule 33    generarCuadCondicionGotoFIf -> empty
Rule 34    llenarGotof -> empty
Rule 35    generarCuadCondicionGotoFElse -> empty
Rule 36    agregarAPilaSaltosRegresoCiclo -> empty
Rule 37    generarCuadCondCiclo -> empty
Rule 38    generarCuadRetCiclo -> empty
Rule 39    genCuadRetorno -> empty
Rule 40    checarRetorno -> empty
Rule 41    agregarOperadorRetorno -> empty
Rule 42    agregarOperandoVoid -> empty
Rule 43    checarSiExisteFuncion -> empty
Rule 44    generarAccionERA -> empty
Rule 45    generarAccionParam -> empty
Rule 46    generarAccionGoSub -> empty
Rule 47    checarSiExisteFiguraId -> empty
Rule 48    listaVar -> empty
Rule 49    apoloTablaFunc -> empty
Rule 50    creaTablaFunc -> empty
Rule 51    agregaGlobalTabla -> empty
Rule 52    asignarAlcance -> empty
Rule 53    creaTablaVar -> empty
Rule 54    checarDefID -> empty
Rule 55    agregaVarTabla -> empty
Rule 56    agregaFuncTabla -> empty
Rule 57    agregaParamFunc -> empty
Rule 58    liberaTablaVars -> empty
Rule 59    creaFigFuncSimb -> empty
Rule 60    checarFiguraId -> empty
Rule 61    creaFigVar -> empty
Rule 62    variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
Rule 63    variablesAuxiliar1 -> tipo
Rule 64    variablesAuxiliar1 -> tipo_lista
Rule 65    variablesAuxiliar2 -> COMMA ID agregaVarTabla variablesAuxiliar2
Rule 66    variablesAuxiliar2 -> empty
Rule 67    variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
Rule 68    variablesAuxiliar3 -> empty
Rule 69    termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1
Rule 70    terminoAuxiliar1 -> operadorEntre agregarOperador termino
Rule 71    terminoAuxiliar1 -> operadorPor agregarOperador termino
Rule 72    terminoAuxiliar1 -> empty
Rule 73    retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
Rule 74    retornoAuxiliar1 -> expresion
Rule 75    retornoAuxiliar1 -> sp_cte agregarOperando
Rule 76    retornoAuxiliar1 -> empty agregarOperandoVoid
Rule 77    pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla
Rule 78    gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad
Rule 79    funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
Rule 80    funcionesAuxiliar1 -> tipo
Rule 81    funcionesAuxiliar1 -> VOID
Rule 82    funcionesAuxiliar2 -> COMMA tipo ID agregaParamFunc funcionesAuxiliar2
Rule 83    funcionesAuxiliar2 -> empty
Rule 84    funcionesAuxiliar3 -> variables
Rule 85    funcionesAuxiliar3 -> empty
Rule 86    funcionesAuxiliar4 -> estatuto funcionesAuxiliar4
Rule 87    funcionesAuxiliar4 -> empty
Rule 88    figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
Rule 89    figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
Rule 90    figurasAuxiliar1 -> empty
Rule 91    figura -> CUADRADO
Rule 92    figura -> CIRCULO
Rule 93    figura -> TRIANGULO
Rule 94    figura -> LINEA
Rule 95    figura_atributos -> MEDIDA COLON CTE_I
Rule 96    figura_atributos -> figura_atributosAuxiliar1 COLON CTE_F
Rule 97    figura_atributos -> MOVIBLE COLON cte_bool
Rule 98    figura_atributos -> COLOR COLON color_cte
Rule 99    figura_atributosAuxiliar1 -> FRICCION
Rule 100   figura_atributosAuxiliar1 -> MASA
Rule 101   figura_atributosAuxiliar1 -> REBOTE
Rule 102   figura_atributosAuxiliar2 -> COMMA figura_atributos figura_atributosAuxiliar2
Rule 103   figura_atributosAuxiliar2 -> empty
Rule 104   exp -> termino compSemMasMenosYGenCuad expAuxiliar1
Rule 105   expAuxiliar1 -> operadorMenos agregarOperador exp
Rule 106   expAuxiliar1 -> operadorMas agregarOperador exp
Rule 107   expAuxiliar1 -> empty
Rule 108   estatuto -> asignacion SEMICOLON
Rule 109   estatuto -> condicion
Rule 110   estatuto -> escritura
Rule 111   estatuto -> ciclo
Rule 112   estatuto -> dibujar
Rule 113   estatuto -> llamada SEMICOLON
Rule 114   estatuto -> incremento SEMICOLON
Rule 115   estatuto -> retorno
Rule 116   dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
Rule 117   dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
Rule 118   dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp
Rule 119   ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
Rule 120   condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
Rule 121   condicionAuxiliar1 -> SI_NO generarCuadCondicionGotoFElse bloque
Rule 122   condicionAuxiliar1 -> empty
Rule 123   bloque -> L_BRACES bloqueAuxiliar1 R_BRACES
Rule 124   bloqueAuxiliar1 -> empty
Rule 125   bloqueAuxiliar1 -> estatuto bloqueAuxiliar1
Rule 126   incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
Rule 127   incrementoAuxiliar1 -> PLUS_EQUAL_OP
Rule 128   incrementoAuxiliar1 -> MINUS_EQUAL_OP
Rule 129   asignacion -> ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
Rule 130   agregarOperadorAsignacion -> empty
Rule 131   asignacionAuxiliar1 -> expresion
Rule 132   asignacionAuxiliar1 -> lista_cte agregarlistaAPilaOperando
Rule 133   asignacionAuxiliar1 -> sp_cte agregarOperando
Rule 134   escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
Rule 135   escrituraAuxiliar1 -> expresion agregarCuadEScrituraExpresion
Rule 136   escrituraAuxiliar1 -> sp_cte agregarCuadEscrituraSPCTE
Rule 137   escrituraAuxiliar2 -> COMMA escrituraAuxiliar1 escrituraAuxiliar2
Rule 138   escrituraAuxiliar2 -> empty
Rule 139   llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
Rule 140   llamadaAuxiliar1 -> llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
Rule 141   llamadaAuxiliar1 -> empty
Rule 142   llamadaAuxiliar2 -> exp
Rule 143   llamadaAuxiliar2 -> sp_cte agregarOperando
Rule 144   llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
Rule 145   llamadaAuxiliar3 -> empty
Rule 146   expresion -> exp expresionAuxiliar1
Rule 147   expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
Rule 148   expresionAuxiliar1 -> empty
Rule 149   expresionAuxiliar2 -> N_EQUAL_OP
Rule 150   expresionAuxiliar2 -> EQUAL_OP
Rule 151   expresionAuxiliar2 -> BIGGER_THAN
Rule 152   expresionAuxiliar2 -> LESS_THAN
Rule 153   expresionAuxiliar2 -> BIGGER_EQUAL_THAN
Rule 154   expresionAuxiliar2 -> LESS_EQUAL_THAN
Rule 155   expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO
Rule 156   expresionAuxiliar3 -> empty
Rule 157   expresionAuxiliar4 -> operadorY
Rule 158   expresionAuxiliar4 -> operadorO
Rule 159   factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
Rule 160   factor -> factorAuxiliar1 factorAuxiliar2
Rule 161   factor -> factorAuxiliar3
Rule 162   factorAuxiliar1 -> PLUS_OP
Rule 163   factorAuxiliar1 -> MINUS_OP
Rule 164   factorAuxiliar2 -> CTE_I
Rule 165   factorAuxiliar2 -> CTE_F
Rule 166   factorAuxiliar3 -> factorAuxiliar2
Rule 167   factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas
Rule 168   factorAuxiliar3 -> llamada
Rule 169   lista_cte -> L_BRACKETS lista_cteAuxiliar1 lista_cteAuxiliar2 R_BRACKETS
Rule 170   lista_cteAuxiliar1 -> exp
Rule 171   lista_cteAuxiliar1 -> sp_cte
Rule 172   lista_cteAuxiliar2 -> COMMA lista_cteAuxiliar1 lista_cteAuxiliar2
Rule 173   lista_cteAuxiliar2 -> empty
Rule 174   tipo_lista -> LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS
Rule 175   tipo -> ENTERO
Rule 176   tipo -> FLOTANTE
Rule 177   tipo -> BOOLEANO
Rule 178   tipo -> TEXTO
Rule 179   color_cte -> ROJO
Rule 180   color_cte -> VERDE
Rule 181   color_cte -> AZUL
Rule 182   color_cte -> AMARILLO
Rule 183   color_cte -> ROSA
Rule 184   color_cte -> VIOLETA
Rule 185   sp_cte -> CTE_STRING
Rule 186   sp_cte -> cte_bool
Rule 187   cte_bool -> VERDADERO
Rule 188   cte_bool -> FALSO
Rule 189   operadorMas -> PLUS_OP
Rule 190   operadorMenos -> MINUS_OP
Rule 191   operadorPor -> TIMES_OP
Rule 192   operadorEntre -> DIV_OP
Rule 193   operadorY -> AND
Rule 194   operadorO -> OR
Rule 195   empty -> <empty>

Terminals, with rules where they appear

AMARILLO             : 182
AND                  : 193
APOLO                : 12
ASSIGN_OP            : 129
AZUL                 : 181
BIGGER_EQUAL_THAN    : 153
BIGGER_THAN          : 151
BOOLEANO             : 177
CICLO                : 119
CIRCULO              : 92
COLON                : 95 96 97 98
COLOR                : 98
COMMA                : 65 77 78 82 89 102 116 116 118 118 137 144 172
CTE_F                : 96 165
CTE_I                : 95 164 174
CTE_STRING           : 185
CUADRADO             : 91
DIBUJAR              : 117
DIBUJAR_LINEA        : 118
DIV_OP               : 192
ENTERO               : 175
EQUAL_OP             : 150
FALSO                : 188
FIGURAS              : 88
FLOTANTE             : 176
FRICCION             : 99
FUNCIONES            : 10
GRAVEDAD             : 78
ID                   : 1 62 65 67 79 79 82 88 89 117 118 126 129 139 167
IMPRIMIR             : 134
LESS_EQUAL_THAN      : 154
LESS_THAN            : 152
LINEA                : 94
LISTA                : 174
L_BRACES             : 79 88 89 123
L_BRACKETS           : 169 174
L_PAREN              : 77 78 79 117 118 119 120 134 139 159
MASA                 : 100
MEDIDA               : 95
MINUS_EQUAL_OP       : 128
MINUS_OP             : 163 190
MOVIBLE              : 97
N_EQUAL_OP           : 149
OR                   : 194
PANTALLA             : 77
PLUS_EQUAL_OP        : 127
PLUS_OP              : 162 189
PROGRAMA             : 1
REBOTE               : 101
REGRESAR             : 73
ROJO                 : 179
ROSA                 : 183
R_BRACES             : 79 88 89 123
R_BRACKETS           : 169 174
R_PAREN              : 77 78 79 116 119 120 134 139 159
SEMICOLON            : 1 62 67 73 77 78 88 108 113 114 116 119 119 120 134
SI                   : 120
SI_NO                : 121
TEXTO                : 178
TIMES_OP             : 191
TRIANGULO            : 93
VARIABLES            : 62
VERDADERO            : 187
VERDE                : 180
VIOLETA              : 184
VOID                 : 81
error                : 

Nonterminals, with rules where they appear

agregaFuncTabla      : 12 79
agregaGlobalTabla    : 1
agregaParamFunc      : 79 82
agregaVarTabla       : 62 65 67
agregarAPilaSaltosRegresoCiclo : 119
agregarCuadDefectoGravedad : 9
agregarCuadDefectoPantalla : 5
agregarCuadDibujarGen : 116
agregarCuadEScrituraExpresion : 135
agregarCuadEscrituraSPCTE : 136
agregarCuadYCompSemAsignacion : 126 129
agregarCuadYCompSemGravedad : 78
agregarCuadYCompSemPantalla : 77
agregarIdHaciaPilas  : 126 129 167
agregarOperador      : 70 71 105 106 126 147 155
agregarOperadorAsignacion : 129
agregarOperadorDibujar : 117
agregarOperadorDibujarLinea : 118
agregarOperadorRetorno : 73
agregarOperando      : 75 133 143
agregarOperandoVoid  : 76
agregarPisoFalso     : 159
agregarlistaAPilaOperando : 132
apoloAuxiliar        : 1
apoloTablaFunc       : 12
asignacion           : 108 119
asignacionAuxiliar1  : 129
asignarAlcance       : 79 88
bloque               : 12 119 120 121
bloqueAuxiliar1      : 123 125
checarDefID          : 126 129 167
checarFiguraId       : 88 89
checarRetorno        : 73
checarSiExisteFiguraId : 117 118
checarSiExisteFuncion : 139
ciclo                : 111
color_cte            : 98
compSemMasMenosYGenCuad : 104
compSemYGenCuadYO    : 155
comprobarSemanticaOperadoresRelacionales : 147
comprobarSemanticaPorEntre : 69
condicion            : 109
condicionAuxiliar1   : 120
creaFigFuncSimb      : 88
creaFigVar           : 88 89
creaTablaFunc        : 1
creaTablaVar         : 2 12 79
cte_bool             : 97 186
dibujar              : 112
dibujarAuxiliar1     : 116
eliminarPisoFalso    : 159
empty                : 3 5 7 9 11 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 66 68 72 76 83 85 87 90 103 107 122 124 130 138 141 145 148 156 173
escritura            : 110
escrituraAuxiliar1   : 134 137
escrituraAuxiliar2   : 134 137
estatuto             : 86 125
exp                  : 77 77 78 78 105 106 116 116 118 118 126 142 146 147 170
expAuxiliar1         : 104
expresion            : 74 119 120 131 135 155 159
expresionAuxiliar1   : 146
expresionAuxiliar2   : 147
expresionAuxiliar3   : 147
expresionAuxiliar4   : 155
factor               : 69
factorAuxiliar1      : 160
factorAuxiliar2      : 160 166
factorAuxiliar3      : 161
figura               : 88 89
figura_atributos     : 88 89 102
figura_atributosAuxiliar1 : 96
figura_atributosAuxiliar2 : 88 89 102
figuras              : 6
figurasAuxiliar      : 1
figurasAuxiliar1     : 88 89
funciones            : 10
funcionesAuxiliar    : 1
funcionesAuxiliar1   : 79
funcionesAuxiliar2   : 79 82
funcionesAuxiliar3   : 79
funcionesAuxiliar4   : 79 86
genCuadRetorno       : 73
generarAccionERA     : 139
generarAccionGoSub   : 139
generarAccionParam   : 140 144
generarCuadCondCiclo : 119
generarCuadCondicionGotoFElse : 121
generarCuadCondicionGotoFIf : 120
generarCuadRetCiclo  : 119
gravedad             : 8
gravedadAuxiliar     : 1
incremento           : 114 119
incrementoAuxiliar1  : 126
liberaTablaVars      : 79
listaVar             : 174
lista_cte            : 132
lista_cteAuxiliar1   : 169 172
lista_cteAuxiliar2   : 169 172
llamada              : 113 168
llamadaAuxiliar1     : 139
llamadaAuxiliar2     : 140 144
llamadaAuxiliar3     : 140 144
llenarGotof          : 120
operadorEntre        : 70
operadorMas          : 106
operadorMenos        : 105
operadorO            : 158
operadorPor          : 71
operadorY            : 157
pantalla             : 4
pantallaAuxiliar     : 1
programa             : 0
retorno              : 115
retornoAuxiliar1     : 73
sp_cte               : 75 133 136 143 171
termino              : 70 71 104
terminoAuxiliar1     : 69
tipo                 : 63 79 80 82 174
tipo_lista           : 64
variables            : 2 84
variablesAuxiliar    : 1
variablesAuxiliar1   : 62 67
variablesAuxiliar2   : 62 65 67
variablesAuxiliar3   : 62 67

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar
    (50) creaTablaFunc -> . empty
    (195) empty -> .

    ID              reduce using rule 195 (empty -> .)

    creaTablaFunc                  shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) programa -> PROGRAMA creaTablaFunc . ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar

    ID              shift and go to state 5


state 4

    (50) creaTablaFunc -> empty .

    ID              reduce using rule 50 (creaTablaFunc -> empty .)


state 5

    (1) programa -> PROGRAMA creaTablaFunc ID . agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar
    (51) agregaGlobalTabla -> . empty
    (195) empty -> .

    SEMICOLON       reduce using rule 195 (empty -> .)

    agregaGlobalTabla              shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla . SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar

    SEMICOLON       shift and go to state 8


state 7

    (51) agregaGlobalTabla -> empty .

    SEMICOLON       reduce using rule 51 (agregaGlobalTabla -> empty .)


state 8

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON . variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar
    (2) variablesAuxiliar -> . creaTablaVar variables
    (3) variablesAuxiliar -> . empty
    (53) creaTablaVar -> . empty
    (195) empty -> .

    PANTALLA        reduce using rule 195 (empty -> .)
    FIGURAS         reduce using rule 195 (empty -> .)
    GRAVEDAD        reduce using rule 195 (empty -> .)
    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)
    VARIABLES       reduce using rule 195 (empty -> .)

    variablesAuxiliar              shift and go to state 9
    creaTablaVar                   shift and go to state 10
    empty                          shift and go to state 11

state 9

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar . pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar
    (4) pantallaAuxiliar -> . pantalla
    (5) pantallaAuxiliar -> . empty agregarCuadDefectoPantalla
    (77) pantalla -> . PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla
    (195) empty -> .

    PANTALLA        shift and go to state 15
    FIGURAS         reduce using rule 195 (empty -> .)
    GRAVEDAD        reduce using rule 195 (empty -> .)
    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)

    pantallaAuxiliar               shift and go to state 12
    pantalla                       shift and go to state 13
    empty                          shift and go to state 14

state 10

    (2) variablesAuxiliar -> creaTablaVar . variables
    (62) variables -> . VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3

    VARIABLES       shift and go to state 17

    variables                      shift and go to state 16

state 11

    (3) variablesAuxiliar -> empty .
    (53) creaTablaVar -> empty .

    PANTALLA        reduce using rule 3 (variablesAuxiliar -> empty .)
    FIGURAS         reduce using rule 3 (variablesAuxiliar -> empty .)
    GRAVEDAD        reduce using rule 3 (variablesAuxiliar -> empty .)
    FUNCIONES       reduce using rule 3 (variablesAuxiliar -> empty .)
    APOLO           reduce using rule 3 (variablesAuxiliar -> empty .)
    VARIABLES       reduce using rule 53 (creaTablaVar -> empty .)


state 12

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar . figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar
    (6) figurasAuxiliar -> . figuras
    (7) figurasAuxiliar -> . empty
    (88) figuras -> . FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (195) empty -> .

    FIGURAS         shift and go to state 21
    GRAVEDAD        reduce using rule 195 (empty -> .)
    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)

    figurasAuxiliar                shift and go to state 18
    figuras                        shift and go to state 19
    empty                          shift and go to state 20

state 13

    (4) pantallaAuxiliar -> pantalla .

    FIGURAS         reduce using rule 4 (pantallaAuxiliar -> pantalla .)
    GRAVEDAD        reduce using rule 4 (pantallaAuxiliar -> pantalla .)
    FUNCIONES       reduce using rule 4 (pantallaAuxiliar -> pantalla .)
    APOLO           reduce using rule 4 (pantallaAuxiliar -> pantalla .)


state 14

    (5) pantallaAuxiliar -> empty . agregarCuadDefectoPantalla
    (25) agregarCuadDefectoPantalla -> . empty
    (195) empty -> .

    FIGURAS         reduce using rule 195 (empty -> .)
    GRAVEDAD        reduce using rule 195 (empty -> .)
    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)

    empty                          shift and go to state 22
    agregarCuadDefectoPantalla     shift and go to state 23

state 15

    (77) pantalla -> PANTALLA . L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla

    L_PAREN         shift and go to state 24


state 16

    (2) variablesAuxiliar -> creaTablaVar variables .

    PANTALLA        reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)
    FIGURAS         reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)
    GRAVEDAD        reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)
    FUNCIONES       reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)
    APOLO           reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)


state 17

    (62) variables -> VARIABLES . variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (63) variablesAuxiliar1 -> . tipo
    (64) variablesAuxiliar1 -> . tipo_lista
    (175) tipo -> . ENTERO
    (176) tipo -> . FLOTANTE
    (177) tipo -> . BOOLEANO
    (178) tipo -> . TEXTO
    (174) tipo_lista -> . LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31
    LISTA           shift and go to state 32

    variablesAuxiliar1             shift and go to state 25
    tipo                           shift and go to state 26
    tipo_lista                     shift and go to state 27

state 18

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar . gravedadAuxiliar funcionesAuxiliar apoloAuxiliar
    (8) gravedadAuxiliar -> . gravedad
    (9) gravedadAuxiliar -> . empty agregarCuadDefectoGravedad
    (78) gravedad -> . GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad
    (195) empty -> .

    GRAVEDAD        shift and go to state 36
    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)

    gravedadAuxiliar               shift and go to state 33
    gravedad                       shift and go to state 34
    empty                          shift and go to state 35

state 19

    (6) figurasAuxiliar -> figuras .

    GRAVEDAD        reduce using rule 6 (figurasAuxiliar -> figuras .)
    FUNCIONES       reduce using rule 6 (figurasAuxiliar -> figuras .)
    APOLO           reduce using rule 6 (figurasAuxiliar -> figuras .)


state 20

    (7) figurasAuxiliar -> empty .

    GRAVEDAD        reduce using rule 7 (figurasAuxiliar -> empty .)
    FUNCIONES       reduce using rule 7 (figurasAuxiliar -> empty .)
    APOLO           reduce using rule 7 (figurasAuxiliar -> empty .)


state 21

    (88) figuras -> FIGURAS . creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (59) creaFigFuncSimb -> . empty
    (195) empty -> .

    CUADRADO        reduce using rule 195 (empty -> .)
    CIRCULO         reduce using rule 195 (empty -> .)
    TRIANGULO       reduce using rule 195 (empty -> .)
    LINEA           reduce using rule 195 (empty -> .)

    creaFigFuncSimb                shift and go to state 37
    empty                          shift and go to state 38

state 22

    (25) agregarCuadDefectoPantalla -> empty .

    FIGURAS         reduce using rule 25 (agregarCuadDefectoPantalla -> empty .)
    GRAVEDAD        reduce using rule 25 (agregarCuadDefectoPantalla -> empty .)
    FUNCIONES       reduce using rule 25 (agregarCuadDefectoPantalla -> empty .)
    APOLO           reduce using rule 25 (agregarCuadDefectoPantalla -> empty .)


state 23

    (5) pantallaAuxiliar -> empty agregarCuadDefectoPantalla .

    FIGURAS         reduce using rule 5 (pantallaAuxiliar -> empty agregarCuadDefectoPantalla .)
    GRAVEDAD        reduce using rule 5 (pantallaAuxiliar -> empty agregarCuadDefectoPantalla .)
    FUNCIONES       reduce using rule 5 (pantallaAuxiliar -> empty agregarCuadDefectoPantalla .)
    APOLO           reduce using rule 5 (pantallaAuxiliar -> empty agregarCuadDefectoPantalla .)


state 24

    (77) pantalla -> PANTALLA L_PAREN . exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 25

    (62) variables -> VARIABLES variablesAuxiliar1 . ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3

    ID              shift and go to state 52


state 26

    (63) variablesAuxiliar1 -> tipo .

    ID              reduce using rule 63 (variablesAuxiliar1 -> tipo .)


state 27

    (64) variablesAuxiliar1 -> tipo_lista .

    ID              reduce using rule 64 (variablesAuxiliar1 -> tipo_lista .)


state 28

    (175) tipo -> ENTERO .

    ID              reduce using rule 175 (tipo -> ENTERO .)
    L_BRACKETS      reduce using rule 175 (tipo -> ENTERO .)


state 29

    (176) tipo -> FLOTANTE .

    ID              reduce using rule 176 (tipo -> FLOTANTE .)
    L_BRACKETS      reduce using rule 176 (tipo -> FLOTANTE .)


state 30

    (177) tipo -> BOOLEANO .

    ID              reduce using rule 177 (tipo -> BOOLEANO .)
    L_BRACKETS      reduce using rule 177 (tipo -> BOOLEANO .)


state 31

    (178) tipo -> TEXTO .

    ID              reduce using rule 178 (tipo -> TEXTO .)
    L_BRACKETS      reduce using rule 178 (tipo -> TEXTO .)


state 32

    (174) tipo_lista -> LISTA . listaVar tipo L_BRACKETS CTE_I R_BRACKETS
    (48) listaVar -> . empty
    (195) empty -> .

    ENTERO          reduce using rule 195 (empty -> .)
    FLOTANTE        reduce using rule 195 (empty -> .)
    BOOLEANO        reduce using rule 195 (empty -> .)
    TEXTO           reduce using rule 195 (empty -> .)

    listaVar                       shift and go to state 53
    empty                          shift and go to state 54

state 33

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar . funcionesAuxiliar apoloAuxiliar
    (10) funcionesAuxiliar -> . FUNCIONES funciones
    (11) funcionesAuxiliar -> . empty
    (195) empty -> .

    FUNCIONES       shift and go to state 56
    APOLO           reduce using rule 195 (empty -> .)

    funcionesAuxiliar              shift and go to state 55
    empty                          shift and go to state 57

state 34

    (8) gravedadAuxiliar -> gravedad .

    FUNCIONES       reduce using rule 8 (gravedadAuxiliar -> gravedad .)
    APOLO           reduce using rule 8 (gravedadAuxiliar -> gravedad .)


state 35

    (9) gravedadAuxiliar -> empty . agregarCuadDefectoGravedad
    (27) agregarCuadDefectoGravedad -> . empty
    (195) empty -> .

    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)

    empty                          shift and go to state 58
    agregarCuadDefectoGravedad     shift and go to state 59

state 36

    (78) gravedad -> GRAVEDAD . L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad

    L_PAREN         shift and go to state 60


state 37

    (88) figuras -> FIGURAS creaFigFuncSimb . asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (52) asignarAlcance -> . empty
    (195) empty -> .

    CUADRADO        reduce using rule 195 (empty -> .)
    CIRCULO         reduce using rule 195 (empty -> .)
    TRIANGULO       reduce using rule 195 (empty -> .)
    LINEA           reduce using rule 195 (empty -> .)

    asignarAlcance                 shift and go to state 61
    empty                          shift and go to state 62

state 38

    (59) creaFigFuncSimb -> empty .

    CUADRADO        reduce using rule 59 (creaFigFuncSimb -> empty .)
    CIRCULO         reduce using rule 59 (creaFigFuncSimb -> empty .)
    TRIANGULO       reduce using rule 59 (creaFigFuncSimb -> empty .)
    LINEA           reduce using rule 59 (creaFigFuncSimb -> empty .)


state 39

    (159) factor -> L_PAREN . agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (17) agregarPisoFalso -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarPisoFalso               shift and go to state 63
    empty                          shift and go to state 64

state 40

    (77) pantalla -> PANTALLA L_PAREN exp . COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla

    COMMA           shift and go to state 65


state 41

    (104) exp -> termino . compSemMasMenosYGenCuad expAuxiliar1
    (15) compSemMasMenosYGenCuad -> . empty
    (195) empty -> .

    MINUS_OP        reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    N_EQUAL_OP      reduce using rule 195 (empty -> .)
    EQUAL_OP        reduce using rule 195 (empty -> .)
    BIGGER_THAN     reduce using rule 195 (empty -> .)
    LESS_THAN       reduce using rule 195 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 195 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    R_BRACKETS      reduce using rule 195 (empty -> .)

    compSemMasMenosYGenCuad        shift and go to state 66
    empty                          shift and go to state 67

state 42

    (69) termino -> factor . comprobarSemanticaPorEntre terminoAuxiliar1
    (16) comprobarSemanticaPorEntre -> . empty
    (195) empty -> .

    DIV_OP          reduce using rule 195 (empty -> .)
    TIMES_OP        reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    N_EQUAL_OP      reduce using rule 195 (empty -> .)
    EQUAL_OP        reduce using rule 195 (empty -> .)
    BIGGER_THAN     reduce using rule 195 (empty -> .)
    LESS_THAN       reduce using rule 195 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 195 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    R_BRACKETS      reduce using rule 195 (empty -> .)

    comprobarSemanticaPorEntre     shift and go to state 68
    empty                          shift and go to state 69

state 43

    (160) factor -> factorAuxiliar1 . factorAuxiliar2
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F

    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    factorAuxiliar2                shift and go to state 70

state 44

    (166) factorAuxiliar3 -> factorAuxiliar2 .

    DIV_OP          reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    TIMES_OP        reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    MINUS_OP        reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    PLUS_OP         reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    COMMA           reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    N_EQUAL_OP      reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    EQUAL_OP        reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    BIGGER_THAN     reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    LESS_THAN       reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    BIGGER_EQUAL_THAN reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    LESS_EQUAL_THAN reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    R_PAREN         reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    AND             reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    OR              reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    SEMICOLON       reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)
    R_BRACKETS      reduce using rule 166 (factorAuxiliar3 -> factorAuxiliar2 .)


state 45

    (161) factor -> factorAuxiliar3 .

    DIV_OP          reduce using rule 161 (factor -> factorAuxiliar3 .)
    TIMES_OP        reduce using rule 161 (factor -> factorAuxiliar3 .)
    MINUS_OP        reduce using rule 161 (factor -> factorAuxiliar3 .)
    PLUS_OP         reduce using rule 161 (factor -> factorAuxiliar3 .)
    COMMA           reduce using rule 161 (factor -> factorAuxiliar3 .)
    N_EQUAL_OP      reduce using rule 161 (factor -> factorAuxiliar3 .)
    EQUAL_OP        reduce using rule 161 (factor -> factorAuxiliar3 .)
    BIGGER_THAN     reduce using rule 161 (factor -> factorAuxiliar3 .)
    LESS_THAN       reduce using rule 161 (factor -> factorAuxiliar3 .)
    BIGGER_EQUAL_THAN reduce using rule 161 (factor -> factorAuxiliar3 .)
    LESS_EQUAL_THAN reduce using rule 161 (factor -> factorAuxiliar3 .)
    R_PAREN         reduce using rule 161 (factor -> factorAuxiliar3 .)
    AND             reduce using rule 161 (factor -> factorAuxiliar3 .)
    OR              reduce using rule 161 (factor -> factorAuxiliar3 .)
    SEMICOLON       reduce using rule 161 (factor -> factorAuxiliar3 .)
    R_BRACKETS      reduce using rule 161 (factor -> factorAuxiliar3 .)


state 46

    (162) factorAuxiliar1 -> PLUS_OP .

    CTE_I           reduce using rule 162 (factorAuxiliar1 -> PLUS_OP .)
    CTE_F           reduce using rule 162 (factorAuxiliar1 -> PLUS_OP .)


state 47

    (163) factorAuxiliar1 -> MINUS_OP .

    CTE_I           reduce using rule 163 (factorAuxiliar1 -> MINUS_OP .)
    CTE_F           reduce using rule 163 (factorAuxiliar1 -> MINUS_OP .)


state 48

    (167) factorAuxiliar3 -> ID . checarDefID agregarIdHaciaPilas
    (139) llamada -> ID . checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (54) checarDefID -> . empty
    (43) checarSiExisteFuncion -> . empty
    (195) empty -> .

    DIV_OP          reduce using rule 195 (empty -> .)
    TIMES_OP        reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    N_EQUAL_OP      reduce using rule 195 (empty -> .)
    EQUAL_OP        reduce using rule 195 (empty -> .)
    BIGGER_THAN     reduce using rule 195 (empty -> .)
    LESS_THAN       reduce using rule 195 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 195 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    R_BRACKETS      reduce using rule 195 (empty -> .)
    L_PAREN         reduce using rule 195 (empty -> .)

    checarDefID                    shift and go to state 71
    checarSiExisteFuncion          shift and go to state 72
    empty                          shift and go to state 73

state 49

    (168) factorAuxiliar3 -> llamada .

    DIV_OP          reduce using rule 168 (factorAuxiliar3 -> llamada .)
    TIMES_OP        reduce using rule 168 (factorAuxiliar3 -> llamada .)
    MINUS_OP        reduce using rule 168 (factorAuxiliar3 -> llamada .)
    PLUS_OP         reduce using rule 168 (factorAuxiliar3 -> llamada .)
    COMMA           reduce using rule 168 (factorAuxiliar3 -> llamada .)
    N_EQUAL_OP      reduce using rule 168 (factorAuxiliar3 -> llamada .)
    EQUAL_OP        reduce using rule 168 (factorAuxiliar3 -> llamada .)
    BIGGER_THAN     reduce using rule 168 (factorAuxiliar3 -> llamada .)
    LESS_THAN       reduce using rule 168 (factorAuxiliar3 -> llamada .)
    BIGGER_EQUAL_THAN reduce using rule 168 (factorAuxiliar3 -> llamada .)
    LESS_EQUAL_THAN reduce using rule 168 (factorAuxiliar3 -> llamada .)
    R_PAREN         reduce using rule 168 (factorAuxiliar3 -> llamada .)
    AND             reduce using rule 168 (factorAuxiliar3 -> llamada .)
    OR              reduce using rule 168 (factorAuxiliar3 -> llamada .)
    SEMICOLON       reduce using rule 168 (factorAuxiliar3 -> llamada .)
    R_BRACKETS      reduce using rule 168 (factorAuxiliar3 -> llamada .)


state 50

    (164) factorAuxiliar2 -> CTE_I .

    DIV_OP          reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    TIMES_OP        reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    MINUS_OP        reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    PLUS_OP         reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    COMMA           reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    N_EQUAL_OP      reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    EQUAL_OP        reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    BIGGER_THAN     reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    LESS_THAN       reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    BIGGER_EQUAL_THAN reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    LESS_EQUAL_THAN reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    R_PAREN         reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    AND             reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    OR              reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    SEMICOLON       reduce using rule 164 (factorAuxiliar2 -> CTE_I .)
    R_BRACKETS      reduce using rule 164 (factorAuxiliar2 -> CTE_I .)


state 51

    (165) factorAuxiliar2 -> CTE_F .

    DIV_OP          reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    TIMES_OP        reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    MINUS_OP        reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    PLUS_OP         reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    COMMA           reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    N_EQUAL_OP      reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    EQUAL_OP        reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    BIGGER_THAN     reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    LESS_THAN       reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    BIGGER_EQUAL_THAN reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    LESS_EQUAL_THAN reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    R_PAREN         reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    AND             reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    OR              reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    SEMICOLON       reduce using rule 165 (factorAuxiliar2 -> CTE_F .)
    R_BRACKETS      reduce using rule 165 (factorAuxiliar2 -> CTE_F .)


state 52

    (62) variables -> VARIABLES variablesAuxiliar1 ID . agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (55) agregaVarTabla -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    agregaVarTabla                 shift and go to state 74
    empty                          shift and go to state 75

state 53

    (174) tipo_lista -> LISTA listaVar . tipo L_BRACKETS CTE_I R_BRACKETS
    (175) tipo -> . ENTERO
    (176) tipo -> . FLOTANTE
    (177) tipo -> . BOOLEANO
    (178) tipo -> . TEXTO

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31

    tipo                           shift and go to state 76

state 54

    (48) listaVar -> empty .

    ENTERO          reduce using rule 48 (listaVar -> empty .)
    FLOTANTE        reduce using rule 48 (listaVar -> empty .)
    BOOLEANO        reduce using rule 48 (listaVar -> empty .)
    TEXTO           reduce using rule 48 (listaVar -> empty .)


state 55

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar . apoloAuxiliar
    (12) apoloAuxiliar -> . APOLO apoloTablaFunc agregaFuncTabla creaTablaVar bloque

    APOLO           shift and go to state 78

    apoloAuxiliar                  shift and go to state 77

state 56

    (10) funcionesAuxiliar -> FUNCIONES . funciones
    (79) funciones -> . funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (80) funcionesAuxiliar1 -> . tipo
    (81) funcionesAuxiliar1 -> . VOID
    (175) tipo -> . ENTERO
    (176) tipo -> . FLOTANTE
    (177) tipo -> . BOOLEANO
    (178) tipo -> . TEXTO

    VOID            shift and go to state 82
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31

    funciones                      shift and go to state 79
    funcionesAuxiliar1             shift and go to state 80
    tipo                           shift and go to state 81

state 57

    (11) funcionesAuxiliar -> empty .

    APOLO           reduce using rule 11 (funcionesAuxiliar -> empty .)


state 58

    (27) agregarCuadDefectoGravedad -> empty .

    FUNCIONES       reduce using rule 27 (agregarCuadDefectoGravedad -> empty .)
    APOLO           reduce using rule 27 (agregarCuadDefectoGravedad -> empty .)


state 59

    (9) gravedadAuxiliar -> empty agregarCuadDefectoGravedad .

    FUNCIONES       reduce using rule 9 (gravedadAuxiliar -> empty agregarCuadDefectoGravedad .)
    APOLO           reduce using rule 9 (gravedadAuxiliar -> empty agregarCuadDefectoGravedad .)


state 60

    (78) gravedad -> GRAVEDAD L_PAREN . exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 83
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 61

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance . figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (91) figura -> . CUADRADO
    (92) figura -> . CIRCULO
    (93) figura -> . TRIANGULO
    (94) figura -> . LINEA

    CUADRADO        shift and go to state 85
    CIRCULO         shift and go to state 86
    TRIANGULO       shift and go to state 87
    LINEA           shift and go to state 88

    figura                         shift and go to state 84

state 62

    (52) asignarAlcance -> empty .

    CUADRADO        reduce using rule 52 (asignarAlcance -> empty .)
    CIRCULO         reduce using rule 52 (asignarAlcance -> empty .)
    TRIANGULO       reduce using rule 52 (asignarAlcance -> empty .)
    LINEA           reduce using rule 52 (asignarAlcance -> empty .)
    L_PAREN         reduce using rule 52 (asignarAlcance -> empty .)


state 63

    (159) factor -> L_PAREN agregarPisoFalso . expresion R_PAREN eliminarPisoFalso
    (146) expresion -> . exp expresionAuxiliar1
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    expresion                      shift and go to state 89
    exp                            shift and go to state 90
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 64

    (17) agregarPisoFalso -> empty .

    L_PAREN         reduce using rule 17 (agregarPisoFalso -> empty .)
    PLUS_OP         reduce using rule 17 (agregarPisoFalso -> empty .)
    MINUS_OP        reduce using rule 17 (agregarPisoFalso -> empty .)
    ID              reduce using rule 17 (agregarPisoFalso -> empty .)
    CTE_I           reduce using rule 17 (agregarPisoFalso -> empty .)
    CTE_F           reduce using rule 17 (agregarPisoFalso -> empty .)


state 65

    (77) pantalla -> PANTALLA L_PAREN exp COMMA . exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 91
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 66

    (104) exp -> termino compSemMasMenosYGenCuad . expAuxiliar1
    (105) expAuxiliar1 -> . operadorMenos agregarOperador exp
    (106) expAuxiliar1 -> . operadorMas agregarOperador exp
    (107) expAuxiliar1 -> . empty
    (190) operadorMenos -> . MINUS_OP
    (189) operadorMas -> . PLUS_OP
    (195) empty -> .

    MINUS_OP        shift and go to state 96
    PLUS_OP         shift and go to state 97
    COMMA           reduce using rule 195 (empty -> .)
    N_EQUAL_OP      reduce using rule 195 (empty -> .)
    EQUAL_OP        reduce using rule 195 (empty -> .)
    BIGGER_THAN     reduce using rule 195 (empty -> .)
    LESS_THAN       reduce using rule 195 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 195 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    R_BRACKETS      reduce using rule 195 (empty -> .)

    expAuxiliar1                   shift and go to state 92
    operadorMenos                  shift and go to state 93
    operadorMas                    shift and go to state 94
    empty                          shift and go to state 95

state 67

    (15) compSemMasMenosYGenCuad -> empty .

    MINUS_OP        reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    PLUS_OP         reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    COMMA           reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    N_EQUAL_OP      reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    EQUAL_OP        reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    BIGGER_THAN     reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    LESS_THAN       reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    LESS_EQUAL_THAN reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    R_PAREN         reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    AND             reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    OR              reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    SEMICOLON       reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    R_BRACKETS      reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)


state 68

    (69) termino -> factor comprobarSemanticaPorEntre . terminoAuxiliar1
    (70) terminoAuxiliar1 -> . operadorEntre agregarOperador termino
    (71) terminoAuxiliar1 -> . operadorPor agregarOperador termino
    (72) terminoAuxiliar1 -> . empty
    (192) operadorEntre -> . DIV_OP
    (191) operadorPor -> . TIMES_OP
    (195) empty -> .

    DIV_OP          shift and go to state 102
    TIMES_OP        shift and go to state 103
    MINUS_OP        reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    N_EQUAL_OP      reduce using rule 195 (empty -> .)
    EQUAL_OP        reduce using rule 195 (empty -> .)
    BIGGER_THAN     reduce using rule 195 (empty -> .)
    LESS_THAN       reduce using rule 195 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 195 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    R_BRACKETS      reduce using rule 195 (empty -> .)

    terminoAuxiliar1               shift and go to state 98
    operadorEntre                  shift and go to state 99
    operadorPor                    shift and go to state 100
    empty                          shift and go to state 101

state 69

    (16) comprobarSemanticaPorEntre -> empty .

    DIV_OP          reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    TIMES_OP        reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    MINUS_OP        reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    PLUS_OP         reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    COMMA           reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    N_EQUAL_OP      reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    EQUAL_OP        reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    BIGGER_THAN     reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    LESS_THAN       reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    LESS_EQUAL_THAN reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    R_PAREN         reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    AND             reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    OR              reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    SEMICOLON       reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    R_BRACKETS      reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)


state 70

    (160) factor -> factorAuxiliar1 factorAuxiliar2 .

    DIV_OP          reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    TIMES_OP        reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    MINUS_OP        reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    PLUS_OP         reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    COMMA           reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    N_EQUAL_OP      reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    EQUAL_OP        reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    BIGGER_THAN     reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    LESS_THAN       reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    BIGGER_EQUAL_THAN reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    LESS_EQUAL_THAN reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    R_PAREN         reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    AND             reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    OR              reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    SEMICOLON       reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)
    R_BRACKETS      reduce using rule 160 (factor -> factorAuxiliar1 factorAuxiliar2 .)


state 71

    (167) factorAuxiliar3 -> ID checarDefID . agregarIdHaciaPilas
    (13) agregarIdHaciaPilas -> . empty
    (195) empty -> .

    DIV_OP          reduce using rule 195 (empty -> .)
    TIMES_OP        reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    N_EQUAL_OP      reduce using rule 195 (empty -> .)
    EQUAL_OP        reduce using rule 195 (empty -> .)
    BIGGER_THAN     reduce using rule 195 (empty -> .)
    LESS_THAN       reduce using rule 195 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 195 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    R_BRACKETS      reduce using rule 195 (empty -> .)

    agregarIdHaciaPilas            shift and go to state 104
    empty                          shift and go to state 105

state 72

    (139) llamada -> ID checarSiExisteFuncion . generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (44) generarAccionERA -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)

    generarAccionERA               shift and go to state 106
    empty                          shift and go to state 107

state 73

    (54) checarDefID -> empty .
    (43) checarSiExisteFuncion -> empty .

    DIV_OP          reduce using rule 54 (checarDefID -> empty .)
    TIMES_OP        reduce using rule 54 (checarDefID -> empty .)
    MINUS_OP        reduce using rule 54 (checarDefID -> empty .)
    PLUS_OP         reduce using rule 54 (checarDefID -> empty .)
    COMMA           reduce using rule 54 (checarDefID -> empty .)
    N_EQUAL_OP      reduce using rule 54 (checarDefID -> empty .)
    EQUAL_OP        reduce using rule 54 (checarDefID -> empty .)
    BIGGER_THAN     reduce using rule 54 (checarDefID -> empty .)
    LESS_THAN       reduce using rule 54 (checarDefID -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 54 (checarDefID -> empty .)
    LESS_EQUAL_THAN reduce using rule 54 (checarDefID -> empty .)
    R_PAREN         reduce using rule 54 (checarDefID -> empty .)
    AND             reduce using rule 54 (checarDefID -> empty .)
    OR              reduce using rule 54 (checarDefID -> empty .)
    SEMICOLON       reduce using rule 54 (checarDefID -> empty .)
    R_BRACKETS      reduce using rule 54 (checarDefID -> empty .)
    ASSIGN_OP       reduce using rule 54 (checarDefID -> empty .)
    PLUS_EQUAL_OP   reduce using rule 54 (checarDefID -> empty .)
    MINUS_EQUAL_OP  reduce using rule 54 (checarDefID -> empty .)
    L_PAREN         reduce using rule 43 (checarSiExisteFuncion -> empty .)


state 74

    (62) variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla . variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (65) variablesAuxiliar2 -> . COMMA ID agregaVarTabla variablesAuxiliar2
    (66) variablesAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 109
    SEMICOLON       reduce using rule 195 (empty -> .)

    variablesAuxiliar2             shift and go to state 108
    empty                          shift and go to state 110

state 75

    (55) agregaVarTabla -> empty .

    COMMA           reduce using rule 55 (agregaVarTabla -> empty .)
    SEMICOLON       reduce using rule 55 (agregaVarTabla -> empty .)


state 76

    (174) tipo_lista -> LISTA listaVar tipo . L_BRACKETS CTE_I R_BRACKETS

    L_BRACKETS      shift and go to state 111


state 77

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar .

    $end            reduce using rule 1 (programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar funcionesAuxiliar apoloAuxiliar .)


state 78

    (12) apoloAuxiliar -> APOLO . apoloTablaFunc agregaFuncTabla creaTablaVar bloque
    (49) apoloTablaFunc -> . empty
    (195) empty -> .

    L_BRACES        reduce using rule 195 (empty -> .)

    apoloTablaFunc                 shift and go to state 112
    empty                          shift and go to state 113

state 79

    (10) funcionesAuxiliar -> FUNCIONES funciones .

    APOLO           reduce using rule 10 (funcionesAuxiliar -> FUNCIONES funciones .)


state 80

    (79) funciones -> funcionesAuxiliar1 . ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    ID              shift and go to state 114


state 81

    (80) funcionesAuxiliar1 -> tipo .

    ID              reduce using rule 80 (funcionesAuxiliar1 -> tipo .)


state 82

    (81) funcionesAuxiliar1 -> VOID .

    ID              reduce using rule 81 (funcionesAuxiliar1 -> VOID .)


state 83

    (78) gravedad -> GRAVEDAD L_PAREN exp . COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad

    COMMA           shift and go to state 115


state 84

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura . ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON

    ID              shift and go to state 116


state 85

    (91) figura -> CUADRADO .

    ID              reduce using rule 91 (figura -> CUADRADO .)


state 86

    (92) figura -> CIRCULO .

    ID              reduce using rule 92 (figura -> CIRCULO .)


state 87

    (93) figura -> TRIANGULO .

    ID              reduce using rule 93 (figura -> TRIANGULO .)


state 88

    (94) figura -> LINEA .

    ID              reduce using rule 94 (figura -> LINEA .)


state 89

    (159) factor -> L_PAREN agregarPisoFalso expresion . R_PAREN eliminarPisoFalso

    R_PAREN         shift and go to state 117


state 90

    (146) expresion -> exp . expresionAuxiliar1
    (147) expresionAuxiliar1 -> . expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
    (148) expresionAuxiliar1 -> . empty
    (149) expresionAuxiliar2 -> . N_EQUAL_OP
    (150) expresionAuxiliar2 -> . EQUAL_OP
    (151) expresionAuxiliar2 -> . BIGGER_THAN
    (152) expresionAuxiliar2 -> . LESS_THAN
    (153) expresionAuxiliar2 -> . BIGGER_EQUAL_THAN
    (154) expresionAuxiliar2 -> . LESS_EQUAL_THAN
    (195) empty -> .

    N_EQUAL_OP      shift and go to state 121
    EQUAL_OP        shift and go to state 122
    BIGGER_THAN     shift and go to state 123
    LESS_THAN       shift and go to state 124
    BIGGER_EQUAL_THAN shift and go to state 125
    LESS_EQUAL_THAN shift and go to state 126
    R_PAREN         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    expresionAuxiliar1             shift and go to state 118
    expresionAuxiliar2             shift and go to state 119
    empty                          shift and go to state 120

state 91

    (77) pantalla -> PANTALLA L_PAREN exp COMMA exp . R_PAREN SEMICOLON agregarCuadYCompSemPantalla

    R_PAREN         shift and go to state 127


state 92

    (104) exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .

    COMMA           reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    N_EQUAL_OP      reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    EQUAL_OP        reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    BIGGER_THAN     reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    LESS_THAN       reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    BIGGER_EQUAL_THAN reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    LESS_EQUAL_THAN reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    R_PAREN         reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    AND             reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    OR              reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    SEMICOLON       reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    R_BRACKETS      reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)


state 93

    (105) expAuxiliar1 -> operadorMenos . agregarOperador exp
    (14) agregarOperador -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarOperador                shift and go to state 128
    empty                          shift and go to state 129

state 94

    (106) expAuxiliar1 -> operadorMas . agregarOperador exp
    (14) agregarOperador -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarOperador                shift and go to state 130
    empty                          shift and go to state 129

state 95

    (107) expAuxiliar1 -> empty .

    COMMA           reduce using rule 107 (expAuxiliar1 -> empty .)
    N_EQUAL_OP      reduce using rule 107 (expAuxiliar1 -> empty .)
    EQUAL_OP        reduce using rule 107 (expAuxiliar1 -> empty .)
    BIGGER_THAN     reduce using rule 107 (expAuxiliar1 -> empty .)
    LESS_THAN       reduce using rule 107 (expAuxiliar1 -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 107 (expAuxiliar1 -> empty .)
    LESS_EQUAL_THAN reduce using rule 107 (expAuxiliar1 -> empty .)
    R_PAREN         reduce using rule 107 (expAuxiliar1 -> empty .)
    AND             reduce using rule 107 (expAuxiliar1 -> empty .)
    OR              reduce using rule 107 (expAuxiliar1 -> empty .)
    SEMICOLON       reduce using rule 107 (expAuxiliar1 -> empty .)
    R_BRACKETS      reduce using rule 107 (expAuxiliar1 -> empty .)


state 96

    (190) operadorMenos -> MINUS_OP .

    L_PAREN         reduce using rule 190 (operadorMenos -> MINUS_OP .)
    PLUS_OP         reduce using rule 190 (operadorMenos -> MINUS_OP .)
    MINUS_OP        reduce using rule 190 (operadorMenos -> MINUS_OP .)
    ID              reduce using rule 190 (operadorMenos -> MINUS_OP .)
    CTE_I           reduce using rule 190 (operadorMenos -> MINUS_OP .)
    CTE_F           reduce using rule 190 (operadorMenos -> MINUS_OP .)


state 97

    (189) operadorMas -> PLUS_OP .

    L_PAREN         reduce using rule 189 (operadorMas -> PLUS_OP .)
    PLUS_OP         reduce using rule 189 (operadorMas -> PLUS_OP .)
    MINUS_OP        reduce using rule 189 (operadorMas -> PLUS_OP .)
    ID              reduce using rule 189 (operadorMas -> PLUS_OP .)
    CTE_I           reduce using rule 189 (operadorMas -> PLUS_OP .)
    CTE_F           reduce using rule 189 (operadorMas -> PLUS_OP .)


state 98

    (69) termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .

    MINUS_OP        reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    PLUS_OP         reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    COMMA           reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    N_EQUAL_OP      reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    EQUAL_OP        reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    BIGGER_THAN     reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    LESS_THAN       reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    BIGGER_EQUAL_THAN reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    LESS_EQUAL_THAN reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    R_PAREN         reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    AND             reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    OR              reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    SEMICOLON       reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    R_BRACKETS      reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)


state 99

    (70) terminoAuxiliar1 -> operadorEntre . agregarOperador termino
    (14) agregarOperador -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarOperador                shift and go to state 131
    empty                          shift and go to state 129

state 100

    (71) terminoAuxiliar1 -> operadorPor . agregarOperador termino
    (14) agregarOperador -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarOperador                shift and go to state 132
    empty                          shift and go to state 129

state 101

    (72) terminoAuxiliar1 -> empty .

    MINUS_OP        reduce using rule 72 (terminoAuxiliar1 -> empty .)
    PLUS_OP         reduce using rule 72 (terminoAuxiliar1 -> empty .)
    COMMA           reduce using rule 72 (terminoAuxiliar1 -> empty .)
    N_EQUAL_OP      reduce using rule 72 (terminoAuxiliar1 -> empty .)
    EQUAL_OP        reduce using rule 72 (terminoAuxiliar1 -> empty .)
    BIGGER_THAN     reduce using rule 72 (terminoAuxiliar1 -> empty .)
    LESS_THAN       reduce using rule 72 (terminoAuxiliar1 -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 72 (terminoAuxiliar1 -> empty .)
    LESS_EQUAL_THAN reduce using rule 72 (terminoAuxiliar1 -> empty .)
    R_PAREN         reduce using rule 72 (terminoAuxiliar1 -> empty .)
    AND             reduce using rule 72 (terminoAuxiliar1 -> empty .)
    OR              reduce using rule 72 (terminoAuxiliar1 -> empty .)
    SEMICOLON       reduce using rule 72 (terminoAuxiliar1 -> empty .)
    R_BRACKETS      reduce using rule 72 (terminoAuxiliar1 -> empty .)


state 102

    (192) operadorEntre -> DIV_OP .

    L_PAREN         reduce using rule 192 (operadorEntre -> DIV_OP .)
    PLUS_OP         reduce using rule 192 (operadorEntre -> DIV_OP .)
    MINUS_OP        reduce using rule 192 (operadorEntre -> DIV_OP .)
    ID              reduce using rule 192 (operadorEntre -> DIV_OP .)
    CTE_I           reduce using rule 192 (operadorEntre -> DIV_OP .)
    CTE_F           reduce using rule 192 (operadorEntre -> DIV_OP .)


state 103

    (191) operadorPor -> TIMES_OP .

    L_PAREN         reduce using rule 191 (operadorPor -> TIMES_OP .)
    PLUS_OP         reduce using rule 191 (operadorPor -> TIMES_OP .)
    MINUS_OP        reduce using rule 191 (operadorPor -> TIMES_OP .)
    ID              reduce using rule 191 (operadorPor -> TIMES_OP .)
    CTE_I           reduce using rule 191 (operadorPor -> TIMES_OP .)
    CTE_F           reduce using rule 191 (operadorPor -> TIMES_OP .)


state 104

    (167) factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .

    DIV_OP          reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    TIMES_OP        reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    MINUS_OP        reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    PLUS_OP         reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    COMMA           reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    N_EQUAL_OP      reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    EQUAL_OP        reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    BIGGER_THAN     reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    LESS_THAN       reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    BIGGER_EQUAL_THAN reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    LESS_EQUAL_THAN reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    R_PAREN         reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    AND             reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    OR              reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    SEMICOLON       reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    R_BRACKETS      reduce using rule 167 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)


state 105

    (13) agregarIdHaciaPilas -> empty .

    DIV_OP          reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    TIMES_OP        reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    MINUS_OP        reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    PLUS_OP         reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    COMMA           reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    N_EQUAL_OP      reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    EQUAL_OP        reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    BIGGER_THAN     reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    LESS_THAN       reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    LESS_EQUAL_THAN reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    R_PAREN         reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    AND             reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    OR              reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    SEMICOLON       reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    R_BRACKETS      reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    ASSIGN_OP       reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    PLUS_EQUAL_OP   reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    MINUS_EQUAL_OP  reduce using rule 13 (agregarIdHaciaPilas -> empty .)


state 106

    (139) llamada -> ID checarSiExisteFuncion generarAccionERA . L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 133


state 107

    (44) generarAccionERA -> empty .

    L_PAREN         reduce using rule 44 (generarAccionERA -> empty .)


state 108

    (62) variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 . SEMICOLON variablesAuxiliar3

    SEMICOLON       shift and go to state 134


state 109

    (65) variablesAuxiliar2 -> COMMA . ID agregaVarTabla variablesAuxiliar2

    ID              shift and go to state 135


state 110

    (66) variablesAuxiliar2 -> empty .

    SEMICOLON       reduce using rule 66 (variablesAuxiliar2 -> empty .)


state 111

    (174) tipo_lista -> LISTA listaVar tipo L_BRACKETS . CTE_I R_BRACKETS

    CTE_I           shift and go to state 136


state 112

    (12) apoloAuxiliar -> APOLO apoloTablaFunc . agregaFuncTabla creaTablaVar bloque
    (56) agregaFuncTabla -> . empty
    (195) empty -> .

    L_BRACES        reduce using rule 195 (empty -> .)

    agregaFuncTabla                shift and go to state 137
    empty                          shift and go to state 138

state 113

    (49) apoloTablaFunc -> empty .

    L_BRACES        reduce using rule 49 (apoloTablaFunc -> empty .)


state 114

    (79) funciones -> funcionesAuxiliar1 ID . asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (52) asignarAlcance -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)

    asignarAlcance                 shift and go to state 139
    empty                          shift and go to state 62

state 115

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA . exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 140
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 116

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID . checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (60) checarFiguraId -> . empty
    (195) empty -> .

    L_BRACES        reduce using rule 195 (empty -> .)

    checarFiguraId                 shift and go to state 141
    empty                          shift and go to state 142

state 117

    (159) factor -> L_PAREN agregarPisoFalso expresion R_PAREN . eliminarPisoFalso
    (18) eliminarPisoFalso -> . empty
    (195) empty -> .

    DIV_OP          reduce using rule 195 (empty -> .)
    TIMES_OP        reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    N_EQUAL_OP      reduce using rule 195 (empty -> .)
    EQUAL_OP        reduce using rule 195 (empty -> .)
    BIGGER_THAN     reduce using rule 195 (empty -> .)
    LESS_THAN       reduce using rule 195 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 195 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    R_BRACKETS      reduce using rule 195 (empty -> .)

    eliminarPisoFalso              shift and go to state 143
    empty                          shift and go to state 144

state 118

    (146) expresion -> exp expresionAuxiliar1 .

    R_PAREN         reduce using rule 146 (expresion -> exp expresionAuxiliar1 .)
    COMMA           reduce using rule 146 (expresion -> exp expresionAuxiliar1 .)
    SEMICOLON       reduce using rule 146 (expresion -> exp expresionAuxiliar1 .)


state 119

    (147) expresionAuxiliar1 -> expresionAuxiliar2 . agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
    (14) agregarOperador -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarOperador                shift and go to state 145
    empty                          shift and go to state 129

state 120

    (148) expresionAuxiliar1 -> empty .

    R_PAREN         reduce using rule 148 (expresionAuxiliar1 -> empty .)
    COMMA           reduce using rule 148 (expresionAuxiliar1 -> empty .)
    SEMICOLON       reduce using rule 148 (expresionAuxiliar1 -> empty .)


state 121

    (149) expresionAuxiliar2 -> N_EQUAL_OP .

    L_PAREN         reduce using rule 149 (expresionAuxiliar2 -> N_EQUAL_OP .)
    PLUS_OP         reduce using rule 149 (expresionAuxiliar2 -> N_EQUAL_OP .)
    MINUS_OP        reduce using rule 149 (expresionAuxiliar2 -> N_EQUAL_OP .)
    ID              reduce using rule 149 (expresionAuxiliar2 -> N_EQUAL_OP .)
    CTE_I           reduce using rule 149 (expresionAuxiliar2 -> N_EQUAL_OP .)
    CTE_F           reduce using rule 149 (expresionAuxiliar2 -> N_EQUAL_OP .)


state 122

    (150) expresionAuxiliar2 -> EQUAL_OP .

    L_PAREN         reduce using rule 150 (expresionAuxiliar2 -> EQUAL_OP .)
    PLUS_OP         reduce using rule 150 (expresionAuxiliar2 -> EQUAL_OP .)
    MINUS_OP        reduce using rule 150 (expresionAuxiliar2 -> EQUAL_OP .)
    ID              reduce using rule 150 (expresionAuxiliar2 -> EQUAL_OP .)
    CTE_I           reduce using rule 150 (expresionAuxiliar2 -> EQUAL_OP .)
    CTE_F           reduce using rule 150 (expresionAuxiliar2 -> EQUAL_OP .)


state 123

    (151) expresionAuxiliar2 -> BIGGER_THAN .

    L_PAREN         reduce using rule 151 (expresionAuxiliar2 -> BIGGER_THAN .)
    PLUS_OP         reduce using rule 151 (expresionAuxiliar2 -> BIGGER_THAN .)
    MINUS_OP        reduce using rule 151 (expresionAuxiliar2 -> BIGGER_THAN .)
    ID              reduce using rule 151 (expresionAuxiliar2 -> BIGGER_THAN .)
    CTE_I           reduce using rule 151 (expresionAuxiliar2 -> BIGGER_THAN .)
    CTE_F           reduce using rule 151 (expresionAuxiliar2 -> BIGGER_THAN .)


state 124

    (152) expresionAuxiliar2 -> LESS_THAN .

    L_PAREN         reduce using rule 152 (expresionAuxiliar2 -> LESS_THAN .)
    PLUS_OP         reduce using rule 152 (expresionAuxiliar2 -> LESS_THAN .)
    MINUS_OP        reduce using rule 152 (expresionAuxiliar2 -> LESS_THAN .)
    ID              reduce using rule 152 (expresionAuxiliar2 -> LESS_THAN .)
    CTE_I           reduce using rule 152 (expresionAuxiliar2 -> LESS_THAN .)
    CTE_F           reduce using rule 152 (expresionAuxiliar2 -> LESS_THAN .)


state 125

    (153) expresionAuxiliar2 -> BIGGER_EQUAL_THAN .

    L_PAREN         reduce using rule 153 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    PLUS_OP         reduce using rule 153 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    MINUS_OP        reduce using rule 153 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    ID              reduce using rule 153 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    CTE_I           reduce using rule 153 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    CTE_F           reduce using rule 153 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)


state 126

    (154) expresionAuxiliar2 -> LESS_EQUAL_THAN .

    L_PAREN         reduce using rule 154 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    PLUS_OP         reduce using rule 154 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    MINUS_OP        reduce using rule 154 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    ID              reduce using rule 154 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    CTE_I           reduce using rule 154 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    CTE_F           reduce using rule 154 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)


state 127

    (77) pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN . SEMICOLON agregarCuadYCompSemPantalla

    SEMICOLON       shift and go to state 146


state 128

    (105) expAuxiliar1 -> operadorMenos agregarOperador . exp
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 147
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 129

    (14) agregarOperador -> empty .

    L_PAREN         reduce using rule 14 (agregarOperador -> empty .)
    PLUS_OP         reduce using rule 14 (agregarOperador -> empty .)
    MINUS_OP        reduce using rule 14 (agregarOperador -> empty .)
    ID              reduce using rule 14 (agregarOperador -> empty .)
    CTE_I           reduce using rule 14 (agregarOperador -> empty .)
    CTE_F           reduce using rule 14 (agregarOperador -> empty .)


state 130

    (106) expAuxiliar1 -> operadorMas agregarOperador . exp
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 148
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 131

    (70) terminoAuxiliar1 -> operadorEntre agregarOperador . termino
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    termino                        shift and go to state 149
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 132

    (71) terminoAuxiliar1 -> operadorPor agregarOperador . termino
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    termino                        shift and go to state 150
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 133

    (139) llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN . llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (140) llamadaAuxiliar1 -> . llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
    (141) llamadaAuxiliar1 -> . empty
    (142) llamadaAuxiliar2 -> . exp
    (143) llamadaAuxiliar2 -> . sp_cte agregarOperando
    (195) empty -> .
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (185) sp_cte -> . CTE_STRING
    (186) sp_cte -> . cte_bool
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    R_PAREN         reduce using rule 195 (empty -> .)
    CTE_STRING      shift and go to state 156
    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    llamadaAuxiliar1               shift and go to state 151
    llamadaAuxiliar2               shift and go to state 152
    empty                          shift and go to state 153
    exp                            shift and go to state 154
    sp_cte                         shift and go to state 155
    termino                        shift and go to state 41
    cte_bool                       shift and go to state 157
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 134

    (62) variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON . variablesAuxiliar3
    (67) variablesAuxiliar3 -> . variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (68) variablesAuxiliar3 -> . empty
    (63) variablesAuxiliar1 -> . tipo
    (64) variablesAuxiliar1 -> . tipo_lista
    (195) empty -> .
    (175) tipo -> . ENTERO
    (176) tipo -> . FLOTANTE
    (177) tipo -> . BOOLEANO
    (178) tipo -> . TEXTO
    (174) tipo_lista -> . LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS

    PANTALLA        reduce using rule 195 (empty -> .)
    FIGURAS         reduce using rule 195 (empty -> .)
    GRAVEDAD        reduce using rule 195 (empty -> .)
    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    SI              reduce using rule 195 (empty -> .)
    IMPRIMIR        reduce using rule 195 (empty -> .)
    CICLO           reduce using rule 195 (empty -> .)
    REGRESAR        reduce using rule 195 (empty -> .)
    DIBUJAR         reduce using rule 195 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 195 (empty -> .)
    R_BRACES        reduce using rule 195 (empty -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31
    LISTA           shift and go to state 32

    variablesAuxiliar1             shift and go to state 160
    variablesAuxiliar3             shift and go to state 161
    empty                          shift and go to state 162
    tipo                           shift and go to state 26
    tipo_lista                     shift and go to state 27

state 135

    (65) variablesAuxiliar2 -> COMMA ID . agregaVarTabla variablesAuxiliar2
    (55) agregaVarTabla -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    agregaVarTabla                 shift and go to state 163
    empty                          shift and go to state 75

state 136

    (174) tipo_lista -> LISTA listaVar tipo L_BRACKETS CTE_I . R_BRACKETS

    R_BRACKETS      shift and go to state 164


state 137

    (12) apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla . creaTablaVar bloque
    (53) creaTablaVar -> . empty
    (195) empty -> .

    L_BRACES        reduce using rule 195 (empty -> .)

    creaTablaVar                   shift and go to state 165
    empty                          shift and go to state 166

state 138

    (56) agregaFuncTabla -> empty .

    L_BRACES        reduce using rule 56 (agregaFuncTabla -> empty .)
    L_PAREN         reduce using rule 56 (agregaFuncTabla -> empty .)


state 139

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance . agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (56) agregaFuncTabla -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)

    agregaFuncTabla                shift and go to state 167
    empty                          shift and go to state 138

state 140

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA exp . R_PAREN SEMICOLON agregarCuadYCompSemGravedad

    R_PAREN         shift and go to state 168


state 141

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId . L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON

    L_BRACES        shift and go to state 169


state 142

    (60) checarFiguraId -> empty .

    L_BRACES        reduce using rule 60 (checarFiguraId -> empty .)


state 143

    (159) factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .

    DIV_OP          reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    TIMES_OP        reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    MINUS_OP        reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    PLUS_OP         reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    COMMA           reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    N_EQUAL_OP      reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    EQUAL_OP        reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    BIGGER_THAN     reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    LESS_THAN       reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    BIGGER_EQUAL_THAN reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    LESS_EQUAL_THAN reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    R_PAREN         reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    AND             reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    OR              reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    SEMICOLON       reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    R_BRACKETS      reduce using rule 159 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)


state 144

    (18) eliminarPisoFalso -> empty .

    DIV_OP          reduce using rule 18 (eliminarPisoFalso -> empty .)
    TIMES_OP        reduce using rule 18 (eliminarPisoFalso -> empty .)
    MINUS_OP        reduce using rule 18 (eliminarPisoFalso -> empty .)
    PLUS_OP         reduce using rule 18 (eliminarPisoFalso -> empty .)
    COMMA           reduce using rule 18 (eliminarPisoFalso -> empty .)
    N_EQUAL_OP      reduce using rule 18 (eliminarPisoFalso -> empty .)
    EQUAL_OP        reduce using rule 18 (eliminarPisoFalso -> empty .)
    BIGGER_THAN     reduce using rule 18 (eliminarPisoFalso -> empty .)
    LESS_THAN       reduce using rule 18 (eliminarPisoFalso -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 18 (eliminarPisoFalso -> empty .)
    LESS_EQUAL_THAN reduce using rule 18 (eliminarPisoFalso -> empty .)
    R_PAREN         reduce using rule 18 (eliminarPisoFalso -> empty .)
    AND             reduce using rule 18 (eliminarPisoFalso -> empty .)
    OR              reduce using rule 18 (eliminarPisoFalso -> empty .)
    SEMICOLON       reduce using rule 18 (eliminarPisoFalso -> empty .)
    R_BRACKETS      reduce using rule 18 (eliminarPisoFalso -> empty .)


state 145

    (147) expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador . exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 170
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 146

    (77) pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON . agregarCuadYCompSemPantalla
    (24) agregarCuadYCompSemPantalla -> . empty
    (195) empty -> .

    FIGURAS         reduce using rule 195 (empty -> .)
    GRAVEDAD        reduce using rule 195 (empty -> .)
    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)

    agregarCuadYCompSemPantalla    shift and go to state 171
    empty                          shift and go to state 172

state 147

    (105) expAuxiliar1 -> operadorMenos agregarOperador exp .

    COMMA           reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    N_EQUAL_OP      reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    EQUAL_OP        reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    BIGGER_THAN     reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    LESS_THAN       reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    BIGGER_EQUAL_THAN reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    LESS_EQUAL_THAN reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    R_PAREN         reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    AND             reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    OR              reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    SEMICOLON       reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    R_BRACKETS      reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)


state 148

    (106) expAuxiliar1 -> operadorMas agregarOperador exp .

    COMMA           reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    N_EQUAL_OP      reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    EQUAL_OP        reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    BIGGER_THAN     reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    LESS_THAN       reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    BIGGER_EQUAL_THAN reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    LESS_EQUAL_THAN reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    R_PAREN         reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    AND             reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    OR              reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    SEMICOLON       reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    R_BRACKETS      reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)


state 149

    (70) terminoAuxiliar1 -> operadorEntre agregarOperador termino .

    MINUS_OP        reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    PLUS_OP         reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    COMMA           reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    N_EQUAL_OP      reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    EQUAL_OP        reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    BIGGER_THAN     reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    LESS_THAN       reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    BIGGER_EQUAL_THAN reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    LESS_EQUAL_THAN reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    R_PAREN         reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    AND             reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    OR              reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    SEMICOLON       reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    R_BRACKETS      reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)


state 150

    (71) terminoAuxiliar1 -> operadorPor agregarOperador termino .

    MINUS_OP        reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    PLUS_OP         reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    COMMA           reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    N_EQUAL_OP      reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    EQUAL_OP        reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    BIGGER_THAN     reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    LESS_THAN       reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    BIGGER_EQUAL_THAN reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    LESS_EQUAL_THAN reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    R_PAREN         reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    AND             reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    OR              reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    SEMICOLON       reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    R_BRACKETS      reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)


state 151

    (139) llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 . R_PAREN generarAccionGoSub

    R_PAREN         shift and go to state 173


state 152

    (140) llamadaAuxiliar1 -> llamadaAuxiliar2 . generarAccionParam llamadaAuxiliar3
    (45) generarAccionParam -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)

    generarAccionParam             shift and go to state 174
    empty                          shift and go to state 175

state 153

    (141) llamadaAuxiliar1 -> empty .

    R_PAREN         reduce using rule 141 (llamadaAuxiliar1 -> empty .)


state 154

    (142) llamadaAuxiliar2 -> exp .

    COMMA           reduce using rule 142 (llamadaAuxiliar2 -> exp .)
    R_PAREN         reduce using rule 142 (llamadaAuxiliar2 -> exp .)


state 155

    (143) llamadaAuxiliar2 -> sp_cte . agregarOperando
    (21) agregarOperando -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)

    agregarOperando                shift and go to state 176
    empty                          shift and go to state 177

state 156

    (185) sp_cte -> CTE_STRING .

    COMMA           reduce using rule 185 (sp_cte -> CTE_STRING .)
    R_PAREN         reduce using rule 185 (sp_cte -> CTE_STRING .)
    SEMICOLON       reduce using rule 185 (sp_cte -> CTE_STRING .)
    R_BRACKETS      reduce using rule 185 (sp_cte -> CTE_STRING .)


state 157

    (186) sp_cte -> cte_bool .

    COMMA           reduce using rule 186 (sp_cte -> cte_bool .)
    R_PAREN         reduce using rule 186 (sp_cte -> cte_bool .)
    SEMICOLON       reduce using rule 186 (sp_cte -> cte_bool .)
    R_BRACKETS      reduce using rule 186 (sp_cte -> cte_bool .)


state 158

    (187) cte_bool -> VERDADERO .

    COMMA           reduce using rule 187 (cte_bool -> VERDADERO .)
    R_PAREN         reduce using rule 187 (cte_bool -> VERDADERO .)
    R_BRACES        reduce using rule 187 (cte_bool -> VERDADERO .)
    SEMICOLON       reduce using rule 187 (cte_bool -> VERDADERO .)
    R_BRACKETS      reduce using rule 187 (cte_bool -> VERDADERO .)


state 159

    (188) cte_bool -> FALSO .

    COMMA           reduce using rule 188 (cte_bool -> FALSO .)
    R_PAREN         reduce using rule 188 (cte_bool -> FALSO .)
    R_BRACES        reduce using rule 188 (cte_bool -> FALSO .)
    SEMICOLON       reduce using rule 188 (cte_bool -> FALSO .)
    R_BRACKETS      reduce using rule 188 (cte_bool -> FALSO .)


state 160

    (67) variablesAuxiliar3 -> variablesAuxiliar1 . ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3

    ID              shift and go to state 178


state 161

    (62) variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .

    PANTALLA        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    FIGURAS         reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    GRAVEDAD        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    FUNCIONES       reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    APOLO           reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    ID              reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    SI              reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    IMPRIMIR        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    CICLO           reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    REGRESAR        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    DIBUJAR         reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    DIBUJAR_LINEA   reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    R_BRACES        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)


state 162

    (68) variablesAuxiliar3 -> empty .

    PANTALLA        reduce using rule 68 (variablesAuxiliar3 -> empty .)
    FIGURAS         reduce using rule 68 (variablesAuxiliar3 -> empty .)
    GRAVEDAD        reduce using rule 68 (variablesAuxiliar3 -> empty .)
    FUNCIONES       reduce using rule 68 (variablesAuxiliar3 -> empty .)
    APOLO           reduce using rule 68 (variablesAuxiliar3 -> empty .)
    ID              reduce using rule 68 (variablesAuxiliar3 -> empty .)
    SI              reduce using rule 68 (variablesAuxiliar3 -> empty .)
    IMPRIMIR        reduce using rule 68 (variablesAuxiliar3 -> empty .)
    CICLO           reduce using rule 68 (variablesAuxiliar3 -> empty .)
    REGRESAR        reduce using rule 68 (variablesAuxiliar3 -> empty .)
    DIBUJAR         reduce using rule 68 (variablesAuxiliar3 -> empty .)
    DIBUJAR_LINEA   reduce using rule 68 (variablesAuxiliar3 -> empty .)
    R_BRACES        reduce using rule 68 (variablesAuxiliar3 -> empty .)


state 163

    (65) variablesAuxiliar2 -> COMMA ID agregaVarTabla . variablesAuxiliar2
    (65) variablesAuxiliar2 -> . COMMA ID agregaVarTabla variablesAuxiliar2
    (66) variablesAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 109
    SEMICOLON       reduce using rule 195 (empty -> .)

    variablesAuxiliar2             shift and go to state 179
    empty                          shift and go to state 110

state 164

    (174) tipo_lista -> LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS .

    ID              reduce using rule 174 (tipo_lista -> LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS .)


state 165

    (12) apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla creaTablaVar . bloque
    (123) bloque -> . L_BRACES bloqueAuxiliar1 R_BRACES

    L_BRACES        shift and go to state 181

    bloque                         shift and go to state 180

state 166

    (53) creaTablaVar -> empty .

    L_BRACES        reduce using rule 53 (creaTablaVar -> empty .)
    L_PAREN         reduce using rule 53 (creaTablaVar -> empty .)


state 167

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla . creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (53) creaTablaVar -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)

    creaTablaVar                   shift and go to state 182
    empty                          shift and go to state 166

state 168

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN . SEMICOLON agregarCuadYCompSemGravedad

    SEMICOLON       shift and go to state 183


state 169

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES . figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (95) figura_atributos -> . MEDIDA COLON CTE_I
    (96) figura_atributos -> . figura_atributosAuxiliar1 COLON CTE_F
    (97) figura_atributos -> . MOVIBLE COLON cte_bool
    (98) figura_atributos -> . COLOR COLON color_cte
    (99) figura_atributosAuxiliar1 -> . FRICCION
    (100) figura_atributosAuxiliar1 -> . MASA
    (101) figura_atributosAuxiliar1 -> . REBOTE

    MEDIDA          shift and go to state 185
    MOVIBLE         shift and go to state 187
    COLOR           shift and go to state 188
    FRICCION        shift and go to state 189
    MASA            shift and go to state 190
    REBOTE          shift and go to state 191

    figura_atributos               shift and go to state 184
    figura_atributosAuxiliar1      shift and go to state 186

state 170

    (147) expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp . comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
    (19) comprobarSemanticaOperadoresRelacionales -> . empty
    (195) empty -> .

    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    comprobarSemanticaOperadoresRelacionales shift and go to state 192
    empty                          shift and go to state 193

state 171

    (77) pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .

    FIGURAS         reduce using rule 77 (pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .)
    GRAVEDAD        reduce using rule 77 (pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .)
    FUNCIONES       reduce using rule 77 (pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .)
    APOLO           reduce using rule 77 (pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .)


state 172

    (24) agregarCuadYCompSemPantalla -> empty .

    FIGURAS         reduce using rule 24 (agregarCuadYCompSemPantalla -> empty .)
    GRAVEDAD        reduce using rule 24 (agregarCuadYCompSemPantalla -> empty .)
    FUNCIONES       reduce using rule 24 (agregarCuadYCompSemPantalla -> empty .)
    APOLO           reduce using rule 24 (agregarCuadYCompSemPantalla -> empty .)


state 173

    (139) llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN . generarAccionGoSub
    (46) generarAccionGoSub -> . empty
    (195) empty -> .

    DIV_OP          reduce using rule 195 (empty -> .)
    TIMES_OP        reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    N_EQUAL_OP      reduce using rule 195 (empty -> .)
    EQUAL_OP        reduce using rule 195 (empty -> .)
    BIGGER_THAN     reduce using rule 195 (empty -> .)
    LESS_THAN       reduce using rule 195 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 195 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)
    AND             reduce using rule 195 (empty -> .)
    OR              reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    R_BRACKETS      reduce using rule 195 (empty -> .)

    generarAccionGoSub             shift and go to state 194
    empty                          shift and go to state 195

state 174

    (140) llamadaAuxiliar1 -> llamadaAuxiliar2 generarAccionParam . llamadaAuxiliar3
    (144) llamadaAuxiliar3 -> . COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
    (145) llamadaAuxiliar3 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 197
    R_PAREN         reduce using rule 195 (empty -> .)

    llamadaAuxiliar3               shift and go to state 196
    empty                          shift and go to state 198

state 175

    (45) generarAccionParam -> empty .

    COMMA           reduce using rule 45 (generarAccionParam -> empty .)
    R_PAREN         reduce using rule 45 (generarAccionParam -> empty .)


state 176

    (143) llamadaAuxiliar2 -> sp_cte agregarOperando .

    COMMA           reduce using rule 143 (llamadaAuxiliar2 -> sp_cte agregarOperando .)
    R_PAREN         reduce using rule 143 (llamadaAuxiliar2 -> sp_cte agregarOperando .)


state 177

    (21) agregarOperando -> empty .

    COMMA           reduce using rule 21 (agregarOperando -> empty .)
    R_PAREN         reduce using rule 21 (agregarOperando -> empty .)
    SEMICOLON       reduce using rule 21 (agregarOperando -> empty .)


state 178

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID . agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (55) agregaVarTabla -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    agregaVarTabla                 shift and go to state 199
    empty                          shift and go to state 75

state 179

    (65) variablesAuxiliar2 -> COMMA ID agregaVarTabla variablesAuxiliar2 .

    SEMICOLON       reduce using rule 65 (variablesAuxiliar2 -> COMMA ID agregaVarTabla variablesAuxiliar2 .)


state 180

    (12) apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla creaTablaVar bloque .

    $end            reduce using rule 12 (apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla creaTablaVar bloque .)


state 181

    (123) bloque -> L_BRACES . bloqueAuxiliar1 R_BRACES
    (124) bloqueAuxiliar1 -> . empty
    (125) bloqueAuxiliar1 -> . estatuto bloqueAuxiliar1
    (195) empty -> .
    (108) estatuto -> . asignacion SEMICOLON
    (109) estatuto -> . condicion
    (110) estatuto -> . escritura
    (111) estatuto -> . ciclo
    (112) estatuto -> . dibujar
    (113) estatuto -> . llamada SEMICOLON
    (114) estatuto -> . incremento SEMICOLON
    (115) estatuto -> . retorno
    (129) asignacion -> . ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (120) condicion -> . SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (134) escritura -> . IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (119) ciclo -> . CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (116) dibujar -> . dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (73) retorno -> . REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (117) dibujarAuxiliar1 -> . DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (118) dibujarAuxiliar1 -> . DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp

    R_BRACES        reduce using rule 195 (empty -> .)
    ID              shift and go to state 211
    SI              shift and go to state 212
    IMPRIMIR        shift and go to state 213
    CICLO           shift and go to state 214
    REGRESAR        shift and go to state 216
    DIBUJAR         shift and go to state 217
    DIBUJAR_LINEA   shift and go to state 218

    bloqueAuxiliar1                shift and go to state 200
    empty                          shift and go to state 201
    estatuto                       shift and go to state 202
    asignacion                     shift and go to state 203
    condicion                      shift and go to state 204
    escritura                      shift and go to state 205
    ciclo                          shift and go to state 206
    dibujar                        shift and go to state 207
    llamada                        shift and go to state 208
    incremento                     shift and go to state 209
    retorno                        shift and go to state 210
    dibujarAuxiliar1               shift and go to state 215

state 182

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar . L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    L_PAREN         shift and go to state 219


state 183

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON . agregarCuadYCompSemGravedad
    (26) agregarCuadYCompSemGravedad -> . empty
    (195) empty -> .

    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)

    agregarCuadYCompSemGravedad    shift and go to state 220
    empty                          shift and go to state 221

state 184

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos . figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (102) figura_atributosAuxiliar2 -> . COMMA figura_atributos figura_atributosAuxiliar2
    (103) figura_atributosAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 223
    R_BRACES        reduce using rule 195 (empty -> .)

    figura_atributosAuxiliar2      shift and go to state 222
    empty                          shift and go to state 224

state 185

    (95) figura_atributos -> MEDIDA . COLON CTE_I

    COLON           shift and go to state 225


state 186

    (96) figura_atributos -> figura_atributosAuxiliar1 . COLON CTE_F

    COLON           shift and go to state 226


state 187

    (97) figura_atributos -> MOVIBLE . COLON cte_bool

    COLON           shift and go to state 227


state 188

    (98) figura_atributos -> COLOR . COLON color_cte

    COLON           shift and go to state 228


state 189

    (99) figura_atributosAuxiliar1 -> FRICCION .

    COLON           reduce using rule 99 (figura_atributosAuxiliar1 -> FRICCION .)


state 190

    (100) figura_atributosAuxiliar1 -> MASA .

    COLON           reduce using rule 100 (figura_atributosAuxiliar1 -> MASA .)


state 191

    (101) figura_atributosAuxiliar1 -> REBOTE .

    COLON           reduce using rule 101 (figura_atributosAuxiliar1 -> REBOTE .)


state 192

    (147) expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales . expresionAuxiliar3
    (155) expresionAuxiliar3 -> . expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO
    (156) expresionAuxiliar3 -> . empty
    (157) expresionAuxiliar4 -> . operadorY
    (158) expresionAuxiliar4 -> . operadorO
    (195) empty -> .
    (193) operadorY -> . AND
    (194) operadorO -> . OR

    R_PAREN         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)
    AND             shift and go to state 234
    OR              shift and go to state 235

    expresionAuxiliar3             shift and go to state 229
    expresionAuxiliar4             shift and go to state 230
    empty                          shift and go to state 231
    operadorY                      shift and go to state 232
    operadorO                      shift and go to state 233

state 193

    (19) comprobarSemanticaOperadoresRelacionales -> empty .

    AND             reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)
    OR              reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)
    R_PAREN         reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)
    COMMA           reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)
    SEMICOLON       reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)


state 194

    (139) llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .

    DIV_OP          reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    TIMES_OP        reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    MINUS_OP        reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    PLUS_OP         reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    COMMA           reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    N_EQUAL_OP      reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    EQUAL_OP        reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    BIGGER_THAN     reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    LESS_THAN       reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    BIGGER_EQUAL_THAN reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    LESS_EQUAL_THAN reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    R_PAREN         reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    AND             reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    OR              reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    SEMICOLON       reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    R_BRACKETS      reduce using rule 139 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)


state 195

    (46) generarAccionGoSub -> empty .

    DIV_OP          reduce using rule 46 (generarAccionGoSub -> empty .)
    TIMES_OP        reduce using rule 46 (generarAccionGoSub -> empty .)
    MINUS_OP        reduce using rule 46 (generarAccionGoSub -> empty .)
    PLUS_OP         reduce using rule 46 (generarAccionGoSub -> empty .)
    COMMA           reduce using rule 46 (generarAccionGoSub -> empty .)
    N_EQUAL_OP      reduce using rule 46 (generarAccionGoSub -> empty .)
    EQUAL_OP        reduce using rule 46 (generarAccionGoSub -> empty .)
    BIGGER_THAN     reduce using rule 46 (generarAccionGoSub -> empty .)
    LESS_THAN       reduce using rule 46 (generarAccionGoSub -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 46 (generarAccionGoSub -> empty .)
    LESS_EQUAL_THAN reduce using rule 46 (generarAccionGoSub -> empty .)
    R_PAREN         reduce using rule 46 (generarAccionGoSub -> empty .)
    AND             reduce using rule 46 (generarAccionGoSub -> empty .)
    OR              reduce using rule 46 (generarAccionGoSub -> empty .)
    SEMICOLON       reduce using rule 46 (generarAccionGoSub -> empty .)
    R_BRACKETS      reduce using rule 46 (generarAccionGoSub -> empty .)


state 196

    (140) llamadaAuxiliar1 -> llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3 .

    R_PAREN         reduce using rule 140 (llamadaAuxiliar1 -> llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3 .)


state 197

    (144) llamadaAuxiliar3 -> COMMA . llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
    (142) llamadaAuxiliar2 -> . exp
    (143) llamadaAuxiliar2 -> . sp_cte agregarOperando
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (185) sp_cte -> . CTE_STRING
    (186) sp_cte -> . cte_bool
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    CTE_STRING      shift and go to state 156
    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    llamadaAuxiliar2               shift and go to state 236
    exp                            shift and go to state 154
    sp_cte                         shift and go to state 155
    termino                        shift and go to state 41
    cte_bool                       shift and go to state 157
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 198

    (145) llamadaAuxiliar3 -> empty .

    R_PAREN         reduce using rule 145 (llamadaAuxiliar3 -> empty .)


state 199

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla . variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (65) variablesAuxiliar2 -> . COMMA ID agregaVarTabla variablesAuxiliar2
    (66) variablesAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 109
    SEMICOLON       reduce using rule 195 (empty -> .)

    variablesAuxiliar2             shift and go to state 237
    empty                          shift and go to state 110

state 200

    (123) bloque -> L_BRACES bloqueAuxiliar1 . R_BRACES

    R_BRACES        shift and go to state 238


state 201

    (124) bloqueAuxiliar1 -> empty .

    R_BRACES        reduce using rule 124 (bloqueAuxiliar1 -> empty .)


state 202

    (125) bloqueAuxiliar1 -> estatuto . bloqueAuxiliar1
    (124) bloqueAuxiliar1 -> . empty
    (125) bloqueAuxiliar1 -> . estatuto bloqueAuxiliar1
    (195) empty -> .
    (108) estatuto -> . asignacion SEMICOLON
    (109) estatuto -> . condicion
    (110) estatuto -> . escritura
    (111) estatuto -> . ciclo
    (112) estatuto -> . dibujar
    (113) estatuto -> . llamada SEMICOLON
    (114) estatuto -> . incremento SEMICOLON
    (115) estatuto -> . retorno
    (129) asignacion -> . ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (120) condicion -> . SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (134) escritura -> . IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (119) ciclo -> . CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (116) dibujar -> . dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (73) retorno -> . REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (117) dibujarAuxiliar1 -> . DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (118) dibujarAuxiliar1 -> . DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp

    R_BRACES        reduce using rule 195 (empty -> .)
    ID              shift and go to state 211
    SI              shift and go to state 212
    IMPRIMIR        shift and go to state 213
    CICLO           shift and go to state 214
    REGRESAR        shift and go to state 216
    DIBUJAR         shift and go to state 217
    DIBUJAR_LINEA   shift and go to state 218

    estatuto                       shift and go to state 202
    bloqueAuxiliar1                shift and go to state 239
    empty                          shift and go to state 201
    asignacion                     shift and go to state 203
    condicion                      shift and go to state 204
    escritura                      shift and go to state 205
    ciclo                          shift and go to state 206
    dibujar                        shift and go to state 207
    llamada                        shift and go to state 208
    incremento                     shift and go to state 209
    retorno                        shift and go to state 210
    dibujarAuxiliar1               shift and go to state 215

state 203

    (108) estatuto -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 240


state 204

    (109) estatuto -> condicion .

    ID              reduce using rule 109 (estatuto -> condicion .)
    SI              reduce using rule 109 (estatuto -> condicion .)
    IMPRIMIR        reduce using rule 109 (estatuto -> condicion .)
    CICLO           reduce using rule 109 (estatuto -> condicion .)
    REGRESAR        reduce using rule 109 (estatuto -> condicion .)
    DIBUJAR         reduce using rule 109 (estatuto -> condicion .)
    DIBUJAR_LINEA   reduce using rule 109 (estatuto -> condicion .)
    R_BRACES        reduce using rule 109 (estatuto -> condicion .)


state 205

    (110) estatuto -> escritura .

    ID              reduce using rule 110 (estatuto -> escritura .)
    SI              reduce using rule 110 (estatuto -> escritura .)
    IMPRIMIR        reduce using rule 110 (estatuto -> escritura .)
    CICLO           reduce using rule 110 (estatuto -> escritura .)
    REGRESAR        reduce using rule 110 (estatuto -> escritura .)
    DIBUJAR         reduce using rule 110 (estatuto -> escritura .)
    DIBUJAR_LINEA   reduce using rule 110 (estatuto -> escritura .)
    R_BRACES        reduce using rule 110 (estatuto -> escritura .)


state 206

    (111) estatuto -> ciclo .

    ID              reduce using rule 111 (estatuto -> ciclo .)
    SI              reduce using rule 111 (estatuto -> ciclo .)
    IMPRIMIR        reduce using rule 111 (estatuto -> ciclo .)
    CICLO           reduce using rule 111 (estatuto -> ciclo .)
    REGRESAR        reduce using rule 111 (estatuto -> ciclo .)
    DIBUJAR         reduce using rule 111 (estatuto -> ciclo .)
    DIBUJAR_LINEA   reduce using rule 111 (estatuto -> ciclo .)
    R_BRACES        reduce using rule 111 (estatuto -> ciclo .)


state 207

    (112) estatuto -> dibujar .

    ID              reduce using rule 112 (estatuto -> dibujar .)
    SI              reduce using rule 112 (estatuto -> dibujar .)
    IMPRIMIR        reduce using rule 112 (estatuto -> dibujar .)
    CICLO           reduce using rule 112 (estatuto -> dibujar .)
    REGRESAR        reduce using rule 112 (estatuto -> dibujar .)
    DIBUJAR         reduce using rule 112 (estatuto -> dibujar .)
    DIBUJAR_LINEA   reduce using rule 112 (estatuto -> dibujar .)
    R_BRACES        reduce using rule 112 (estatuto -> dibujar .)


state 208

    (113) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 241


state 209

    (114) estatuto -> incremento . SEMICOLON

    SEMICOLON       shift and go to state 242


state 210

    (115) estatuto -> retorno .

    ID              reduce using rule 115 (estatuto -> retorno .)
    SI              reduce using rule 115 (estatuto -> retorno .)
    IMPRIMIR        reduce using rule 115 (estatuto -> retorno .)
    CICLO           reduce using rule 115 (estatuto -> retorno .)
    REGRESAR        reduce using rule 115 (estatuto -> retorno .)
    DIBUJAR         reduce using rule 115 (estatuto -> retorno .)
    DIBUJAR_LINEA   reduce using rule 115 (estatuto -> retorno .)
    R_BRACES        reduce using rule 115 (estatuto -> retorno .)


state 211

    (129) asignacion -> ID . checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (139) llamada -> ID . checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> ID . checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (54) checarDefID -> . empty
    (43) checarSiExisteFuncion -> . empty
    (195) empty -> .

    ASSIGN_OP       reduce using rule 195 (empty -> .)
    PLUS_EQUAL_OP   reduce using rule 195 (empty -> .)
    MINUS_EQUAL_OP  reduce using rule 195 (empty -> .)
    L_PAREN         reduce using rule 195 (empty -> .)

    checarDefID                    shift and go to state 243
    checarSiExisteFuncion          shift and go to state 72
    empty                          shift and go to state 73

state 212

    (120) condicion -> SI . L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof

    L_PAREN         shift and go to state 244


state 213

    (134) escritura -> IMPRIMIR . L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON

    L_PAREN         shift and go to state 245


state 214

    (119) ciclo -> CICLO . L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo

    L_PAREN         shift and go to state 246


state 215

    (116) dibujar -> dibujarAuxiliar1 . COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen

    COMMA           shift and go to state 247


state 216

    (73) retorno -> REGRESAR . checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (40) checarRetorno -> . empty
    (195) empty -> .

    CTE_STRING      reduce using rule 195 (empty -> .)
    VERDADERO       reduce using rule 195 (empty -> .)
    FALSO           reduce using rule 195 (empty -> .)
    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    checarRetorno                  shift and go to state 248
    empty                          shift and go to state 249

state 217

    (117) dibujarAuxiliar1 -> DIBUJAR . agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (31) agregarOperadorDibujar -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)

    agregarOperadorDibujar         shift and go to state 250
    empty                          shift and go to state 251

state 218

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA . agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp
    (30) agregarOperadorDibujarLinea -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)

    agregarOperadorDibujarLinea    shift and go to state 252
    empty                          shift and go to state 253

state 219

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN . tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (175) tipo -> . ENTERO
    (176) tipo -> . FLOTANTE
    (177) tipo -> . BOOLEANO
    (178) tipo -> . TEXTO

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31

    tipo                           shift and go to state 254

state 220

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad .

    FUNCIONES       reduce using rule 78 (gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad .)
    APOLO           reduce using rule 78 (gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad .)


state 221

    (26) agregarCuadYCompSemGravedad -> empty .

    FUNCIONES       reduce using rule 26 (agregarCuadYCompSemGravedad -> empty .)
    APOLO           reduce using rule 26 (agregarCuadYCompSemGravedad -> empty .)


state 222

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 . R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON

    R_BRACES        shift and go to state 255


state 223

    (102) figura_atributosAuxiliar2 -> COMMA . figura_atributos figura_atributosAuxiliar2
    (95) figura_atributos -> . MEDIDA COLON CTE_I
    (96) figura_atributos -> . figura_atributosAuxiliar1 COLON CTE_F
    (97) figura_atributos -> . MOVIBLE COLON cte_bool
    (98) figura_atributos -> . COLOR COLON color_cte
    (99) figura_atributosAuxiliar1 -> . FRICCION
    (100) figura_atributosAuxiliar1 -> . MASA
    (101) figura_atributosAuxiliar1 -> . REBOTE

    MEDIDA          shift and go to state 185
    MOVIBLE         shift and go to state 187
    COLOR           shift and go to state 188
    FRICCION        shift and go to state 189
    MASA            shift and go to state 190
    REBOTE          shift and go to state 191

    figura_atributos               shift and go to state 256
    figura_atributosAuxiliar1      shift and go to state 186

state 224

    (103) figura_atributosAuxiliar2 -> empty .

    R_BRACES        reduce using rule 103 (figura_atributosAuxiliar2 -> empty .)


state 225

    (95) figura_atributos -> MEDIDA COLON . CTE_I

    CTE_I           shift and go to state 257


state 226

    (96) figura_atributos -> figura_atributosAuxiliar1 COLON . CTE_F

    CTE_F           shift and go to state 258


state 227

    (97) figura_atributos -> MOVIBLE COLON . cte_bool
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO

    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159

    cte_bool                       shift and go to state 259

state 228

    (98) figura_atributos -> COLOR COLON . color_cte
    (179) color_cte -> . ROJO
    (180) color_cte -> . VERDE
    (181) color_cte -> . AZUL
    (182) color_cte -> . AMARILLO
    (183) color_cte -> . ROSA
    (184) color_cte -> . VIOLETA

    ROJO            shift and go to state 261
    VERDE           shift and go to state 262
    AZUL            shift and go to state 263
    AMARILLO        shift and go to state 264
    ROSA            shift and go to state 265
    VIOLETA         shift and go to state 266

    color_cte                      shift and go to state 260

state 229

    (147) expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3 .

    R_PAREN         reduce using rule 147 (expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3 .)
    COMMA           reduce using rule 147 (expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3 .)
    SEMICOLON       reduce using rule 147 (expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3 .)


state 230

    (155) expresionAuxiliar3 -> expresionAuxiliar4 . agregarOperador expresion compSemYGenCuadYO
    (14) agregarOperador -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarOperador                shift and go to state 267
    empty                          shift and go to state 129

state 231

    (156) expresionAuxiliar3 -> empty .

    R_PAREN         reduce using rule 156 (expresionAuxiliar3 -> empty .)
    COMMA           reduce using rule 156 (expresionAuxiliar3 -> empty .)
    SEMICOLON       reduce using rule 156 (expresionAuxiliar3 -> empty .)


state 232

    (157) expresionAuxiliar4 -> operadorY .

    L_PAREN         reduce using rule 157 (expresionAuxiliar4 -> operadorY .)
    PLUS_OP         reduce using rule 157 (expresionAuxiliar4 -> operadorY .)
    MINUS_OP        reduce using rule 157 (expresionAuxiliar4 -> operadorY .)
    ID              reduce using rule 157 (expresionAuxiliar4 -> operadorY .)
    CTE_I           reduce using rule 157 (expresionAuxiliar4 -> operadorY .)
    CTE_F           reduce using rule 157 (expresionAuxiliar4 -> operadorY .)


state 233

    (158) expresionAuxiliar4 -> operadorO .

    L_PAREN         reduce using rule 158 (expresionAuxiliar4 -> operadorO .)
    PLUS_OP         reduce using rule 158 (expresionAuxiliar4 -> operadorO .)
    MINUS_OP        reduce using rule 158 (expresionAuxiliar4 -> operadorO .)
    ID              reduce using rule 158 (expresionAuxiliar4 -> operadorO .)
    CTE_I           reduce using rule 158 (expresionAuxiliar4 -> operadorO .)
    CTE_F           reduce using rule 158 (expresionAuxiliar4 -> operadorO .)


state 234

    (193) operadorY -> AND .

    L_PAREN         reduce using rule 193 (operadorY -> AND .)
    PLUS_OP         reduce using rule 193 (operadorY -> AND .)
    MINUS_OP        reduce using rule 193 (operadorY -> AND .)
    ID              reduce using rule 193 (operadorY -> AND .)
    CTE_I           reduce using rule 193 (operadorY -> AND .)
    CTE_F           reduce using rule 193 (operadorY -> AND .)


state 235

    (194) operadorO -> OR .

    L_PAREN         reduce using rule 194 (operadorO -> OR .)
    PLUS_OP         reduce using rule 194 (operadorO -> OR .)
    MINUS_OP        reduce using rule 194 (operadorO -> OR .)
    ID              reduce using rule 194 (operadorO -> OR .)
    CTE_I           reduce using rule 194 (operadorO -> OR .)
    CTE_F           reduce using rule 194 (operadorO -> OR .)


state 236

    (144) llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 . generarAccionParam llamadaAuxiliar3
    (45) generarAccionParam -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)

    generarAccionParam             shift and go to state 268
    empty                          shift and go to state 175

state 237

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 . SEMICOLON variablesAuxiliar3

    SEMICOLON       shift and go to state 269


state 238

    (123) bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .

    $end            reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    SI_NO           reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    SEMICOLON       reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    ID              reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    SI              reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    IMPRIMIR        reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    CICLO           reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    REGRESAR        reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    DIBUJAR         reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    DIBUJAR_LINEA   reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    R_BRACES        reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)


state 239

    (125) bloqueAuxiliar1 -> estatuto bloqueAuxiliar1 .

    R_BRACES        reduce using rule 125 (bloqueAuxiliar1 -> estatuto bloqueAuxiliar1 .)


state 240

    (108) estatuto -> asignacion SEMICOLON .

    ID              reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    SI              reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    IMPRIMIR        reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    CICLO           reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    REGRESAR        reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    DIBUJAR         reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    DIBUJAR_LINEA   reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    R_BRACES        reduce using rule 108 (estatuto -> asignacion SEMICOLON .)


state 241

    (113) estatuto -> llamada SEMICOLON .

    ID              reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    SI              reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    IMPRIMIR        reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    CICLO           reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    REGRESAR        reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    DIBUJAR         reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    DIBUJAR_LINEA   reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    R_BRACES        reduce using rule 113 (estatuto -> llamada SEMICOLON .)


state 242

    (114) estatuto -> incremento SEMICOLON .

    ID              reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    SI              reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    IMPRIMIR        reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    CICLO           reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    REGRESAR        reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    DIBUJAR         reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    DIBUJAR_LINEA   reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    R_BRACES        reduce using rule 114 (estatuto -> incremento SEMICOLON .)


state 243

    (129) asignacion -> ID checarDefID . agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (126) incremento -> ID checarDefID . agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (13) agregarIdHaciaPilas -> . empty
    (195) empty -> .

    ASSIGN_OP       reduce using rule 195 (empty -> .)
    PLUS_EQUAL_OP   reduce using rule 195 (empty -> .)
    MINUS_EQUAL_OP  reduce using rule 195 (empty -> .)

    agregarIdHaciaPilas            shift and go to state 270
    empty                          shift and go to state 105

state 244

    (120) condicion -> SI L_PAREN . expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (146) expresion -> . exp expresionAuxiliar1
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    expresion                      shift and go to state 271
    exp                            shift and go to state 90
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 245

    (134) escritura -> IMPRIMIR L_PAREN . escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (135) escrituraAuxiliar1 -> . expresion agregarCuadEScrituraExpresion
    (136) escrituraAuxiliar1 -> . sp_cte agregarCuadEscrituraSPCTE
    (146) expresion -> . exp expresionAuxiliar1
    (185) sp_cte -> . CTE_STRING
    (186) sp_cte -> . cte_bool
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    CTE_STRING      shift and go to state 156
    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    escrituraAuxiliar1             shift and go to state 272
    expresion                      shift and go to state 273
    sp_cte                         shift and go to state 274
    exp                            shift and go to state 90
    cte_bool                       shift and go to state 157
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 246

    (119) ciclo -> CICLO L_PAREN . asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (129) asignacion -> . ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion

    ID              shift and go to state 276

    asignacion                     shift and go to state 275

state 247

    (116) dibujar -> dibujarAuxiliar1 COMMA . exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 277
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 248

    (73) retorno -> REGRESAR checarRetorno . agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (41) agregarOperadorRetorno -> . empty
    (195) empty -> .

    CTE_STRING      reduce using rule 195 (empty -> .)
    VERDADERO       reduce using rule 195 (empty -> .)
    FALSO           reduce using rule 195 (empty -> .)
    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    agregarOperadorRetorno         shift and go to state 278
    empty                          shift and go to state 279

state 249

    (40) checarRetorno -> empty .

    CTE_STRING      reduce using rule 40 (checarRetorno -> empty .)
    VERDADERO       reduce using rule 40 (checarRetorno -> empty .)
    FALSO           reduce using rule 40 (checarRetorno -> empty .)
    L_PAREN         reduce using rule 40 (checarRetorno -> empty .)
    PLUS_OP         reduce using rule 40 (checarRetorno -> empty .)
    MINUS_OP        reduce using rule 40 (checarRetorno -> empty .)
    ID              reduce using rule 40 (checarRetorno -> empty .)
    CTE_I           reduce using rule 40 (checarRetorno -> empty .)
    CTE_F           reduce using rule 40 (checarRetorno -> empty .)
    SEMICOLON       reduce using rule 40 (checarRetorno -> empty .)


state 250

    (117) dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar . L_PAREN ID checarSiExisteFiguraId

    L_PAREN         shift and go to state 280


state 251

    (31) agregarOperadorDibujar -> empty .

    L_PAREN         reduce using rule 31 (agregarOperadorDibujar -> empty .)


state 252

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea . L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp

    L_PAREN         shift and go to state 281


state 253

    (30) agregarOperadorDibujarLinea -> empty .

    L_PAREN         reduce using rule 30 (agregarOperadorDibujarLinea -> empty .)


state 254

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo . ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    ID              shift and go to state 282


state 255

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES . creaFigVar figurasAuxiliar1 SEMICOLON
    (61) creaFigVar -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    creaFigVar                     shift and go to state 283
    empty                          shift and go to state 284

state 256

    (102) figura_atributosAuxiliar2 -> COMMA figura_atributos . figura_atributosAuxiliar2
    (102) figura_atributosAuxiliar2 -> . COMMA figura_atributos figura_atributosAuxiliar2
    (103) figura_atributosAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 223
    R_BRACES        reduce using rule 195 (empty -> .)

    figura_atributosAuxiliar2      shift and go to state 285
    empty                          shift and go to state 224

state 257

    (95) figura_atributos -> MEDIDA COLON CTE_I .

    COMMA           reduce using rule 95 (figura_atributos -> MEDIDA COLON CTE_I .)
    R_BRACES        reduce using rule 95 (figura_atributos -> MEDIDA COLON CTE_I .)


state 258

    (96) figura_atributos -> figura_atributosAuxiliar1 COLON CTE_F .

    COMMA           reduce using rule 96 (figura_atributos -> figura_atributosAuxiliar1 COLON CTE_F .)
    R_BRACES        reduce using rule 96 (figura_atributos -> figura_atributosAuxiliar1 COLON CTE_F .)


state 259

    (97) figura_atributos -> MOVIBLE COLON cte_bool .

    COMMA           reduce using rule 97 (figura_atributos -> MOVIBLE COLON cte_bool .)
    R_BRACES        reduce using rule 97 (figura_atributos -> MOVIBLE COLON cte_bool .)


state 260

    (98) figura_atributos -> COLOR COLON color_cte .

    COMMA           reduce using rule 98 (figura_atributos -> COLOR COLON color_cte .)
    R_BRACES        reduce using rule 98 (figura_atributos -> COLOR COLON color_cte .)


state 261

    (179) color_cte -> ROJO .

    COMMA           reduce using rule 179 (color_cte -> ROJO .)
    R_BRACES        reduce using rule 179 (color_cte -> ROJO .)


state 262

    (180) color_cte -> VERDE .

    COMMA           reduce using rule 180 (color_cte -> VERDE .)
    R_BRACES        reduce using rule 180 (color_cte -> VERDE .)


state 263

    (181) color_cte -> AZUL .

    COMMA           reduce using rule 181 (color_cte -> AZUL .)
    R_BRACES        reduce using rule 181 (color_cte -> AZUL .)


state 264

    (182) color_cte -> AMARILLO .

    COMMA           reduce using rule 182 (color_cte -> AMARILLO .)
    R_BRACES        reduce using rule 182 (color_cte -> AMARILLO .)


state 265

    (183) color_cte -> ROSA .

    COMMA           reduce using rule 183 (color_cte -> ROSA .)
    R_BRACES        reduce using rule 183 (color_cte -> ROSA .)


state 266

    (184) color_cte -> VIOLETA .

    COMMA           reduce using rule 184 (color_cte -> VIOLETA .)
    R_BRACES        reduce using rule 184 (color_cte -> VIOLETA .)


state 267

    (155) expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador . expresion compSemYGenCuadYO
    (146) expresion -> . exp expresionAuxiliar1
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    expresion                      shift and go to state 286
    exp                            shift and go to state 90
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 268

    (144) llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 generarAccionParam . llamadaAuxiliar3
    (144) llamadaAuxiliar3 -> . COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
    (145) llamadaAuxiliar3 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 197
    R_PAREN         reduce using rule 195 (empty -> .)

    llamadaAuxiliar3               shift and go to state 287
    empty                          shift and go to state 198

state 269

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON . variablesAuxiliar3
    (67) variablesAuxiliar3 -> . variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (68) variablesAuxiliar3 -> . empty
    (63) variablesAuxiliar1 -> . tipo
    (64) variablesAuxiliar1 -> . tipo_lista
    (195) empty -> .
    (175) tipo -> . ENTERO
    (176) tipo -> . FLOTANTE
    (177) tipo -> . BOOLEANO
    (178) tipo -> . TEXTO
    (174) tipo_lista -> . LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS

    PANTALLA        reduce using rule 195 (empty -> .)
    FIGURAS         reduce using rule 195 (empty -> .)
    GRAVEDAD        reduce using rule 195 (empty -> .)
    FUNCIONES       reduce using rule 195 (empty -> .)
    APOLO           reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    SI              reduce using rule 195 (empty -> .)
    IMPRIMIR        reduce using rule 195 (empty -> .)
    CICLO           reduce using rule 195 (empty -> .)
    REGRESAR        reduce using rule 195 (empty -> .)
    DIBUJAR         reduce using rule 195 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 195 (empty -> .)
    R_BRACES        reduce using rule 195 (empty -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31
    LISTA           shift and go to state 32

    variablesAuxiliar1             shift and go to state 160
    variablesAuxiliar3             shift and go to state 288
    empty                          shift and go to state 162
    tipo                           shift and go to state 26
    tipo_lista                     shift and go to state 27

state 270

    (129) asignacion -> ID checarDefID agregarIdHaciaPilas . ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (126) incremento -> ID checarDefID agregarIdHaciaPilas . incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (127) incrementoAuxiliar1 -> . PLUS_EQUAL_OP
    (128) incrementoAuxiliar1 -> . MINUS_EQUAL_OP

    ASSIGN_OP       shift and go to state 289
    PLUS_EQUAL_OP   shift and go to state 291
    MINUS_EQUAL_OP  shift and go to state 292

    incrementoAuxiliar1            shift and go to state 290

state 271

    (120) condicion -> SI L_PAREN expresion . R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof

    R_PAREN         shift and go to state 293


state 272

    (134) escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 . escrituraAuxiliar2 R_PAREN SEMICOLON
    (137) escrituraAuxiliar2 -> . COMMA escrituraAuxiliar1 escrituraAuxiliar2
    (138) escrituraAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 295
    R_PAREN         reduce using rule 195 (empty -> .)

    escrituraAuxiliar2             shift and go to state 294
    empty                          shift and go to state 296

state 273

    (135) escrituraAuxiliar1 -> expresion . agregarCuadEScrituraExpresion
    (28) agregarCuadEScrituraExpresion -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)

    agregarCuadEScrituraExpresion  shift and go to state 297
    empty                          shift and go to state 298

state 274

    (136) escrituraAuxiliar1 -> sp_cte . agregarCuadEscrituraSPCTE
    (29) agregarCuadEscrituraSPCTE -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)

    agregarCuadEscrituraSPCTE      shift and go to state 299
    empty                          shift and go to state 300

state 275

    (119) ciclo -> CICLO L_PAREN asignacion . SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo

    SEMICOLON       shift and go to state 301


state 276

    (129) asignacion -> ID . checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (54) checarDefID -> . empty
    (195) empty -> .

    ASSIGN_OP       reduce using rule 195 (empty -> .)

    checarDefID                    shift and go to state 302
    empty                          shift and go to state 303

state 277

    (116) dibujar -> dibujarAuxiliar1 COMMA exp . COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen

    COMMA           shift and go to state 304


state 278

    (73) retorno -> REGRESAR checarRetorno agregarOperadorRetorno . retornoAuxiliar1 SEMICOLON genCuadRetorno
    (74) retornoAuxiliar1 -> . expresion
    (75) retornoAuxiliar1 -> . sp_cte agregarOperando
    (76) retornoAuxiliar1 -> . empty agregarOperandoVoid
    (146) expresion -> . exp expresionAuxiliar1
    (185) sp_cte -> . CTE_STRING
    (186) sp_cte -> . cte_bool
    (195) empty -> .
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    CTE_STRING      shift and go to state 156
    SEMICOLON       reduce using rule 195 (empty -> .)
    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    retornoAuxiliar1               shift and go to state 305
    expresion                      shift and go to state 306
    sp_cte                         shift and go to state 307
    empty                          shift and go to state 308
    exp                            shift and go to state 90
    cte_bool                       shift and go to state 157
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 279

    (41) agregarOperadorRetorno -> empty .

    CTE_STRING      reduce using rule 41 (agregarOperadorRetorno -> empty .)
    VERDADERO       reduce using rule 41 (agregarOperadorRetorno -> empty .)
    FALSO           reduce using rule 41 (agregarOperadorRetorno -> empty .)
    L_PAREN         reduce using rule 41 (agregarOperadorRetorno -> empty .)
    PLUS_OP         reduce using rule 41 (agregarOperadorRetorno -> empty .)
    MINUS_OP        reduce using rule 41 (agregarOperadorRetorno -> empty .)
    ID              reduce using rule 41 (agregarOperadorRetorno -> empty .)
    CTE_I           reduce using rule 41 (agregarOperadorRetorno -> empty .)
    CTE_F           reduce using rule 41 (agregarOperadorRetorno -> empty .)
    SEMICOLON       reduce using rule 41 (agregarOperadorRetorno -> empty .)


state 280

    (117) dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN . ID checarSiExisteFiguraId

    ID              shift and go to state 309


state 281

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN . ID checarSiExisteFiguraId COMMA exp COMMA exp

    ID              shift and go to state 310


state 282

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID . agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (57) agregaParamFunc -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)

    agregaParamFunc                shift and go to state 311
    empty                          shift and go to state 312

state 283

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar . figurasAuxiliar1 SEMICOLON
    (89) figurasAuxiliar1 -> . COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (90) figurasAuxiliar1 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 314
    SEMICOLON       reduce using rule 195 (empty -> .)

    figurasAuxiliar1               shift and go to state 313
    empty                          shift and go to state 315

state 284

    (61) creaFigVar -> empty .

    COMMA           reduce using rule 61 (creaFigVar -> empty .)
    SEMICOLON       reduce using rule 61 (creaFigVar -> empty .)


state 285

    (102) figura_atributosAuxiliar2 -> COMMA figura_atributos figura_atributosAuxiliar2 .

    R_BRACES        reduce using rule 102 (figura_atributosAuxiliar2 -> COMMA figura_atributos figura_atributosAuxiliar2 .)


state 286

    (155) expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion . compSemYGenCuadYO
    (20) compSemYGenCuadYO -> . empty
    (195) empty -> .

    R_PAREN         reduce using rule 195 (empty -> .)
    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    compSemYGenCuadYO              shift and go to state 316
    empty                          shift and go to state 317

state 287

    (144) llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3 .

    R_PAREN         reduce using rule 144 (llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3 .)


state 288

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .

    PANTALLA        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    FIGURAS         reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    GRAVEDAD        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    FUNCIONES       reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    APOLO           reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    ID              reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    SI              reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    IMPRIMIR        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    CICLO           reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    REGRESAR        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    DIBUJAR         reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    DIBUJAR_LINEA   reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    R_BRACES        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)


state 289

    (129) asignacion -> ID checarDefID agregarIdHaciaPilas ASSIGN_OP . agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (130) agregarOperadorAsignacion -> . empty
    (195) empty -> .

    L_BRACKETS      reduce using rule 195 (empty -> .)
    CTE_STRING      reduce using rule 195 (empty -> .)
    VERDADERO       reduce using rule 195 (empty -> .)
    FALSO           reduce using rule 195 (empty -> .)
    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarOperadorAsignacion      shift and go to state 318
    empty                          shift and go to state 319

state 290

    (126) incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 . agregarOperador exp agregarCuadYCompSemAsignacion
    (14) agregarOperador -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarOperador                shift and go to state 320
    empty                          shift and go to state 129

state 291

    (127) incrementoAuxiliar1 -> PLUS_EQUAL_OP .

    L_PAREN         reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    PLUS_OP         reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    MINUS_OP        reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    ID              reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    CTE_I           reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    CTE_F           reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)


state 292

    (128) incrementoAuxiliar1 -> MINUS_EQUAL_OP .

    L_PAREN         reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    PLUS_OP         reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    MINUS_OP        reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    ID              reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    CTE_I           reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    CTE_F           reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)


state 293

    (120) condicion -> SI L_PAREN expresion R_PAREN . generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (33) generarCuadCondicionGotoFIf -> . empty
    (195) empty -> .

    L_BRACES        reduce using rule 195 (empty -> .)

    generarCuadCondicionGotoFIf    shift and go to state 321
    empty                          shift and go to state 322

state 294

    (134) escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 . R_PAREN SEMICOLON

    R_PAREN         shift and go to state 323


state 295

    (137) escrituraAuxiliar2 -> COMMA . escrituraAuxiliar1 escrituraAuxiliar2
    (135) escrituraAuxiliar1 -> . expresion agregarCuadEScrituraExpresion
    (136) escrituraAuxiliar1 -> . sp_cte agregarCuadEscrituraSPCTE
    (146) expresion -> . exp expresionAuxiliar1
    (185) sp_cte -> . CTE_STRING
    (186) sp_cte -> . cte_bool
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    CTE_STRING      shift and go to state 156
    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    escrituraAuxiliar1             shift and go to state 324
    expresion                      shift and go to state 273
    sp_cte                         shift and go to state 274
    exp                            shift and go to state 90
    cte_bool                       shift and go to state 157
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 296

    (138) escrituraAuxiliar2 -> empty .

    R_PAREN         reduce using rule 138 (escrituraAuxiliar2 -> empty .)


state 297

    (135) escrituraAuxiliar1 -> expresion agregarCuadEScrituraExpresion .

    COMMA           reduce using rule 135 (escrituraAuxiliar1 -> expresion agregarCuadEScrituraExpresion .)
    R_PAREN         reduce using rule 135 (escrituraAuxiliar1 -> expresion agregarCuadEScrituraExpresion .)


state 298

    (28) agregarCuadEScrituraExpresion -> empty .

    COMMA           reduce using rule 28 (agregarCuadEScrituraExpresion -> empty .)
    R_PAREN         reduce using rule 28 (agregarCuadEScrituraExpresion -> empty .)


state 299

    (136) escrituraAuxiliar1 -> sp_cte agregarCuadEscrituraSPCTE .

    COMMA           reduce using rule 136 (escrituraAuxiliar1 -> sp_cte agregarCuadEscrituraSPCTE .)
    R_PAREN         reduce using rule 136 (escrituraAuxiliar1 -> sp_cte agregarCuadEscrituraSPCTE .)


state 300

    (29) agregarCuadEscrituraSPCTE -> empty .

    COMMA           reduce using rule 29 (agregarCuadEscrituraSPCTE -> empty .)
    R_PAREN         reduce using rule 29 (agregarCuadEscrituraSPCTE -> empty .)


state 301

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON . agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (36) agregarAPilaSaltosRegresoCiclo -> . empty
    (195) empty -> .

    L_PAREN         reduce using rule 195 (empty -> .)
    PLUS_OP         reduce using rule 195 (empty -> .)
    MINUS_OP        reduce using rule 195 (empty -> .)
    ID              reduce using rule 195 (empty -> .)
    CTE_I           reduce using rule 195 (empty -> .)
    CTE_F           reduce using rule 195 (empty -> .)

    agregarAPilaSaltosRegresoCiclo shift and go to state 325
    empty                          shift and go to state 326

state 302

    (129) asignacion -> ID checarDefID . agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (13) agregarIdHaciaPilas -> . empty
    (195) empty -> .

    ASSIGN_OP       reduce using rule 195 (empty -> .)

    agregarIdHaciaPilas            shift and go to state 327
    empty                          shift and go to state 105

state 303

    (54) checarDefID -> empty .

    ASSIGN_OP       reduce using rule 54 (checarDefID -> empty .)
    PLUS_EQUAL_OP   reduce using rule 54 (checarDefID -> empty .)
    MINUS_EQUAL_OP  reduce using rule 54 (checarDefID -> empty .)


state 304

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA . exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 328
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 305

    (73) retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 . SEMICOLON genCuadRetorno

    SEMICOLON       shift and go to state 329


state 306

    (74) retornoAuxiliar1 -> expresion .

    SEMICOLON       reduce using rule 74 (retornoAuxiliar1 -> expresion .)


state 307

    (75) retornoAuxiliar1 -> sp_cte . agregarOperando
    (21) agregarOperando -> . empty
    (195) empty -> .

    SEMICOLON       reduce using rule 195 (empty -> .)

    agregarOperando                shift and go to state 330
    empty                          shift and go to state 177

state 308

    (76) retornoAuxiliar1 -> empty . agregarOperandoVoid
    (42) agregarOperandoVoid -> . empty
    (195) empty -> .

    SEMICOLON       reduce using rule 195 (empty -> .)

    empty                          shift and go to state 331
    agregarOperandoVoid            shift and go to state 332

state 309

    (117) dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN ID . checarSiExisteFiguraId
    (47) checarSiExisteFiguraId -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)

    checarSiExisteFiguraId         shift and go to state 333
    empty                          shift and go to state 334

state 310

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID . checarSiExisteFiguraId COMMA exp COMMA exp
    (47) checarSiExisteFiguraId -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)

    checarSiExisteFiguraId         shift and go to state 335
    empty                          shift and go to state 334

state 311

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc . funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (82) funcionesAuxiliar2 -> . COMMA tipo ID agregaParamFunc funcionesAuxiliar2
    (83) funcionesAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 337
    R_PAREN         reduce using rule 195 (empty -> .)

    funcionesAuxiliar2             shift and go to state 336
    empty                          shift and go to state 338

state 312

    (57) agregaParamFunc -> empty .

    COMMA           reduce using rule 57 (agregaParamFunc -> empty .)
    R_PAREN         reduce using rule 57 (agregaParamFunc -> empty .)


state 313

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 . SEMICOLON

    SEMICOLON       shift and go to state 339


state 314

    (89) figurasAuxiliar1 -> COMMA . figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (91) figura -> . CUADRADO
    (92) figura -> . CIRCULO
    (93) figura -> . TRIANGULO
    (94) figura -> . LINEA

    CUADRADO        shift and go to state 85
    CIRCULO         shift and go to state 86
    TRIANGULO       shift and go to state 87
    LINEA           shift and go to state 88

    figura                         shift and go to state 340

state 315

    (90) figurasAuxiliar1 -> empty .

    SEMICOLON       reduce using rule 90 (figurasAuxiliar1 -> empty .)


state 316

    (155) expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO .

    R_PAREN         reduce using rule 155 (expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO .)
    COMMA           reduce using rule 155 (expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO .)
    SEMICOLON       reduce using rule 155 (expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO .)


state 317

    (20) compSemYGenCuadYO -> empty .

    R_PAREN         reduce using rule 20 (compSemYGenCuadYO -> empty .)
    COMMA           reduce using rule 20 (compSemYGenCuadYO -> empty .)
    SEMICOLON       reduce using rule 20 (compSemYGenCuadYO -> empty .)


state 318

    (129) asignacion -> ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion . asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (131) asignacionAuxiliar1 -> . expresion
    (132) asignacionAuxiliar1 -> . lista_cte agregarlistaAPilaOperando
    (133) asignacionAuxiliar1 -> . sp_cte agregarOperando
    (146) expresion -> . exp expresionAuxiliar1
    (169) lista_cte -> . L_BRACKETS lista_cteAuxiliar1 lista_cteAuxiliar2 R_BRACKETS
    (185) sp_cte -> . CTE_STRING
    (186) sp_cte -> . cte_bool
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_BRACKETS      shift and go to state 345
    CTE_STRING      shift and go to state 156
    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    asignacionAuxiliar1            shift and go to state 341
    expresion                      shift and go to state 342
    lista_cte                      shift and go to state 343
    sp_cte                         shift and go to state 344
    exp                            shift and go to state 90
    cte_bool                       shift and go to state 157
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 319

    (130) agregarOperadorAsignacion -> empty .

    L_BRACKETS      reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    CTE_STRING      reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    VERDADERO       reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    FALSO           reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    L_PAREN         reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    PLUS_OP         reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    MINUS_OP        reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    ID              reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    CTE_I           reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    CTE_F           reduce using rule 130 (agregarOperadorAsignacion -> empty .)


state 320

    (126) incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador . exp agregarCuadYCompSemAsignacion
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 346
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 321

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf . bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (123) bloque -> . L_BRACES bloqueAuxiliar1 R_BRACES

    L_BRACES        shift and go to state 181

    bloque                         shift and go to state 347

state 322

    (33) generarCuadCondicionGotoFIf -> empty .

    L_BRACES        reduce using rule 33 (generarCuadCondicionGotoFIf -> empty .)


state 323

    (134) escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 348


state 324

    (137) escrituraAuxiliar2 -> COMMA escrituraAuxiliar1 . escrituraAuxiliar2
    (137) escrituraAuxiliar2 -> . COMMA escrituraAuxiliar1 escrituraAuxiliar2
    (138) escrituraAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 295
    R_PAREN         reduce using rule 195 (empty -> .)

    escrituraAuxiliar2             shift and go to state 349
    empty                          shift and go to state 296

state 325

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo . expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (146) expresion -> . exp expresionAuxiliar1
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    expresion                      shift and go to state 350
    exp                            shift and go to state 90
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 326

    (36) agregarAPilaSaltosRegresoCiclo -> empty .

    L_PAREN         reduce using rule 36 (agregarAPilaSaltosRegresoCiclo -> empty .)
    PLUS_OP         reduce using rule 36 (agregarAPilaSaltosRegresoCiclo -> empty .)
    MINUS_OP        reduce using rule 36 (agregarAPilaSaltosRegresoCiclo -> empty .)
    ID              reduce using rule 36 (agregarAPilaSaltosRegresoCiclo -> empty .)
    CTE_I           reduce using rule 36 (agregarAPilaSaltosRegresoCiclo -> empty .)
    CTE_F           reduce using rule 36 (agregarAPilaSaltosRegresoCiclo -> empty .)


state 327

    (129) asignacion -> ID checarDefID agregarIdHaciaPilas . ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion

    ASSIGN_OP       shift and go to state 289


state 328

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp . R_PAREN SEMICOLON agregarCuadDibujarGen

    R_PAREN         shift and go to state 351


state 329

    (73) retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON . genCuadRetorno
    (39) genCuadRetorno -> . empty
    (195) empty -> .

    ID              reduce using rule 195 (empty -> .)
    SI              reduce using rule 195 (empty -> .)
    IMPRIMIR        reduce using rule 195 (empty -> .)
    CICLO           reduce using rule 195 (empty -> .)
    REGRESAR        reduce using rule 195 (empty -> .)
    DIBUJAR         reduce using rule 195 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 195 (empty -> .)
    R_BRACES        reduce using rule 195 (empty -> .)

    genCuadRetorno                 shift and go to state 352
    empty                          shift and go to state 353

state 330

    (75) retornoAuxiliar1 -> sp_cte agregarOperando .

    SEMICOLON       reduce using rule 75 (retornoAuxiliar1 -> sp_cte agregarOperando .)


state 331

    (42) agregarOperandoVoid -> empty .

    SEMICOLON       reduce using rule 42 (agregarOperandoVoid -> empty .)


state 332

    (76) retornoAuxiliar1 -> empty agregarOperandoVoid .

    SEMICOLON       reduce using rule 76 (retornoAuxiliar1 -> empty agregarOperandoVoid .)


state 333

    (117) dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId .

    COMMA           reduce using rule 117 (dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId .)


state 334

    (47) checarSiExisteFiguraId -> empty .

    COMMA           reduce using rule 47 (checarSiExisteFiguraId -> empty .)


state 335

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId . COMMA exp COMMA exp

    COMMA           shift and go to state 354


state 336

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 . R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    R_PAREN         shift and go to state 355


state 337

    (82) funcionesAuxiliar2 -> COMMA . tipo ID agregaParamFunc funcionesAuxiliar2
    (175) tipo -> . ENTERO
    (176) tipo -> . FLOTANTE
    (177) tipo -> . BOOLEANO
    (178) tipo -> . TEXTO

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31

    tipo                           shift and go to state 356

state 338

    (83) funcionesAuxiliar2 -> empty .

    R_PAREN         reduce using rule 83 (funcionesAuxiliar2 -> empty .)


state 339

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON .

    GRAVEDAD        reduce using rule 88 (figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON .)
    FUNCIONES       reduce using rule 88 (figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON .)
    APOLO           reduce using rule 88 (figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON .)


state 340

    (89) figurasAuxiliar1 -> COMMA figura . ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1

    ID              shift and go to state 357


state 341

    (129) asignacion -> ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 . agregarCuadYCompSemAsignacion
    (23) agregarCuadYCompSemAsignacion -> . empty
    (195) empty -> .

    SEMICOLON       reduce using rule 195 (empty -> .)

    agregarCuadYCompSemAsignacion  shift and go to state 358
    empty                          shift and go to state 359

state 342

    (131) asignacionAuxiliar1 -> expresion .

    SEMICOLON       reduce using rule 131 (asignacionAuxiliar1 -> expresion .)


state 343

    (132) asignacionAuxiliar1 -> lista_cte . agregarlistaAPilaOperando
    (22) agregarlistaAPilaOperando -> . empty
    (195) empty -> .

    SEMICOLON       reduce using rule 195 (empty -> .)

    agregarlistaAPilaOperando      shift and go to state 360
    empty                          shift and go to state 361

state 344

    (133) asignacionAuxiliar1 -> sp_cte . agregarOperando
    (21) agregarOperando -> . empty
    (195) empty -> .

    SEMICOLON       reduce using rule 195 (empty -> .)

    agregarOperando                shift and go to state 362
    empty                          shift and go to state 177

state 345

    (169) lista_cte -> L_BRACKETS . lista_cteAuxiliar1 lista_cteAuxiliar2 R_BRACKETS
    (170) lista_cteAuxiliar1 -> . exp
    (171) lista_cteAuxiliar1 -> . sp_cte
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (185) sp_cte -> . CTE_STRING
    (186) sp_cte -> . cte_bool
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    CTE_STRING      shift and go to state 156
    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    lista_cteAuxiliar1             shift and go to state 363
    exp                            shift and go to state 364
    sp_cte                         shift and go to state 365
    termino                        shift and go to state 41
    cte_bool                       shift and go to state 157
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 346

    (126) incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp . agregarCuadYCompSemAsignacion
    (23) agregarCuadYCompSemAsignacion -> . empty
    (195) empty -> .

    SEMICOLON       reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)

    agregarCuadYCompSemAsignacion  shift and go to state 366
    empty                          shift and go to state 359

state 347

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque . condicionAuxiliar1 SEMICOLON llenarGotof
    (121) condicionAuxiliar1 -> . SI_NO generarCuadCondicionGotoFElse bloque
    (122) condicionAuxiliar1 -> . empty
    (195) empty -> .

    SI_NO           shift and go to state 368
    SEMICOLON       reduce using rule 195 (empty -> .)

    condicionAuxiliar1             shift and go to state 367
    empty                          shift and go to state 369

state 348

    (134) escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .

    ID              reduce using rule 134 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    SI              reduce using rule 134 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 134 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    CICLO           reduce using rule 134 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    REGRESAR        reduce using rule 134 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    DIBUJAR         reduce using rule 134 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    DIBUJAR_LINEA   reduce using rule 134 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    R_BRACES        reduce using rule 134 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)


state 349

    (137) escrituraAuxiliar2 -> COMMA escrituraAuxiliar1 escrituraAuxiliar2 .

    R_PAREN         reduce using rule 137 (escrituraAuxiliar2 -> COMMA escrituraAuxiliar1 escrituraAuxiliar2 .)


state 350

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion . SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo

    SEMICOLON       shift and go to state 370


state 351

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN . SEMICOLON agregarCuadDibujarGen

    SEMICOLON       shift and go to state 371


state 352

    (73) retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .

    ID              reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    SI              reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    IMPRIMIR        reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    CICLO           reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    REGRESAR        reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    DIBUJAR         reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    DIBUJAR_LINEA   reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    R_BRACES        reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)


state 353

    (39) genCuadRetorno -> empty .

    ID              reduce using rule 39 (genCuadRetorno -> empty .)
    SI              reduce using rule 39 (genCuadRetorno -> empty .)
    IMPRIMIR        reduce using rule 39 (genCuadRetorno -> empty .)
    CICLO           reduce using rule 39 (genCuadRetorno -> empty .)
    REGRESAR        reduce using rule 39 (genCuadRetorno -> empty .)
    DIBUJAR         reduce using rule 39 (genCuadRetorno -> empty .)
    DIBUJAR_LINEA   reduce using rule 39 (genCuadRetorno -> empty .)
    R_BRACES        reduce using rule 39 (genCuadRetorno -> empty .)


state 354

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA . exp COMMA exp
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 372
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 355

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN . L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    L_BRACES        shift and go to state 373


state 356

    (82) funcionesAuxiliar2 -> COMMA tipo . ID agregaParamFunc funcionesAuxiliar2

    ID              shift and go to state 374


state 357

    (89) figurasAuxiliar1 -> COMMA figura ID . checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (60) checarFiguraId -> . empty
    (195) empty -> .

    L_BRACES        reduce using rule 195 (empty -> .)

    checarFiguraId                 shift and go to state 375
    empty                          shift and go to state 142

state 358

    (129) asignacion -> ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion .

    SEMICOLON       reduce using rule 129 (asignacion -> ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion .)


state 359

    (23) agregarCuadYCompSemAsignacion -> empty .

    SEMICOLON       reduce using rule 23 (agregarCuadYCompSemAsignacion -> empty .)
    R_PAREN         reduce using rule 23 (agregarCuadYCompSemAsignacion -> empty .)


state 360

    (132) asignacionAuxiliar1 -> lista_cte agregarlistaAPilaOperando .

    SEMICOLON       reduce using rule 132 (asignacionAuxiliar1 -> lista_cte agregarlistaAPilaOperando .)


state 361

    (22) agregarlistaAPilaOperando -> empty .

    SEMICOLON       reduce using rule 22 (agregarlistaAPilaOperando -> empty .)


state 362

    (133) asignacionAuxiliar1 -> sp_cte agregarOperando .

    SEMICOLON       reduce using rule 133 (asignacionAuxiliar1 -> sp_cte agregarOperando .)


state 363

    (169) lista_cte -> L_BRACKETS lista_cteAuxiliar1 . lista_cteAuxiliar2 R_BRACKETS
    (172) lista_cteAuxiliar2 -> . COMMA lista_cteAuxiliar1 lista_cteAuxiliar2
    (173) lista_cteAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 377
    R_BRACKETS      reduce using rule 195 (empty -> .)

    lista_cteAuxiliar2             shift and go to state 376
    empty                          shift and go to state 378

state 364

    (170) lista_cteAuxiliar1 -> exp .

    COMMA           reduce using rule 170 (lista_cteAuxiliar1 -> exp .)
    R_BRACKETS      reduce using rule 170 (lista_cteAuxiliar1 -> exp .)


state 365

    (171) lista_cteAuxiliar1 -> sp_cte .

    COMMA           reduce using rule 171 (lista_cteAuxiliar1 -> sp_cte .)
    R_BRACKETS      reduce using rule 171 (lista_cteAuxiliar1 -> sp_cte .)


state 366

    (126) incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion .

    SEMICOLON       reduce using rule 126 (incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion .)
    R_PAREN         reduce using rule 126 (incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion .)


state 367

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 . SEMICOLON llenarGotof

    SEMICOLON       shift and go to state 379


state 368

    (121) condicionAuxiliar1 -> SI_NO . generarCuadCondicionGotoFElse bloque
    (35) generarCuadCondicionGotoFElse -> . empty
    (195) empty -> .

    L_BRACES        reduce using rule 195 (empty -> .)

    generarCuadCondicionGotoFElse  shift and go to state 380
    empty                          shift and go to state 381

state 369

    (122) condicionAuxiliar1 -> empty .

    SEMICOLON       reduce using rule 122 (condicionAuxiliar1 -> empty .)


state 370

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON . generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (37) generarCuadCondCiclo -> . empty
    (195) empty -> .

    ID              reduce using rule 195 (empty -> .)

    generarCuadCondCiclo           shift and go to state 382
    empty                          shift and go to state 383

state 371

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON . agregarCuadDibujarGen
    (32) agregarCuadDibujarGen -> . empty
    (195) empty -> .

    ID              reduce using rule 195 (empty -> .)
    SI              reduce using rule 195 (empty -> .)
    IMPRIMIR        reduce using rule 195 (empty -> .)
    CICLO           reduce using rule 195 (empty -> .)
    REGRESAR        reduce using rule 195 (empty -> .)
    DIBUJAR         reduce using rule 195 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 195 (empty -> .)
    R_BRACES        reduce using rule 195 (empty -> .)

    agregarCuadDibujarGen          shift and go to state 384
    empty                          shift and go to state 385

state 372

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp . COMMA exp

    COMMA           shift and go to state 386


state 373

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES . funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (84) funcionesAuxiliar3 -> . variables
    (85) funcionesAuxiliar3 -> . empty
    (62) variables -> . VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (195) empty -> .

    VARIABLES       shift and go to state 17
    ID              reduce using rule 195 (empty -> .)
    SI              reduce using rule 195 (empty -> .)
    IMPRIMIR        reduce using rule 195 (empty -> .)
    CICLO           reduce using rule 195 (empty -> .)
    REGRESAR        reduce using rule 195 (empty -> .)
    DIBUJAR         reduce using rule 195 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 195 (empty -> .)
    R_BRACES        reduce using rule 195 (empty -> .)

    funcionesAuxiliar3             shift and go to state 387
    variables                      shift and go to state 388
    empty                          shift and go to state 389

state 374

    (82) funcionesAuxiliar2 -> COMMA tipo ID . agregaParamFunc funcionesAuxiliar2
    (57) agregaParamFunc -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    R_PAREN         reduce using rule 195 (empty -> .)

    agregaParamFunc                shift and go to state 390
    empty                          shift and go to state 312

state 375

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId . L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1

    L_BRACES        shift and go to state 391


state 376

    (169) lista_cte -> L_BRACKETS lista_cteAuxiliar1 lista_cteAuxiliar2 . R_BRACKETS

    R_BRACKETS      shift and go to state 392


state 377

    (172) lista_cteAuxiliar2 -> COMMA . lista_cteAuxiliar1 lista_cteAuxiliar2
    (170) lista_cteAuxiliar1 -> . exp
    (171) lista_cteAuxiliar1 -> . sp_cte
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (185) sp_cte -> . CTE_STRING
    (186) sp_cte -> . cte_bool
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (187) cte_bool -> . VERDADERO
    (188) cte_bool -> . FALSO
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    CTE_STRING      shift and go to state 156
    VERDADERO       shift and go to state 158
    FALSO           shift and go to state 159
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    lista_cteAuxiliar1             shift and go to state 393
    exp                            shift and go to state 364
    sp_cte                         shift and go to state 365
    termino                        shift and go to state 41
    cte_bool                       shift and go to state 157
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 378

    (173) lista_cteAuxiliar2 -> empty .

    R_BRACKETS      reduce using rule 173 (lista_cteAuxiliar2 -> empty .)


state 379

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON . llenarGotof
    (34) llenarGotof -> . empty
    (195) empty -> .

    ID              reduce using rule 195 (empty -> .)
    SI              reduce using rule 195 (empty -> .)
    IMPRIMIR        reduce using rule 195 (empty -> .)
    CICLO           reduce using rule 195 (empty -> .)
    REGRESAR        reduce using rule 195 (empty -> .)
    DIBUJAR         reduce using rule 195 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 195 (empty -> .)
    R_BRACES        reduce using rule 195 (empty -> .)

    llenarGotof                    shift and go to state 394
    empty                          shift and go to state 395

state 380

    (121) condicionAuxiliar1 -> SI_NO generarCuadCondicionGotoFElse . bloque
    (123) bloque -> . L_BRACES bloqueAuxiliar1 R_BRACES

    L_BRACES        shift and go to state 181

    bloque                         shift and go to state 396

state 381

    (35) generarCuadCondicionGotoFElse -> empty .

    L_BRACES        reduce using rule 35 (generarCuadCondicionGotoFElse -> empty .)


state 382

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo . incremento R_PAREN bloque generarCuadRetCiclo
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion

    ID              shift and go to state 398

    incremento                     shift and go to state 397

state 383

    (37) generarCuadCondCiclo -> empty .

    ID              reduce using rule 37 (generarCuadCondCiclo -> empty .)


state 384

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .

    ID              reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    SI              reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    IMPRIMIR        reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    CICLO           reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    REGRESAR        reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    DIBUJAR         reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    DIBUJAR_LINEA   reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    R_BRACES        reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)


state 385

    (32) agregarCuadDibujarGen -> empty .

    ID              reduce using rule 32 (agregarCuadDibujarGen -> empty .)
    SI              reduce using rule 32 (agregarCuadDibujarGen -> empty .)
    IMPRIMIR        reduce using rule 32 (agregarCuadDibujarGen -> empty .)
    CICLO           reduce using rule 32 (agregarCuadDibujarGen -> empty .)
    REGRESAR        reduce using rule 32 (agregarCuadDibujarGen -> empty .)
    DIBUJAR         reduce using rule 32 (agregarCuadDibujarGen -> empty .)
    DIBUJAR_LINEA   reduce using rule 32 (agregarCuadDibujarGen -> empty .)
    R_BRACES        reduce using rule 32 (agregarCuadDibujarGen -> empty .)


state 386

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA . exp
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (159) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (160) factor -> . factorAuxiliar1 factorAuxiliar2
    (161) factor -> . factorAuxiliar3
    (162) factorAuxiliar1 -> . PLUS_OP
    (163) factorAuxiliar1 -> . MINUS_OP
    (166) factorAuxiliar3 -> . factorAuxiliar2
    (167) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (168) factorAuxiliar3 -> . llamada
    (164) factorAuxiliar2 -> . CTE_I
    (165) factorAuxiliar2 -> . CTE_F
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    ID              shift and go to state 48
    CTE_I           shift and go to state 50
    CTE_F           shift and go to state 51

    exp                            shift and go to state 399
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar2                shift and go to state 44
    factorAuxiliar3                shift and go to state 45
    llamada                        shift and go to state 49

state 387

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 . funcionesAuxiliar4 R_BRACES liberaTablaVars
    (86) funcionesAuxiliar4 -> . estatuto funcionesAuxiliar4
    (87) funcionesAuxiliar4 -> . empty
    (108) estatuto -> . asignacion SEMICOLON
    (109) estatuto -> . condicion
    (110) estatuto -> . escritura
    (111) estatuto -> . ciclo
    (112) estatuto -> . dibujar
    (113) estatuto -> . llamada SEMICOLON
    (114) estatuto -> . incremento SEMICOLON
    (115) estatuto -> . retorno
    (195) empty -> .
    (129) asignacion -> . ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (120) condicion -> . SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (134) escritura -> . IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (119) ciclo -> . CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (116) dibujar -> . dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (73) retorno -> . REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (117) dibujarAuxiliar1 -> . DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (118) dibujarAuxiliar1 -> . DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp

    R_BRACES        reduce using rule 195 (empty -> .)
    ID              shift and go to state 211
    SI              shift and go to state 212
    IMPRIMIR        shift and go to state 213
    CICLO           shift and go to state 214
    REGRESAR        shift and go to state 216
    DIBUJAR         shift and go to state 217
    DIBUJAR_LINEA   shift and go to state 218

    funcionesAuxiliar4             shift and go to state 400
    estatuto                       shift and go to state 401
    empty                          shift and go to state 402
    asignacion                     shift and go to state 203
    condicion                      shift and go to state 204
    escritura                      shift and go to state 205
    ciclo                          shift and go to state 206
    dibujar                        shift and go to state 207
    llamada                        shift and go to state 208
    incremento                     shift and go to state 209
    retorno                        shift and go to state 210
    dibujarAuxiliar1               shift and go to state 215

state 388

    (84) funcionesAuxiliar3 -> variables .

    ID              reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    SI              reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    IMPRIMIR        reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    CICLO           reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    REGRESAR        reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    DIBUJAR         reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    DIBUJAR_LINEA   reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    R_BRACES        reduce using rule 84 (funcionesAuxiliar3 -> variables .)


state 389

    (85) funcionesAuxiliar3 -> empty .

    ID              reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    SI              reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    IMPRIMIR        reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    CICLO           reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    REGRESAR        reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    DIBUJAR         reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    DIBUJAR_LINEA   reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    R_BRACES        reduce using rule 85 (funcionesAuxiliar3 -> empty .)


state 390

    (82) funcionesAuxiliar2 -> COMMA tipo ID agregaParamFunc . funcionesAuxiliar2
    (82) funcionesAuxiliar2 -> . COMMA tipo ID agregaParamFunc funcionesAuxiliar2
    (83) funcionesAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 337
    R_PAREN         reduce using rule 195 (empty -> .)

    funcionesAuxiliar2             shift and go to state 403
    empty                          shift and go to state 338

state 391

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES . figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (95) figura_atributos -> . MEDIDA COLON CTE_I
    (96) figura_atributos -> . figura_atributosAuxiliar1 COLON CTE_F
    (97) figura_atributos -> . MOVIBLE COLON cte_bool
    (98) figura_atributos -> . COLOR COLON color_cte
    (99) figura_atributosAuxiliar1 -> . FRICCION
    (100) figura_atributosAuxiliar1 -> . MASA
    (101) figura_atributosAuxiliar1 -> . REBOTE

    MEDIDA          shift and go to state 185
    MOVIBLE         shift and go to state 187
    COLOR           shift and go to state 188
    FRICCION        shift and go to state 189
    MASA            shift and go to state 190
    REBOTE          shift and go to state 191

    figura_atributos               shift and go to state 404
    figura_atributosAuxiliar1      shift and go to state 186

state 392

    (169) lista_cte -> L_BRACKETS lista_cteAuxiliar1 lista_cteAuxiliar2 R_BRACKETS .

    SEMICOLON       reduce using rule 169 (lista_cte -> L_BRACKETS lista_cteAuxiliar1 lista_cteAuxiliar2 R_BRACKETS .)


state 393

    (172) lista_cteAuxiliar2 -> COMMA lista_cteAuxiliar1 . lista_cteAuxiliar2
    (172) lista_cteAuxiliar2 -> . COMMA lista_cteAuxiliar1 lista_cteAuxiliar2
    (173) lista_cteAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 377
    R_BRACKETS      reduce using rule 195 (empty -> .)

    lista_cteAuxiliar2             shift and go to state 405
    empty                          shift and go to state 378

state 394

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .

    ID              reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    SI              reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    IMPRIMIR        reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    CICLO           reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    REGRESAR        reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    DIBUJAR         reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    DIBUJAR_LINEA   reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    R_BRACES        reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)


state 395

    (34) llenarGotof -> empty .

    ID              reduce using rule 34 (llenarGotof -> empty .)
    SI              reduce using rule 34 (llenarGotof -> empty .)
    IMPRIMIR        reduce using rule 34 (llenarGotof -> empty .)
    CICLO           reduce using rule 34 (llenarGotof -> empty .)
    REGRESAR        reduce using rule 34 (llenarGotof -> empty .)
    DIBUJAR         reduce using rule 34 (llenarGotof -> empty .)
    DIBUJAR_LINEA   reduce using rule 34 (llenarGotof -> empty .)
    R_BRACES        reduce using rule 34 (llenarGotof -> empty .)


state 396

    (121) condicionAuxiliar1 -> SI_NO generarCuadCondicionGotoFElse bloque .

    SEMICOLON       reduce using rule 121 (condicionAuxiliar1 -> SI_NO generarCuadCondicionGotoFElse bloque .)


state 397

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento . R_PAREN bloque generarCuadRetCiclo

    R_PAREN         shift and go to state 406


state 398

    (126) incremento -> ID . checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (54) checarDefID -> . empty
    (195) empty -> .

    PLUS_EQUAL_OP   reduce using rule 195 (empty -> .)
    MINUS_EQUAL_OP  reduce using rule 195 (empty -> .)

    checarDefID                    shift and go to state 407
    empty                          shift and go to state 303

state 399

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp .

    COMMA           reduce using rule 118 (dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp .)


state 400

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 . R_BRACES liberaTablaVars

    R_BRACES        shift and go to state 408


state 401

    (86) funcionesAuxiliar4 -> estatuto . funcionesAuxiliar4
    (86) funcionesAuxiliar4 -> . estatuto funcionesAuxiliar4
    (87) funcionesAuxiliar4 -> . empty
    (108) estatuto -> . asignacion SEMICOLON
    (109) estatuto -> . condicion
    (110) estatuto -> . escritura
    (111) estatuto -> . ciclo
    (112) estatuto -> . dibujar
    (113) estatuto -> . llamada SEMICOLON
    (114) estatuto -> . incremento SEMICOLON
    (115) estatuto -> . retorno
    (195) empty -> .
    (129) asignacion -> . ID checarDefID agregarIdHaciaPilas ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 agregarCuadYCompSemAsignacion
    (120) condicion -> . SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (134) escritura -> . IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (119) ciclo -> . CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (116) dibujar -> . dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (139) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (73) retorno -> . REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (117) dibujarAuxiliar1 -> . DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (118) dibujarAuxiliar1 -> . DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp

    R_BRACES        reduce using rule 195 (empty -> .)
    ID              shift and go to state 211
    SI              shift and go to state 212
    IMPRIMIR        shift and go to state 213
    CICLO           shift and go to state 214
    REGRESAR        shift and go to state 216
    DIBUJAR         shift and go to state 217
    DIBUJAR_LINEA   shift and go to state 218

    estatuto                       shift and go to state 401
    funcionesAuxiliar4             shift and go to state 409
    empty                          shift and go to state 402
    asignacion                     shift and go to state 203
    condicion                      shift and go to state 204
    escritura                      shift and go to state 205
    ciclo                          shift and go to state 206
    dibujar                        shift and go to state 207
    llamada                        shift and go to state 208
    incremento                     shift and go to state 209
    retorno                        shift and go to state 210
    dibujarAuxiliar1               shift and go to state 215

state 402

    (87) funcionesAuxiliar4 -> empty .

    R_BRACES        reduce using rule 87 (funcionesAuxiliar4 -> empty .)


state 403

    (82) funcionesAuxiliar2 -> COMMA tipo ID agregaParamFunc funcionesAuxiliar2 .

    R_PAREN         reduce using rule 82 (funcionesAuxiliar2 -> COMMA tipo ID agregaParamFunc funcionesAuxiliar2 .)


state 404

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos . figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (102) figura_atributosAuxiliar2 -> . COMMA figura_atributos figura_atributosAuxiliar2
    (103) figura_atributosAuxiliar2 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 223
    R_BRACES        reduce using rule 195 (empty -> .)

    figura_atributosAuxiliar2      shift and go to state 410
    empty                          shift and go to state 224

state 405

    (172) lista_cteAuxiliar2 -> COMMA lista_cteAuxiliar1 lista_cteAuxiliar2 .

    R_BRACKETS      reduce using rule 172 (lista_cteAuxiliar2 -> COMMA lista_cteAuxiliar1 lista_cteAuxiliar2 .)


state 406

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN . bloque generarCuadRetCiclo
    (123) bloque -> . L_BRACES bloqueAuxiliar1 R_BRACES

    L_BRACES        shift and go to state 181

    bloque                         shift and go to state 411

state 407

    (126) incremento -> ID checarDefID . agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (13) agregarIdHaciaPilas -> . empty
    (195) empty -> .

    PLUS_EQUAL_OP   reduce using rule 195 (empty -> .)
    MINUS_EQUAL_OP  reduce using rule 195 (empty -> .)

    agregarIdHaciaPilas            shift and go to state 412
    empty                          shift and go to state 105

state 408

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES . liberaTablaVars
    (58) liberaTablaVars -> . empty
    (195) empty -> .

    APOLO           reduce using rule 195 (empty -> .)

    liberaTablaVars                shift and go to state 413
    empty                          shift and go to state 414

state 409

    (86) funcionesAuxiliar4 -> estatuto funcionesAuxiliar4 .

    R_BRACES        reduce using rule 86 (funcionesAuxiliar4 -> estatuto funcionesAuxiliar4 .)


state 410

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 . R_BRACES creaFigVar figurasAuxiliar1

    R_BRACES        shift and go to state 415


state 411

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque . generarCuadRetCiclo
    (38) generarCuadRetCiclo -> . empty
    (195) empty -> .

    ID              reduce using rule 195 (empty -> .)
    SI              reduce using rule 195 (empty -> .)
    IMPRIMIR        reduce using rule 195 (empty -> .)
    CICLO           reduce using rule 195 (empty -> .)
    REGRESAR        reduce using rule 195 (empty -> .)
    DIBUJAR         reduce using rule 195 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 195 (empty -> .)
    R_BRACES        reduce using rule 195 (empty -> .)

    generarCuadRetCiclo            shift and go to state 416
    empty                          shift and go to state 417

state 412

    (126) incremento -> ID checarDefID agregarIdHaciaPilas . incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (127) incrementoAuxiliar1 -> . PLUS_EQUAL_OP
    (128) incrementoAuxiliar1 -> . MINUS_EQUAL_OP

    PLUS_EQUAL_OP   shift and go to state 291
    MINUS_EQUAL_OP  shift and go to state 292

    incrementoAuxiliar1            shift and go to state 290

state 413

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars .

    APOLO           reduce using rule 79 (funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars .)


state 414

    (58) liberaTablaVars -> empty .

    APOLO           reduce using rule 58 (liberaTablaVars -> empty .)


state 415

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES . creaFigVar figurasAuxiliar1
    (61) creaFigVar -> . empty
    (195) empty -> .

    COMMA           reduce using rule 195 (empty -> .)
    SEMICOLON       reduce using rule 195 (empty -> .)

    creaFigVar                     shift and go to state 418
    empty                          shift and go to state 284

state 416

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .

    ID              reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    SI              reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    IMPRIMIR        reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    CICLO           reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    REGRESAR        reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    DIBUJAR         reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    DIBUJAR_LINEA   reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    R_BRACES        reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)


state 417

    (38) generarCuadRetCiclo -> empty .

    ID              reduce using rule 38 (generarCuadRetCiclo -> empty .)
    SI              reduce using rule 38 (generarCuadRetCiclo -> empty .)
    IMPRIMIR        reduce using rule 38 (generarCuadRetCiclo -> empty .)
    CICLO           reduce using rule 38 (generarCuadRetCiclo -> empty .)
    REGRESAR        reduce using rule 38 (generarCuadRetCiclo -> empty .)
    DIBUJAR         reduce using rule 38 (generarCuadRetCiclo -> empty .)
    DIBUJAR_LINEA   reduce using rule 38 (generarCuadRetCiclo -> empty .)
    R_BRACES        reduce using rule 38 (generarCuadRetCiclo -> empty .)


state 418

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar . figurasAuxiliar1
    (89) figurasAuxiliar1 -> . COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (90) figurasAuxiliar1 -> . empty
    (195) empty -> .

    COMMA           shift and go to state 314
    SEMICOLON       reduce using rule 195 (empty -> .)

    figurasAuxiliar1               shift and go to state 419
    empty                          shift and go to state 315

state 419

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 .

    SEMICOLON       reduce using rule 89 (figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 .)

