Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar
Rule 2     variablesAuxiliar -> creaTablaVar variables
Rule 3     variablesAuxiliar -> empty
Rule 4     pantallaAuxiliar -> pantalla
Rule 5     pantallaAuxiliar -> empty agregarCuadDefectoPantalla
Rule 6     figurasAuxiliar -> figuras
Rule 7     figurasAuxiliar -> empty
Rule 8     gravedadAuxiliar -> gravedad
Rule 9     gravedadAuxiliar -> empty agregarCuadDefectoGravedad
Rule 10    funcionesAuxiliar -> FUNCIONES funciones
Rule 11    funcionesAuxiliar -> empty
Rule 12    apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla creaTablaVar bloque
Rule 13    agregarIdHaciaPilas -> empty
Rule 14    agregarOperador -> empty
Rule 15    compSemMasMenosYGenCuad -> empty
Rule 16    comprobarSemanticaPorEntre -> empty
Rule 17    agregarPisoFalso -> empty
Rule 18    eliminarPisoFalso -> empty
Rule 19    comprobarSemanticaOperadoresRelacionales -> empty
Rule 20    compSemYGenCuadYO -> empty
Rule 21    agregarOperando -> empty
Rule 22    agregarCuadYCompSemAsignacion -> empty
Rule 23    agregarCuadYCompSemPantalla -> empty
Rule 24    agregarCuadDefectoPantalla -> empty
Rule 25    agregarCuadYCompSemGravedad -> empty
Rule 26    agregarCuadDefectoGravedad -> empty
Rule 27    agregarCuadEScrituraExpresion -> empty
Rule 28    agregarCuadEscrituraSPCTE -> empty
Rule 29    agregarOperadorDibujarLinea -> empty
Rule 30    agregarOperadorDibujar -> empty
Rule 31    agregarCuadDibujarGen -> empty
Rule 32    generarCuadCondicionGotoFIf -> empty
Rule 33    llenarGotof -> empty
Rule 34    generarCuadCondicionGotoFElse -> empty
Rule 35    agregarAPilaSaltosRegresoCiclo -> empty
Rule 36    generarCuadCondCiclo -> empty
Rule 37    generarCuadRetCiclo -> empty
Rule 38    genCuadRetorno -> empty
Rule 39    checarRetorno -> empty
Rule 40    agregarOperadorRetorno -> empty
Rule 41    agregarOperandoVoid -> empty
Rule 42    checarSiExisteFuncion -> empty
Rule 43    generarAccionERA -> empty
Rule 44    generarAccionParam -> empty
Rule 45    generarAccionGoSub -> empty
Rule 46    checarSiExisteFiguraId -> empty
Rule 47    listaVar -> empty
Rule 48    apoloTablaFunc -> empty
Rule 49    agregarGoToApolo -> empty
Rule 50    creaTablaFunc -> empty
Rule 51    agregaGlobalTabla -> empty
Rule 52    asignarAlcance -> empty
Rule 53    creaTablaVar -> empty
Rule 54    checarDefID -> empty
Rule 55    agregaVarTabla -> empty
Rule 56    agregaFuncTabla -> empty
Rule 57    agregaParamFunc -> empty
Rule 58    liberaTablaVars -> empty
Rule 59    creaFigFuncSimb -> empty
Rule 60    checarFiguraId -> empty
Rule 61    creaFigVar -> empty
Rule 62    variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
Rule 63    variablesAuxiliar1 -> tipo
Rule 64    variablesAuxiliar1 -> tipo_lista
Rule 65    variablesAuxiliar2 -> COMMA ID agregaVarTabla variablesAuxiliar2
Rule 66    variablesAuxiliar2 -> empty
Rule 67    variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
Rule 68    variablesAuxiliar3 -> empty
Rule 69    termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1
Rule 70    terminoAuxiliar1 -> operadorEntre agregarOperador termino
Rule 71    terminoAuxiliar1 -> operadorPor agregarOperador termino
Rule 72    terminoAuxiliar1 -> empty
Rule 73    retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
Rule 74    retornoAuxiliar1 -> expresion
Rule 75    retornoAuxiliar1 -> sp_cte agregarOperando
Rule 76    retornoAuxiliar1 -> empty agregarOperandoVoid
Rule 77    pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla
Rule 78    gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad
Rule 79    funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
Rule 80    funcionesAuxiliar1 -> tipo
Rule 81    funcionesAuxiliar1 -> VOID
Rule 82    funcionesAuxiliar2 -> COMMA tipo ID agregaParamFunc funcionesAuxiliar2
Rule 83    funcionesAuxiliar2 -> empty
Rule 84    funcionesAuxiliar3 -> variables
Rule 85    funcionesAuxiliar3 -> empty
Rule 86    funcionesAuxiliar4 -> estatuto funcionesAuxiliar4
Rule 87    funcionesAuxiliar4 -> empty
Rule 88    figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
Rule 89    figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
Rule 90    figurasAuxiliar1 -> empty
Rule 91    figura -> CUADRADO
Rule 92    figura -> CIRCULO
Rule 93    figura -> TRIANGULO
Rule 94    figura -> LINEA
Rule 95    figura_atributos -> MEDIDA COLON CTE_I
Rule 96    figura_atributos -> figura_atributosAuxiliar1 COLON CTE_F
Rule 97    figura_atributos -> MOVIBLE COLON cte_bool
Rule 98    figura_atributos -> COLOR COLON color_cte
Rule 99    figura_atributosAuxiliar1 -> FRICCION
Rule 100   figura_atributosAuxiliar1 -> MASA
Rule 101   figura_atributosAuxiliar1 -> REBOTE
Rule 102   figura_atributosAuxiliar2 -> COMMA figura_atributos figura_atributosAuxiliar2
Rule 103   figura_atributosAuxiliar2 -> empty
Rule 104   exp -> termino compSemMasMenosYGenCuad expAuxiliar1
Rule 105   expAuxiliar1 -> operadorMenos agregarOperador exp
Rule 106   expAuxiliar1 -> operadorMas agregarOperador exp
Rule 107   expAuxiliar1 -> empty
Rule 108   estatuto -> asignacion SEMICOLON
Rule 109   estatuto -> condicion
Rule 110   estatuto -> escritura
Rule 111   estatuto -> ciclo
Rule 112   estatuto -> dibujar
Rule 113   estatuto -> llamada SEMICOLON
Rule 114   estatuto -> incremento SEMICOLON
Rule 115   estatuto -> retorno
Rule 116   dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
Rule 117   dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
Rule 118   dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp
Rule 119   ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
Rule 120   condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
Rule 121   condicionAuxiliar1 -> SI_NO generarCuadCondicionGotoFElse bloque
Rule 122   condicionAuxiliar1 -> empty
Rule 123   bloque -> L_BRACES bloqueAuxiliar1 R_BRACES
Rule 124   bloqueAuxiliar1 -> empty
Rule 125   bloqueAuxiliar1 -> estatuto bloqueAuxiliar1
Rule 126   incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
Rule 127   incrementoAuxiliar1 -> PLUS_EQUAL_OP
Rule 128   incrementoAuxiliar1 -> MINUS_EQUAL_OP
Rule 129   asignacion -> asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1
Rule 130   agregarOperadorAsignacion -> empty
Rule 131   asignacionAuxiliar1 -> expresion agregarCuadYCompSemAsignacion
Rule 132   asignacionAuxiliar1 -> lista_cte
Rule 133   asignacionAuxiliar1 -> sp_cte agregarOperando agregarCuadYCompSemAsignacion
Rule 134   asignacionAuxiliar2 -> ID checarDefID agregarIdHaciaPilas
Rule 135   asignacionAuxiliar2 -> elemArr
Rule 136   elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
Rule 137   agregarCuadsElemArr -> empty
Rule 138   agregarLongLista -> empty
Rule 139   escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
Rule 140   escrituraAuxiliar1 -> expresion agregarCuadEScrituraExpresion
Rule 141   escrituraAuxiliar1 -> sp_cte agregarCuadEscrituraSPCTE
Rule 142   escrituraAuxiliar2 -> COMMA escrituraAuxiliar1 escrituraAuxiliar2
Rule 143   escrituraAuxiliar2 -> empty
Rule 144   llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
Rule 145   llamadaAuxiliar1 -> llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
Rule 146   llamadaAuxiliar1 -> empty
Rule 147   llamadaAuxiliar2 -> exp
Rule 148   llamadaAuxiliar2 -> sp_cte agregarOperando
Rule 149   llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
Rule 150   llamadaAuxiliar3 -> empty
Rule 151   expresion -> exp expresionAuxiliar1
Rule 152   expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
Rule 153   expresionAuxiliar1 -> empty
Rule 154   expresionAuxiliar2 -> N_EQUAL_OP
Rule 155   expresionAuxiliar2 -> EQUAL_OP
Rule 156   expresionAuxiliar2 -> BIGGER_THAN
Rule 157   expresionAuxiliar2 -> LESS_THAN
Rule 158   expresionAuxiliar2 -> BIGGER_EQUAL_THAN
Rule 159   expresionAuxiliar2 -> LESS_EQUAL_THAN
Rule 160   expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO
Rule 161   expresionAuxiliar3 -> empty
Rule 162   expresionAuxiliar4 -> operadorY
Rule 163   expresionAuxiliar4 -> operadorO
Rule 164   factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
Rule 165   factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
Rule 166   factor -> factorAuxiliar3
Rule 167   factorAuxiliar1 -> PLUS_OP
Rule 168   factorAuxiliar1 -> MINUS_OP
Rule 169   factorAuxiliar2 -> CTE_I
Rule 170   factorAuxiliar2 -> CTE_F
Rule 171   factorAuxiliar3 -> factorAuxiliar2
Rule 172   factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas
Rule 173   factorAuxiliar3 -> llamada
Rule 174   factorAuxiliar3 -> elemArr
Rule 175   factorAuxiliar4 -> empty
Rule 176   lista_cte -> reiniciarContadorIndices L_BRACKETS lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 R_BRACKETS p_sacarListaPilaOperandos
Rule 177   lista_cteAuxiliar1 -> exp
Rule 178   lista_cteAuxiliar1 -> sp_cte agregarOperando
Rule 179   lista_cteAuxiliar2 -> COMMA comprobarIndices lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2
Rule 180   lista_cteAuxiliar2 -> empty
Rule 181   comprobarTipoElem -> empty
Rule 182   comprobarIndices -> empty
Rule 183   reiniciarContadorIndices -> empty
Rule 184   p_sacarListaPilaOperandos -> empty
Rule 185   tipo_lista -> LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS
Rule 186   tipo -> ENTERO
Rule 187   tipo -> FLOTANTE
Rule 188   tipo -> BOOLEANO
Rule 189   tipo -> TEXTO
Rule 190   color_cte -> ROJO
Rule 191   color_cte -> VERDE
Rule 192   color_cte -> AZUL
Rule 193   color_cte -> AMARILLO
Rule 194   color_cte -> ROSA
Rule 195   color_cte -> VIOLETA
Rule 196   sp_cte -> CTE_STRING
Rule 197   sp_cte -> cte_bool
Rule 198   cte_bool -> VERDADERO
Rule 199   cte_bool -> FALSO
Rule 200   operadorMas -> PLUS_OP
Rule 201   operadorMenos -> MINUS_OP
Rule 202   operadorPor -> TIMES_OP
Rule 203   operadorEntre -> DIV_OP
Rule 204   operadorY -> AND
Rule 205   operadorO -> OR
Rule 206   empty -> <empty>

Terminals, with rules where they appear

AMARILLO             : 193
AND                  : 204
APOLO                : 12
ASSIGN_OP            : 129
AZUL                 : 192
BIGGER_EQUAL_THAN    : 158
BIGGER_THAN          : 156
BOOLEANO             : 188
CICLO                : 119
CIRCULO              : 92
COLON                : 95 96 97 98
COLOR                : 98
COMMA                : 65 77 78 82 89 102 116 116 118 118 142 149 179
CTE_F                : 96 170
CTE_I                : 95 169 185
CTE_STRING           : 196
CUADRADO             : 91
DIBUJAR              : 117
DIBUJAR_LINEA        : 118
DIV_OP               : 203
ENTERO               : 186
EQUAL_OP             : 155
FALSO                : 199
FIGURAS              : 88
FLOTANTE             : 187
FRICCION             : 99
FUNCIONES            : 10
GRAVEDAD             : 78
ID                   : 1 62 65 67 79 79 82 88 89 117 118 126 134 136 144 172
IMPRIMIR             : 139
LESS_EQUAL_THAN      : 159
LESS_THAN            : 157
LINEA                : 94
LISTA                : 185
L_BRACES             : 79 88 89 123
L_BRACKETS           : 136 176 185
L_PAREN              : 77 78 79 117 118 119 120 139 144 164
MASA                 : 100
MEDIDA               : 95
MINUS_EQUAL_OP       : 128
MINUS_OP             : 168 201
MOVIBLE              : 97
N_EQUAL_OP           : 154
OR                   : 205
PANTALLA             : 77
PLUS_EQUAL_OP        : 127
PLUS_OP              : 167 200
PROGRAMA             : 1
REBOTE               : 101
REGRESAR             : 73
ROJO                 : 190
ROSA                 : 194
R_BRACES             : 79 88 89 123
R_BRACKETS           : 136 176 185
R_PAREN              : 77 78 79 116 119 120 139 144 164
SEMICOLON            : 1 62 67 73 77 78 88 108 113 114 116 119 119 120 139
SI                   : 120
SI_NO                : 121
TEXTO                : 189
TIMES_OP             : 202
TRIANGULO            : 93
VARIABLES            : 62
VERDADERO            : 198
VERDE                : 191
VIOLETA              : 195
VOID                 : 81
error                : 

Nonterminals, with rules where they appear

agregaFuncTabla      : 12 79
agregaGlobalTabla    : 1
agregaParamFunc      : 79 82
agregaVarTabla       : 62 65 67
agregarAPilaSaltosRegresoCiclo : 119
agregarCuadDefectoGravedad : 9
agregarCuadDefectoPantalla : 5
agregarCuadDibujarGen : 116
agregarCuadEScrituraExpresion : 140
agregarCuadEscrituraSPCTE : 141
agregarCuadYCompSemAsignacion : 126 131 133
agregarCuadYCompSemGravedad : 78
agregarCuadYCompSemPantalla : 77
agregarCuadsElemArr  : 136
agregarGoToApolo     : 1
agregarIdHaciaPilas  : 126 134 136 172
agregarLongLista     : 136
agregarOperador      : 70 71 105 106 126 152 160
agregarOperadorAsignacion : 129
agregarOperadorDibujar : 117
agregarOperadorDibujarLinea : 118
agregarOperadorRetorno : 73
agregarOperando      : 75 133 148 178
agregarOperandoVoid  : 76
agregarPisoFalso     : 164
apoloAuxiliar        : 1
apoloTablaFunc       : 12
asignacion           : 108 119
asignacionAuxiliar1  : 129
asignacionAuxiliar2  : 129
asignarAlcance       : 79 88
bloque               : 12 119 120 121
bloqueAuxiliar1      : 123 125
checarDefID          : 126 134 136 172
checarFiguraId       : 88 89
checarRetorno        : 73
checarSiExisteFiguraId : 117 118
checarSiExisteFuncion : 144
ciclo                : 111
color_cte            : 98
compSemMasMenosYGenCuad : 104
compSemYGenCuadYO    : 160
comprobarIndices     : 179
comprobarSemanticaOperadoresRelacionales : 152
comprobarSemanticaPorEntre : 69
comprobarTipoElem    : 176 179
condicion            : 109
condicionAuxiliar1   : 120
creaFigFuncSimb      : 88
creaFigVar           : 88 89
creaTablaFunc        : 1
creaTablaVar         : 2 12 79
cte_bool             : 97 197
dibujar              : 112
dibujarAuxiliar1     : 116
elemArr              : 135 174
eliminarPisoFalso    : 164
empty                : 3 5 7 9 11 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 66 68 72 76 83 85 87 90 103 107 122 124 130 137 138 143 146 150 153 161 175 180 181 182 183 184
escritura            : 110
escrituraAuxiliar1   : 139 142
escrituraAuxiliar2   : 139 142
estatuto             : 86 125
exp                  : 77 77 78 78 105 106 116 116 118 118 126 136 147 151 152 177
expAuxiliar1         : 104
expresion            : 74 119 120 131 140 160 164
expresionAuxiliar1   : 151
expresionAuxiliar2   : 152
expresionAuxiliar3   : 152
expresionAuxiliar4   : 160
factor               : 69
factorAuxiliar1      : 165
factorAuxiliar2      : 171
factorAuxiliar3      : 165 166
factorAuxiliar4      : 165
figura               : 88 89
figura_atributos     : 88 89 102
figura_atributosAuxiliar1 : 96
figura_atributosAuxiliar2 : 88 89 102
figuras              : 6
figurasAuxiliar      : 1
figurasAuxiliar1     : 88 89
funciones            : 10
funcionesAuxiliar    : 1
funcionesAuxiliar1   : 79
funcionesAuxiliar2   : 79 82
funcionesAuxiliar3   : 79
funcionesAuxiliar4   : 79 86
genCuadRetorno       : 73
generarAccionERA     : 144
generarAccionGoSub   : 144
generarAccionParam   : 145 149
generarCuadCondCiclo : 119
generarCuadCondicionGotoFElse : 121
generarCuadCondicionGotoFIf : 120
generarCuadRetCiclo  : 119
gravedad             : 8
gravedadAuxiliar     : 1
incremento           : 114 119
incrementoAuxiliar1  : 126
liberaTablaVars      : 79
listaVar             : 185
lista_cte            : 132
lista_cteAuxiliar1   : 176 179
lista_cteAuxiliar2   : 176 179
llamada              : 113 173
llamadaAuxiliar1     : 144
llamadaAuxiliar2     : 145 149
llamadaAuxiliar3     : 145 149
llenarGotof          : 120
operadorEntre        : 70
operadorMas          : 106
operadorMenos        : 105
operadorO            : 163
operadorPor          : 71
operadorY            : 162
p_sacarListaPilaOperandos : 176
pantalla             : 4
pantallaAuxiliar     : 1
programa             : 0
reiniciarContadorIndices : 176
retorno              : 115
retornoAuxiliar1     : 73
sp_cte               : 75 133 141 148 178
termino              : 70 71 104
terminoAuxiliar1     : 69
tipo                 : 63 79 80 82 185
tipo_lista           : 64
variables            : 2 84
variablesAuxiliar    : 1
variablesAuxiliar1   : 62 67
variablesAuxiliar2   : 62 65 67
variablesAuxiliar3   : 62 67

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar
    (50) creaTablaFunc -> . empty
    (206) empty -> .

    ID              reduce using rule 206 (empty -> .)

    creaTablaFunc                  shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) programa -> PROGRAMA creaTablaFunc . ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar

    ID              shift and go to state 5


state 4

    (50) creaTablaFunc -> empty .

    ID              reduce using rule 50 (creaTablaFunc -> empty .)


state 5

    (1) programa -> PROGRAMA creaTablaFunc ID . agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar
    (51) agregaGlobalTabla -> . empty
    (206) empty -> .

    SEMICOLON       reduce using rule 206 (empty -> .)

    agregaGlobalTabla              shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla . SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar

    SEMICOLON       shift and go to state 8


state 7

    (51) agregaGlobalTabla -> empty .

    SEMICOLON       reduce using rule 51 (agregaGlobalTabla -> empty .)


state 8

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON . variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar
    (2) variablesAuxiliar -> . creaTablaVar variables
    (3) variablesAuxiliar -> . empty
    (53) creaTablaVar -> . empty
    (206) empty -> .

    PANTALLA        reduce using rule 206 (empty -> .)
    FIGURAS         reduce using rule 206 (empty -> .)
    GRAVEDAD        reduce using rule 206 (empty -> .)
    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)
    VARIABLES       reduce using rule 206 (empty -> .)

    variablesAuxiliar              shift and go to state 9
    creaTablaVar                   shift and go to state 10
    empty                          shift and go to state 11

state 9

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar . pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar
    (4) pantallaAuxiliar -> . pantalla
    (5) pantallaAuxiliar -> . empty agregarCuadDefectoPantalla
    (77) pantalla -> . PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla
    (206) empty -> .

    PANTALLA        shift and go to state 15
    FIGURAS         reduce using rule 206 (empty -> .)
    GRAVEDAD        reduce using rule 206 (empty -> .)
    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)

    pantallaAuxiliar               shift and go to state 12
    pantalla                       shift and go to state 13
    empty                          shift and go to state 14

state 10

    (2) variablesAuxiliar -> creaTablaVar . variables
    (62) variables -> . VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3

    VARIABLES       shift and go to state 17

    variables                      shift and go to state 16

state 11

    (3) variablesAuxiliar -> empty .
    (53) creaTablaVar -> empty .

    PANTALLA        reduce using rule 3 (variablesAuxiliar -> empty .)
    FIGURAS         reduce using rule 3 (variablesAuxiliar -> empty .)
    GRAVEDAD        reduce using rule 3 (variablesAuxiliar -> empty .)
    FUNCIONES       reduce using rule 3 (variablesAuxiliar -> empty .)
    APOLO           reduce using rule 3 (variablesAuxiliar -> empty .)
    VARIABLES       reduce using rule 53 (creaTablaVar -> empty .)


state 12

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar . figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar
    (6) figurasAuxiliar -> . figuras
    (7) figurasAuxiliar -> . empty
    (88) figuras -> . FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (206) empty -> .

    FIGURAS         shift and go to state 21
    GRAVEDAD        reduce using rule 206 (empty -> .)
    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)

    figurasAuxiliar                shift and go to state 18
    figuras                        shift and go to state 19
    empty                          shift and go to state 20

state 13

    (4) pantallaAuxiliar -> pantalla .

    FIGURAS         reduce using rule 4 (pantallaAuxiliar -> pantalla .)
    GRAVEDAD        reduce using rule 4 (pantallaAuxiliar -> pantalla .)
    FUNCIONES       reduce using rule 4 (pantallaAuxiliar -> pantalla .)
    APOLO           reduce using rule 4 (pantallaAuxiliar -> pantalla .)


state 14

    (5) pantallaAuxiliar -> empty . agregarCuadDefectoPantalla
    (24) agregarCuadDefectoPantalla -> . empty
    (206) empty -> .

    FIGURAS         reduce using rule 206 (empty -> .)
    GRAVEDAD        reduce using rule 206 (empty -> .)
    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)

    empty                          shift and go to state 22
    agregarCuadDefectoPantalla     shift and go to state 23

state 15

    (77) pantalla -> PANTALLA . L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla

    L_PAREN         shift and go to state 24


state 16

    (2) variablesAuxiliar -> creaTablaVar variables .

    PANTALLA        reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)
    FIGURAS         reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)
    GRAVEDAD        reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)
    FUNCIONES       reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)
    APOLO           reduce using rule 2 (variablesAuxiliar -> creaTablaVar variables .)


state 17

    (62) variables -> VARIABLES . variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (63) variablesAuxiliar1 -> . tipo
    (64) variablesAuxiliar1 -> . tipo_lista
    (186) tipo -> . ENTERO
    (187) tipo -> . FLOTANTE
    (188) tipo -> . BOOLEANO
    (189) tipo -> . TEXTO
    (185) tipo_lista -> . LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31
    LISTA           shift and go to state 32

    variablesAuxiliar1             shift and go to state 25
    tipo                           shift and go to state 26
    tipo_lista                     shift and go to state 27

state 18

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar . gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar
    (8) gravedadAuxiliar -> . gravedad
    (9) gravedadAuxiliar -> . empty agregarCuadDefectoGravedad
    (78) gravedad -> . GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad
    (206) empty -> .

    GRAVEDAD        shift and go to state 36
    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)

    gravedadAuxiliar               shift and go to state 33
    gravedad                       shift and go to state 34
    empty                          shift and go to state 35

state 19

    (6) figurasAuxiliar -> figuras .

    GRAVEDAD        reduce using rule 6 (figurasAuxiliar -> figuras .)
    FUNCIONES       reduce using rule 6 (figurasAuxiliar -> figuras .)
    APOLO           reduce using rule 6 (figurasAuxiliar -> figuras .)


state 20

    (7) figurasAuxiliar -> empty .

    GRAVEDAD        reduce using rule 7 (figurasAuxiliar -> empty .)
    FUNCIONES       reduce using rule 7 (figurasAuxiliar -> empty .)
    APOLO           reduce using rule 7 (figurasAuxiliar -> empty .)


state 21

    (88) figuras -> FIGURAS . creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (59) creaFigFuncSimb -> . empty
    (206) empty -> .

    CUADRADO        reduce using rule 206 (empty -> .)
    CIRCULO         reduce using rule 206 (empty -> .)
    TRIANGULO       reduce using rule 206 (empty -> .)
    LINEA           reduce using rule 206 (empty -> .)

    creaFigFuncSimb                shift and go to state 37
    empty                          shift and go to state 38

state 22

    (24) agregarCuadDefectoPantalla -> empty .

    FIGURAS         reduce using rule 24 (agregarCuadDefectoPantalla -> empty .)
    GRAVEDAD        reduce using rule 24 (agregarCuadDefectoPantalla -> empty .)
    FUNCIONES       reduce using rule 24 (agregarCuadDefectoPantalla -> empty .)
    APOLO           reduce using rule 24 (agregarCuadDefectoPantalla -> empty .)


state 23

    (5) pantallaAuxiliar -> empty agregarCuadDefectoPantalla .

    FIGURAS         reduce using rule 5 (pantallaAuxiliar -> empty agregarCuadDefectoPantalla .)
    GRAVEDAD        reduce using rule 5 (pantallaAuxiliar -> empty agregarCuadDefectoPantalla .)
    FUNCIONES       reduce using rule 5 (pantallaAuxiliar -> empty agregarCuadDefectoPantalla .)
    APOLO           reduce using rule 5 (pantallaAuxiliar -> empty agregarCuadDefectoPantalla .)


state 24

    (77) pantalla -> PANTALLA L_PAREN . exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 40
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 25

    (62) variables -> VARIABLES variablesAuxiliar1 . ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3

    ID              shift and go to state 53


state 26

    (63) variablesAuxiliar1 -> tipo .

    ID              reduce using rule 63 (variablesAuxiliar1 -> tipo .)


state 27

    (64) variablesAuxiliar1 -> tipo_lista .

    ID              reduce using rule 64 (variablesAuxiliar1 -> tipo_lista .)


state 28

    (186) tipo -> ENTERO .

    ID              reduce using rule 186 (tipo -> ENTERO .)
    L_BRACKETS      reduce using rule 186 (tipo -> ENTERO .)


state 29

    (187) tipo -> FLOTANTE .

    ID              reduce using rule 187 (tipo -> FLOTANTE .)
    L_BRACKETS      reduce using rule 187 (tipo -> FLOTANTE .)


state 30

    (188) tipo -> BOOLEANO .

    ID              reduce using rule 188 (tipo -> BOOLEANO .)
    L_BRACKETS      reduce using rule 188 (tipo -> BOOLEANO .)


state 31

    (189) tipo -> TEXTO .

    ID              reduce using rule 189 (tipo -> TEXTO .)
    L_BRACKETS      reduce using rule 189 (tipo -> TEXTO .)


state 32

    (185) tipo_lista -> LISTA . listaVar tipo L_BRACKETS CTE_I R_BRACKETS
    (47) listaVar -> . empty
    (206) empty -> .

    ENTERO          reduce using rule 206 (empty -> .)
    FLOTANTE        reduce using rule 206 (empty -> .)
    BOOLEANO        reduce using rule 206 (empty -> .)
    TEXTO           reduce using rule 206 (empty -> .)

    listaVar                       shift and go to state 54
    empty                          shift and go to state 55

state 33

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar . agregarGoToApolo funcionesAuxiliar apoloAuxiliar
    (49) agregarGoToApolo -> . empty
    (206) empty -> .

    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)

    agregarGoToApolo               shift and go to state 56
    empty                          shift and go to state 57

state 34

    (8) gravedadAuxiliar -> gravedad .

    FUNCIONES       reduce using rule 8 (gravedadAuxiliar -> gravedad .)
    APOLO           reduce using rule 8 (gravedadAuxiliar -> gravedad .)


state 35

    (9) gravedadAuxiliar -> empty . agregarCuadDefectoGravedad
    (26) agregarCuadDefectoGravedad -> . empty
    (206) empty -> .

    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)

    empty                          shift and go to state 58
    agregarCuadDefectoGravedad     shift and go to state 59

state 36

    (78) gravedad -> GRAVEDAD . L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad

    L_PAREN         shift and go to state 60


state 37

    (88) figuras -> FIGURAS creaFigFuncSimb . asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (52) asignarAlcance -> . empty
    (206) empty -> .

    CUADRADO        reduce using rule 206 (empty -> .)
    CIRCULO         reduce using rule 206 (empty -> .)
    TRIANGULO       reduce using rule 206 (empty -> .)
    LINEA           reduce using rule 206 (empty -> .)

    asignarAlcance                 shift and go to state 61
    empty                          shift and go to state 62

state 38

    (59) creaFigFuncSimb -> empty .

    CUADRADO        reduce using rule 59 (creaFigFuncSimb -> empty .)
    CIRCULO         reduce using rule 59 (creaFigFuncSimb -> empty .)
    TRIANGULO       reduce using rule 59 (creaFigFuncSimb -> empty .)
    LINEA           reduce using rule 59 (creaFigFuncSimb -> empty .)


state 39

    (164) factor -> L_PAREN . agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (17) agregarPisoFalso -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarPisoFalso               shift and go to state 63
    empty                          shift and go to state 64

state 40

    (77) pantalla -> PANTALLA L_PAREN exp . COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla

    COMMA           shift and go to state 65


state 41

    (104) exp -> termino . compSemMasMenosYGenCuad expAuxiliar1
    (15) compSemMasMenosYGenCuad -> . empty
    (206) empty -> .

    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    compSemMasMenosYGenCuad        shift and go to state 66
    empty                          shift and go to state 67

state 42

    (69) termino -> factor . comprobarSemanticaPorEntre terminoAuxiliar1
    (16) comprobarSemanticaPorEntre -> . empty
    (206) empty -> .

    DIV_OP          reduce using rule 206 (empty -> .)
    TIMES_OP        reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    comprobarSemanticaPorEntre     shift and go to state 68
    empty                          shift and go to state 69

state 43

    (165) factor -> factorAuxiliar1 . factorAuxiliar3 factorAuxiliar4
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    factorAuxiliar3                shift and go to state 70
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 44

    (166) factor -> factorAuxiliar3 .

    DIV_OP          reduce using rule 166 (factor -> factorAuxiliar3 .)
    TIMES_OP        reduce using rule 166 (factor -> factorAuxiliar3 .)
    MINUS_OP        reduce using rule 166 (factor -> factorAuxiliar3 .)
    PLUS_OP         reduce using rule 166 (factor -> factorAuxiliar3 .)
    COMMA           reduce using rule 166 (factor -> factorAuxiliar3 .)
    N_EQUAL_OP      reduce using rule 166 (factor -> factorAuxiliar3 .)
    EQUAL_OP        reduce using rule 166 (factor -> factorAuxiliar3 .)
    BIGGER_THAN     reduce using rule 166 (factor -> factorAuxiliar3 .)
    LESS_THAN       reduce using rule 166 (factor -> factorAuxiliar3 .)
    BIGGER_EQUAL_THAN reduce using rule 166 (factor -> factorAuxiliar3 .)
    LESS_EQUAL_THAN reduce using rule 166 (factor -> factorAuxiliar3 .)
    R_PAREN         reduce using rule 166 (factor -> factorAuxiliar3 .)
    AND             reduce using rule 166 (factor -> factorAuxiliar3 .)
    OR              reduce using rule 166 (factor -> factorAuxiliar3 .)
    SEMICOLON       reduce using rule 166 (factor -> factorAuxiliar3 .)
    R_BRACKETS      reduce using rule 166 (factor -> factorAuxiliar3 .)


state 45

    (167) factorAuxiliar1 -> PLUS_OP .

    ID              reduce using rule 167 (factorAuxiliar1 -> PLUS_OP .)
    CTE_I           reduce using rule 167 (factorAuxiliar1 -> PLUS_OP .)
    CTE_F           reduce using rule 167 (factorAuxiliar1 -> PLUS_OP .)


state 46

    (168) factorAuxiliar1 -> MINUS_OP .

    ID              reduce using rule 168 (factorAuxiliar1 -> MINUS_OP .)
    CTE_I           reduce using rule 168 (factorAuxiliar1 -> MINUS_OP .)
    CTE_F           reduce using rule 168 (factorAuxiliar1 -> MINUS_OP .)


state 47

    (171) factorAuxiliar3 -> factorAuxiliar2 .

    DIV_OP          reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    TIMES_OP        reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    MINUS_OP        reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    PLUS_OP         reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    COMMA           reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    N_EQUAL_OP      reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    EQUAL_OP        reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    BIGGER_THAN     reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    LESS_THAN       reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    BIGGER_EQUAL_THAN reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    LESS_EQUAL_THAN reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    R_PAREN         reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    AND             reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    OR              reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    SEMICOLON       reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)
    R_BRACKETS      reduce using rule 171 (factorAuxiliar3 -> factorAuxiliar2 .)


state 48

    (172) factorAuxiliar3 -> ID . checarDefID agregarIdHaciaPilas
    (144) llamada -> ID . checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> ID . checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (54) checarDefID -> . empty
    (42) checarSiExisteFuncion -> . empty
    (206) empty -> .

    L_BRACKETS      reduce using rule 206 (empty -> .)
    DIV_OP          reduce using rule 206 (empty -> .)
    TIMES_OP        reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)
    L_PAREN         reduce using rule 206 (empty -> .)

    checarDefID                    shift and go to state 71
    checarSiExisteFuncion          shift and go to state 72
    empty                          shift and go to state 73

state 49

    (173) factorAuxiliar3 -> llamada .

    DIV_OP          reduce using rule 173 (factorAuxiliar3 -> llamada .)
    TIMES_OP        reduce using rule 173 (factorAuxiliar3 -> llamada .)
    MINUS_OP        reduce using rule 173 (factorAuxiliar3 -> llamada .)
    PLUS_OP         reduce using rule 173 (factorAuxiliar3 -> llamada .)
    COMMA           reduce using rule 173 (factorAuxiliar3 -> llamada .)
    N_EQUAL_OP      reduce using rule 173 (factorAuxiliar3 -> llamada .)
    EQUAL_OP        reduce using rule 173 (factorAuxiliar3 -> llamada .)
    BIGGER_THAN     reduce using rule 173 (factorAuxiliar3 -> llamada .)
    LESS_THAN       reduce using rule 173 (factorAuxiliar3 -> llamada .)
    BIGGER_EQUAL_THAN reduce using rule 173 (factorAuxiliar3 -> llamada .)
    LESS_EQUAL_THAN reduce using rule 173 (factorAuxiliar3 -> llamada .)
    R_PAREN         reduce using rule 173 (factorAuxiliar3 -> llamada .)
    AND             reduce using rule 173 (factorAuxiliar3 -> llamada .)
    OR              reduce using rule 173 (factorAuxiliar3 -> llamada .)
    SEMICOLON       reduce using rule 173 (factorAuxiliar3 -> llamada .)
    R_BRACKETS      reduce using rule 173 (factorAuxiliar3 -> llamada .)


state 50

    (174) factorAuxiliar3 -> elemArr .

    DIV_OP          reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    TIMES_OP        reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    MINUS_OP        reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    PLUS_OP         reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    COMMA           reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    N_EQUAL_OP      reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    EQUAL_OP        reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    BIGGER_THAN     reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    LESS_THAN       reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    BIGGER_EQUAL_THAN reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    LESS_EQUAL_THAN reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    R_PAREN         reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    AND             reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    OR              reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    SEMICOLON       reduce using rule 174 (factorAuxiliar3 -> elemArr .)
    R_BRACKETS      reduce using rule 174 (factorAuxiliar3 -> elemArr .)


state 51

    (169) factorAuxiliar2 -> CTE_I .

    DIV_OP          reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    TIMES_OP        reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    MINUS_OP        reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    PLUS_OP         reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    COMMA           reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    N_EQUAL_OP      reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    EQUAL_OP        reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    BIGGER_THAN     reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    LESS_THAN       reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    BIGGER_EQUAL_THAN reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    LESS_EQUAL_THAN reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    R_PAREN         reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    AND             reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    OR              reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    SEMICOLON       reduce using rule 169 (factorAuxiliar2 -> CTE_I .)
    R_BRACKETS      reduce using rule 169 (factorAuxiliar2 -> CTE_I .)


state 52

    (170) factorAuxiliar2 -> CTE_F .

    DIV_OP          reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    TIMES_OP        reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    MINUS_OP        reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    PLUS_OP         reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    COMMA           reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    N_EQUAL_OP      reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    EQUAL_OP        reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    BIGGER_THAN     reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    LESS_THAN       reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    BIGGER_EQUAL_THAN reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    LESS_EQUAL_THAN reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    R_PAREN         reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    AND             reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    OR              reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    SEMICOLON       reduce using rule 170 (factorAuxiliar2 -> CTE_F .)
    R_BRACKETS      reduce using rule 170 (factorAuxiliar2 -> CTE_F .)


state 53

    (62) variables -> VARIABLES variablesAuxiliar1 ID . agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (55) agregaVarTabla -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    agregaVarTabla                 shift and go to state 74
    empty                          shift and go to state 75

state 54

    (185) tipo_lista -> LISTA listaVar . tipo L_BRACKETS CTE_I R_BRACKETS
    (186) tipo -> . ENTERO
    (187) tipo -> . FLOTANTE
    (188) tipo -> . BOOLEANO
    (189) tipo -> . TEXTO

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31

    tipo                           shift and go to state 76

state 55

    (47) listaVar -> empty .

    ENTERO          reduce using rule 47 (listaVar -> empty .)
    FLOTANTE        reduce using rule 47 (listaVar -> empty .)
    BOOLEANO        reduce using rule 47 (listaVar -> empty .)
    TEXTO           reduce using rule 47 (listaVar -> empty .)


state 56

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo . funcionesAuxiliar apoloAuxiliar
    (10) funcionesAuxiliar -> . FUNCIONES funciones
    (11) funcionesAuxiliar -> . empty
    (206) empty -> .

    FUNCIONES       shift and go to state 78
    APOLO           reduce using rule 206 (empty -> .)

    funcionesAuxiliar              shift and go to state 77
    empty                          shift and go to state 79

state 57

    (49) agregarGoToApolo -> empty .

    FUNCIONES       reduce using rule 49 (agregarGoToApolo -> empty .)
    APOLO           reduce using rule 49 (agregarGoToApolo -> empty .)


state 58

    (26) agregarCuadDefectoGravedad -> empty .

    FUNCIONES       reduce using rule 26 (agregarCuadDefectoGravedad -> empty .)
    APOLO           reduce using rule 26 (agregarCuadDefectoGravedad -> empty .)


state 59

    (9) gravedadAuxiliar -> empty agregarCuadDefectoGravedad .

    FUNCIONES       reduce using rule 9 (gravedadAuxiliar -> empty agregarCuadDefectoGravedad .)
    APOLO           reduce using rule 9 (gravedadAuxiliar -> empty agregarCuadDefectoGravedad .)


state 60

    (78) gravedad -> GRAVEDAD L_PAREN . exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 80
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 61

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance . figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (91) figura -> . CUADRADO
    (92) figura -> . CIRCULO
    (93) figura -> . TRIANGULO
    (94) figura -> . LINEA

    CUADRADO        shift and go to state 82
    CIRCULO         shift and go to state 83
    TRIANGULO       shift and go to state 84
    LINEA           shift and go to state 85

    figura                         shift and go to state 81

state 62

    (52) asignarAlcance -> empty .

    CUADRADO        reduce using rule 52 (asignarAlcance -> empty .)
    CIRCULO         reduce using rule 52 (asignarAlcance -> empty .)
    TRIANGULO       reduce using rule 52 (asignarAlcance -> empty .)
    LINEA           reduce using rule 52 (asignarAlcance -> empty .)
    L_PAREN         reduce using rule 52 (asignarAlcance -> empty .)


state 63

    (164) factor -> L_PAREN agregarPisoFalso . expresion R_PAREN eliminarPisoFalso
    (151) expresion -> . exp expresionAuxiliar1
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    expresion                      shift and go to state 86
    exp                            shift and go to state 87
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 64

    (17) agregarPisoFalso -> empty .

    L_PAREN         reduce using rule 17 (agregarPisoFalso -> empty .)
    PLUS_OP         reduce using rule 17 (agregarPisoFalso -> empty .)
    MINUS_OP        reduce using rule 17 (agregarPisoFalso -> empty .)
    ID              reduce using rule 17 (agregarPisoFalso -> empty .)
    CTE_I           reduce using rule 17 (agregarPisoFalso -> empty .)
    CTE_F           reduce using rule 17 (agregarPisoFalso -> empty .)


state 65

    (77) pantalla -> PANTALLA L_PAREN exp COMMA . exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 88
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 66

    (104) exp -> termino compSemMasMenosYGenCuad . expAuxiliar1
    (105) expAuxiliar1 -> . operadorMenos agregarOperador exp
    (106) expAuxiliar1 -> . operadorMas agregarOperador exp
    (107) expAuxiliar1 -> . empty
    (201) operadorMenos -> . MINUS_OP
    (200) operadorMas -> . PLUS_OP
    (206) empty -> .

    MINUS_OP        shift and go to state 93
    PLUS_OP         shift and go to state 94
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    expAuxiliar1                   shift and go to state 89
    operadorMenos                  shift and go to state 90
    operadorMas                    shift and go to state 91
    empty                          shift and go to state 92

state 67

    (15) compSemMasMenosYGenCuad -> empty .

    MINUS_OP        reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    PLUS_OP         reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    COMMA           reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    N_EQUAL_OP      reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    EQUAL_OP        reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    BIGGER_THAN     reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    LESS_THAN       reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    LESS_EQUAL_THAN reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    R_PAREN         reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    AND             reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    OR              reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    SEMICOLON       reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)
    R_BRACKETS      reduce using rule 15 (compSemMasMenosYGenCuad -> empty .)


state 68

    (69) termino -> factor comprobarSemanticaPorEntre . terminoAuxiliar1
    (70) terminoAuxiliar1 -> . operadorEntre agregarOperador termino
    (71) terminoAuxiliar1 -> . operadorPor agregarOperador termino
    (72) terminoAuxiliar1 -> . empty
    (203) operadorEntre -> . DIV_OP
    (202) operadorPor -> . TIMES_OP
    (206) empty -> .

    DIV_OP          shift and go to state 99
    TIMES_OP        shift and go to state 100
    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    terminoAuxiliar1               shift and go to state 95
    operadorEntre                  shift and go to state 96
    operadorPor                    shift and go to state 97
    empty                          shift and go to state 98

state 69

    (16) comprobarSemanticaPorEntre -> empty .

    DIV_OP          reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    TIMES_OP        reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    MINUS_OP        reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    PLUS_OP         reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    COMMA           reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    N_EQUAL_OP      reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    EQUAL_OP        reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    BIGGER_THAN     reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    LESS_THAN       reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    LESS_EQUAL_THAN reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    R_PAREN         reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    AND             reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    OR              reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    SEMICOLON       reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)
    R_BRACKETS      reduce using rule 16 (comprobarSemanticaPorEntre -> empty .)


state 70

    (165) factor -> factorAuxiliar1 factorAuxiliar3 . factorAuxiliar4
    (175) factorAuxiliar4 -> . empty
    (206) empty -> .

    DIV_OP          reduce using rule 206 (empty -> .)
    TIMES_OP        reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    factorAuxiliar4                shift and go to state 101
    empty                          shift and go to state 102

state 71

    (172) factorAuxiliar3 -> ID checarDefID . agregarIdHaciaPilas
    (136) elemArr -> ID checarDefID . agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (13) agregarIdHaciaPilas -> . empty
    (206) empty -> .

    L_BRACKETS      reduce using rule 206 (empty -> .)
    DIV_OP          reduce using rule 206 (empty -> .)
    TIMES_OP        reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    agregarIdHaciaPilas            shift and go to state 103
    empty                          shift and go to state 104

state 72

    (144) llamada -> ID checarSiExisteFuncion . generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (43) generarAccionERA -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)

    generarAccionERA               shift and go to state 105
    empty                          shift and go to state 106

state 73

    (54) checarDefID -> empty .
    (42) checarSiExisteFuncion -> empty .

    L_BRACKETS      reduce using rule 54 (checarDefID -> empty .)
    DIV_OP          reduce using rule 54 (checarDefID -> empty .)
    TIMES_OP        reduce using rule 54 (checarDefID -> empty .)
    MINUS_OP        reduce using rule 54 (checarDefID -> empty .)
    PLUS_OP         reduce using rule 54 (checarDefID -> empty .)
    COMMA           reduce using rule 54 (checarDefID -> empty .)
    N_EQUAL_OP      reduce using rule 54 (checarDefID -> empty .)
    EQUAL_OP        reduce using rule 54 (checarDefID -> empty .)
    BIGGER_THAN     reduce using rule 54 (checarDefID -> empty .)
    LESS_THAN       reduce using rule 54 (checarDefID -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 54 (checarDefID -> empty .)
    LESS_EQUAL_THAN reduce using rule 54 (checarDefID -> empty .)
    R_PAREN         reduce using rule 54 (checarDefID -> empty .)
    AND             reduce using rule 54 (checarDefID -> empty .)
    OR              reduce using rule 54 (checarDefID -> empty .)
    SEMICOLON       reduce using rule 54 (checarDefID -> empty .)
    R_BRACKETS      reduce using rule 54 (checarDefID -> empty .)
    L_PAREN         reduce using rule 42 (checarSiExisteFuncion -> empty .)


state 74

    (62) variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla . variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (65) variablesAuxiliar2 -> . COMMA ID agregaVarTabla variablesAuxiliar2
    (66) variablesAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 108
    SEMICOLON       reduce using rule 206 (empty -> .)

    variablesAuxiliar2             shift and go to state 107
    empty                          shift and go to state 109

state 75

    (55) agregaVarTabla -> empty .

    COMMA           reduce using rule 55 (agregaVarTabla -> empty .)
    SEMICOLON       reduce using rule 55 (agregaVarTabla -> empty .)


state 76

    (185) tipo_lista -> LISTA listaVar tipo . L_BRACKETS CTE_I R_BRACKETS

    L_BRACKETS      shift and go to state 110


state 77

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar . apoloAuxiliar
    (12) apoloAuxiliar -> . APOLO apoloTablaFunc agregaFuncTabla creaTablaVar bloque

    APOLO           shift and go to state 112

    apoloAuxiliar                  shift and go to state 111

state 78

    (10) funcionesAuxiliar -> FUNCIONES . funciones
    (79) funciones -> . funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (80) funcionesAuxiliar1 -> . tipo
    (81) funcionesAuxiliar1 -> . VOID
    (186) tipo -> . ENTERO
    (187) tipo -> . FLOTANTE
    (188) tipo -> . BOOLEANO
    (189) tipo -> . TEXTO

    VOID            shift and go to state 116
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31

    funciones                      shift and go to state 113
    funcionesAuxiliar1             shift and go to state 114
    tipo                           shift and go to state 115

state 79

    (11) funcionesAuxiliar -> empty .

    APOLO           reduce using rule 11 (funcionesAuxiliar -> empty .)


state 80

    (78) gravedad -> GRAVEDAD L_PAREN exp . COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad

    COMMA           shift and go to state 117


state 81

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura . ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON

    ID              shift and go to state 118


state 82

    (91) figura -> CUADRADO .

    ID              reduce using rule 91 (figura -> CUADRADO .)


state 83

    (92) figura -> CIRCULO .

    ID              reduce using rule 92 (figura -> CIRCULO .)


state 84

    (93) figura -> TRIANGULO .

    ID              reduce using rule 93 (figura -> TRIANGULO .)


state 85

    (94) figura -> LINEA .

    ID              reduce using rule 94 (figura -> LINEA .)


state 86

    (164) factor -> L_PAREN agregarPisoFalso expresion . R_PAREN eliminarPisoFalso

    R_PAREN         shift and go to state 119


state 87

    (151) expresion -> exp . expresionAuxiliar1
    (152) expresionAuxiliar1 -> . expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
    (153) expresionAuxiliar1 -> . empty
    (154) expresionAuxiliar2 -> . N_EQUAL_OP
    (155) expresionAuxiliar2 -> . EQUAL_OP
    (156) expresionAuxiliar2 -> . BIGGER_THAN
    (157) expresionAuxiliar2 -> . LESS_THAN
    (158) expresionAuxiliar2 -> . BIGGER_EQUAL_THAN
    (159) expresionAuxiliar2 -> . LESS_EQUAL_THAN
    (206) empty -> .

    N_EQUAL_OP      shift and go to state 123
    EQUAL_OP        shift and go to state 124
    BIGGER_THAN     shift and go to state 125
    LESS_THAN       shift and go to state 126
    BIGGER_EQUAL_THAN shift and go to state 127
    LESS_EQUAL_THAN shift and go to state 128
    R_PAREN         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    expresionAuxiliar1             shift and go to state 120
    expresionAuxiliar2             shift and go to state 121
    empty                          shift and go to state 122

state 88

    (77) pantalla -> PANTALLA L_PAREN exp COMMA exp . R_PAREN SEMICOLON agregarCuadYCompSemPantalla

    R_PAREN         shift and go to state 129


state 89

    (104) exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .

    COMMA           reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    N_EQUAL_OP      reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    EQUAL_OP        reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    BIGGER_THAN     reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    LESS_THAN       reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    BIGGER_EQUAL_THAN reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    LESS_EQUAL_THAN reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    R_PAREN         reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    AND             reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    OR              reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    SEMICOLON       reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)
    R_BRACKETS      reduce using rule 104 (exp -> termino compSemMasMenosYGenCuad expAuxiliar1 .)


state 90

    (105) expAuxiliar1 -> operadorMenos . agregarOperador exp
    (14) agregarOperador -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarOperador                shift and go to state 130
    empty                          shift and go to state 131

state 91

    (106) expAuxiliar1 -> operadorMas . agregarOperador exp
    (14) agregarOperador -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarOperador                shift and go to state 132
    empty                          shift and go to state 131

state 92

    (107) expAuxiliar1 -> empty .

    COMMA           reduce using rule 107 (expAuxiliar1 -> empty .)
    N_EQUAL_OP      reduce using rule 107 (expAuxiliar1 -> empty .)
    EQUAL_OP        reduce using rule 107 (expAuxiliar1 -> empty .)
    BIGGER_THAN     reduce using rule 107 (expAuxiliar1 -> empty .)
    LESS_THAN       reduce using rule 107 (expAuxiliar1 -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 107 (expAuxiliar1 -> empty .)
    LESS_EQUAL_THAN reduce using rule 107 (expAuxiliar1 -> empty .)
    R_PAREN         reduce using rule 107 (expAuxiliar1 -> empty .)
    AND             reduce using rule 107 (expAuxiliar1 -> empty .)
    OR              reduce using rule 107 (expAuxiliar1 -> empty .)
    SEMICOLON       reduce using rule 107 (expAuxiliar1 -> empty .)
    R_BRACKETS      reduce using rule 107 (expAuxiliar1 -> empty .)


state 93

    (201) operadorMenos -> MINUS_OP .

    L_PAREN         reduce using rule 201 (operadorMenos -> MINUS_OP .)
    PLUS_OP         reduce using rule 201 (operadorMenos -> MINUS_OP .)
    MINUS_OP        reduce using rule 201 (operadorMenos -> MINUS_OP .)
    ID              reduce using rule 201 (operadorMenos -> MINUS_OP .)
    CTE_I           reduce using rule 201 (operadorMenos -> MINUS_OP .)
    CTE_F           reduce using rule 201 (operadorMenos -> MINUS_OP .)


state 94

    (200) operadorMas -> PLUS_OP .

    L_PAREN         reduce using rule 200 (operadorMas -> PLUS_OP .)
    PLUS_OP         reduce using rule 200 (operadorMas -> PLUS_OP .)
    MINUS_OP        reduce using rule 200 (operadorMas -> PLUS_OP .)
    ID              reduce using rule 200 (operadorMas -> PLUS_OP .)
    CTE_I           reduce using rule 200 (operadorMas -> PLUS_OP .)
    CTE_F           reduce using rule 200 (operadorMas -> PLUS_OP .)


state 95

    (69) termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .

    MINUS_OP        reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    PLUS_OP         reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    COMMA           reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    N_EQUAL_OP      reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    EQUAL_OP        reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    BIGGER_THAN     reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    LESS_THAN       reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    BIGGER_EQUAL_THAN reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    LESS_EQUAL_THAN reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    R_PAREN         reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    AND             reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    OR              reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    SEMICOLON       reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)
    R_BRACKETS      reduce using rule 69 (termino -> factor comprobarSemanticaPorEntre terminoAuxiliar1 .)


state 96

    (70) terminoAuxiliar1 -> operadorEntre . agregarOperador termino
    (14) agregarOperador -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarOperador                shift and go to state 133
    empty                          shift and go to state 131

state 97

    (71) terminoAuxiliar1 -> operadorPor . agregarOperador termino
    (14) agregarOperador -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarOperador                shift and go to state 134
    empty                          shift and go to state 131

state 98

    (72) terminoAuxiliar1 -> empty .

    MINUS_OP        reduce using rule 72 (terminoAuxiliar1 -> empty .)
    PLUS_OP         reduce using rule 72 (terminoAuxiliar1 -> empty .)
    COMMA           reduce using rule 72 (terminoAuxiliar1 -> empty .)
    N_EQUAL_OP      reduce using rule 72 (terminoAuxiliar1 -> empty .)
    EQUAL_OP        reduce using rule 72 (terminoAuxiliar1 -> empty .)
    BIGGER_THAN     reduce using rule 72 (terminoAuxiliar1 -> empty .)
    LESS_THAN       reduce using rule 72 (terminoAuxiliar1 -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 72 (terminoAuxiliar1 -> empty .)
    LESS_EQUAL_THAN reduce using rule 72 (terminoAuxiliar1 -> empty .)
    R_PAREN         reduce using rule 72 (terminoAuxiliar1 -> empty .)
    AND             reduce using rule 72 (terminoAuxiliar1 -> empty .)
    OR              reduce using rule 72 (terminoAuxiliar1 -> empty .)
    SEMICOLON       reduce using rule 72 (terminoAuxiliar1 -> empty .)
    R_BRACKETS      reduce using rule 72 (terminoAuxiliar1 -> empty .)


state 99

    (203) operadorEntre -> DIV_OP .

    L_PAREN         reduce using rule 203 (operadorEntre -> DIV_OP .)
    PLUS_OP         reduce using rule 203 (operadorEntre -> DIV_OP .)
    MINUS_OP        reduce using rule 203 (operadorEntre -> DIV_OP .)
    ID              reduce using rule 203 (operadorEntre -> DIV_OP .)
    CTE_I           reduce using rule 203 (operadorEntre -> DIV_OP .)
    CTE_F           reduce using rule 203 (operadorEntre -> DIV_OP .)


state 100

    (202) operadorPor -> TIMES_OP .

    L_PAREN         reduce using rule 202 (operadorPor -> TIMES_OP .)
    PLUS_OP         reduce using rule 202 (operadorPor -> TIMES_OP .)
    MINUS_OP        reduce using rule 202 (operadorPor -> TIMES_OP .)
    ID              reduce using rule 202 (operadorPor -> TIMES_OP .)
    CTE_I           reduce using rule 202 (operadorPor -> TIMES_OP .)
    CTE_F           reduce using rule 202 (operadorPor -> TIMES_OP .)


state 101

    (165) factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .

    DIV_OP          reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    TIMES_OP        reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    MINUS_OP        reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    PLUS_OP         reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    COMMA           reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    N_EQUAL_OP      reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    EQUAL_OP        reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    BIGGER_THAN     reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    LESS_THAN       reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    BIGGER_EQUAL_THAN reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    LESS_EQUAL_THAN reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    R_PAREN         reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    AND             reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    OR              reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    SEMICOLON       reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)
    R_BRACKETS      reduce using rule 165 (factor -> factorAuxiliar1 factorAuxiliar3 factorAuxiliar4 .)


state 102

    (175) factorAuxiliar4 -> empty .

    DIV_OP          reduce using rule 175 (factorAuxiliar4 -> empty .)
    TIMES_OP        reduce using rule 175 (factorAuxiliar4 -> empty .)
    MINUS_OP        reduce using rule 175 (factorAuxiliar4 -> empty .)
    PLUS_OP         reduce using rule 175 (factorAuxiliar4 -> empty .)
    COMMA           reduce using rule 175 (factorAuxiliar4 -> empty .)
    N_EQUAL_OP      reduce using rule 175 (factorAuxiliar4 -> empty .)
    EQUAL_OP        reduce using rule 175 (factorAuxiliar4 -> empty .)
    BIGGER_THAN     reduce using rule 175 (factorAuxiliar4 -> empty .)
    LESS_THAN       reduce using rule 175 (factorAuxiliar4 -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 175 (factorAuxiliar4 -> empty .)
    LESS_EQUAL_THAN reduce using rule 175 (factorAuxiliar4 -> empty .)
    R_PAREN         reduce using rule 175 (factorAuxiliar4 -> empty .)
    AND             reduce using rule 175 (factorAuxiliar4 -> empty .)
    OR              reduce using rule 175 (factorAuxiliar4 -> empty .)
    SEMICOLON       reduce using rule 175 (factorAuxiliar4 -> empty .)
    R_BRACKETS      reduce using rule 175 (factorAuxiliar4 -> empty .)


state 103

    (172) factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .
    (136) elemArr -> ID checarDefID agregarIdHaciaPilas . agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (138) agregarLongLista -> . empty
    (206) empty -> .

    DIV_OP          reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    TIMES_OP        reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    MINUS_OP        reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    PLUS_OP         reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    COMMA           reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    N_EQUAL_OP      reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    EQUAL_OP        reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    BIGGER_THAN     reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    LESS_THAN       reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    BIGGER_EQUAL_THAN reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    LESS_EQUAL_THAN reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    R_PAREN         reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    AND             reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    OR              reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    SEMICOLON       reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    R_BRACKETS      reduce using rule 172 (factorAuxiliar3 -> ID checarDefID agregarIdHaciaPilas .)
    L_BRACKETS      reduce using rule 206 (empty -> .)

    agregarLongLista               shift and go to state 135
    empty                          shift and go to state 136

state 104

    (13) agregarIdHaciaPilas -> empty .

    L_BRACKETS      reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    DIV_OP          reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    TIMES_OP        reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    MINUS_OP        reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    PLUS_OP         reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    COMMA           reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    N_EQUAL_OP      reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    EQUAL_OP        reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    BIGGER_THAN     reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    LESS_THAN       reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    LESS_EQUAL_THAN reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    R_PAREN         reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    AND             reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    OR              reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    SEMICOLON       reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    R_BRACKETS      reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    PLUS_EQUAL_OP   reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    MINUS_EQUAL_OP  reduce using rule 13 (agregarIdHaciaPilas -> empty .)
    ASSIGN_OP       reduce using rule 13 (agregarIdHaciaPilas -> empty .)


state 105

    (144) llamada -> ID checarSiExisteFuncion generarAccionERA . L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub

    L_PAREN         shift and go to state 137


state 106

    (43) generarAccionERA -> empty .

    L_PAREN         reduce using rule 43 (generarAccionERA -> empty .)


state 107

    (62) variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 . SEMICOLON variablesAuxiliar3

    SEMICOLON       shift and go to state 138


state 108

    (65) variablesAuxiliar2 -> COMMA . ID agregaVarTabla variablesAuxiliar2

    ID              shift and go to state 139


state 109

    (66) variablesAuxiliar2 -> empty .

    SEMICOLON       reduce using rule 66 (variablesAuxiliar2 -> empty .)


state 110

    (185) tipo_lista -> LISTA listaVar tipo L_BRACKETS . CTE_I R_BRACKETS

    CTE_I           shift and go to state 140


state 111

    (1) programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar .

    $end            reduce using rule 1 (programa -> PROGRAMA creaTablaFunc ID agregaGlobalTabla SEMICOLON variablesAuxiliar pantallaAuxiliar figurasAuxiliar gravedadAuxiliar agregarGoToApolo funcionesAuxiliar apoloAuxiliar .)


state 112

    (12) apoloAuxiliar -> APOLO . apoloTablaFunc agregaFuncTabla creaTablaVar bloque
    (48) apoloTablaFunc -> . empty
    (206) empty -> .

    L_BRACES        reduce using rule 206 (empty -> .)

    apoloTablaFunc                 shift and go to state 141
    empty                          shift and go to state 142

state 113

    (10) funcionesAuxiliar -> FUNCIONES funciones .

    APOLO           reduce using rule 10 (funcionesAuxiliar -> FUNCIONES funciones .)


state 114

    (79) funciones -> funcionesAuxiliar1 . ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    ID              shift and go to state 143


state 115

    (80) funcionesAuxiliar1 -> tipo .

    ID              reduce using rule 80 (funcionesAuxiliar1 -> tipo .)


state 116

    (81) funcionesAuxiliar1 -> VOID .

    ID              reduce using rule 81 (funcionesAuxiliar1 -> VOID .)


state 117

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA . exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 144
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 118

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID . checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (60) checarFiguraId -> . empty
    (206) empty -> .

    L_BRACES        reduce using rule 206 (empty -> .)

    checarFiguraId                 shift and go to state 145
    empty                          shift and go to state 146

state 119

    (164) factor -> L_PAREN agregarPisoFalso expresion R_PAREN . eliminarPisoFalso
    (18) eliminarPisoFalso -> . empty
    (206) empty -> .

    DIV_OP          reduce using rule 206 (empty -> .)
    TIMES_OP        reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    eliminarPisoFalso              shift and go to state 147
    empty                          shift and go to state 148

state 120

    (151) expresion -> exp expresionAuxiliar1 .

    R_PAREN         reduce using rule 151 (expresion -> exp expresionAuxiliar1 .)
    COMMA           reduce using rule 151 (expresion -> exp expresionAuxiliar1 .)
    SEMICOLON       reduce using rule 151 (expresion -> exp expresionAuxiliar1 .)


state 121

    (152) expresionAuxiliar1 -> expresionAuxiliar2 . agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
    (14) agregarOperador -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarOperador                shift and go to state 149
    empty                          shift and go to state 131

state 122

    (153) expresionAuxiliar1 -> empty .

    R_PAREN         reduce using rule 153 (expresionAuxiliar1 -> empty .)
    COMMA           reduce using rule 153 (expresionAuxiliar1 -> empty .)
    SEMICOLON       reduce using rule 153 (expresionAuxiliar1 -> empty .)


state 123

    (154) expresionAuxiliar2 -> N_EQUAL_OP .

    L_PAREN         reduce using rule 154 (expresionAuxiliar2 -> N_EQUAL_OP .)
    PLUS_OP         reduce using rule 154 (expresionAuxiliar2 -> N_EQUAL_OP .)
    MINUS_OP        reduce using rule 154 (expresionAuxiliar2 -> N_EQUAL_OP .)
    ID              reduce using rule 154 (expresionAuxiliar2 -> N_EQUAL_OP .)
    CTE_I           reduce using rule 154 (expresionAuxiliar2 -> N_EQUAL_OP .)
    CTE_F           reduce using rule 154 (expresionAuxiliar2 -> N_EQUAL_OP .)


state 124

    (155) expresionAuxiliar2 -> EQUAL_OP .

    L_PAREN         reduce using rule 155 (expresionAuxiliar2 -> EQUAL_OP .)
    PLUS_OP         reduce using rule 155 (expresionAuxiliar2 -> EQUAL_OP .)
    MINUS_OP        reduce using rule 155 (expresionAuxiliar2 -> EQUAL_OP .)
    ID              reduce using rule 155 (expresionAuxiliar2 -> EQUAL_OP .)
    CTE_I           reduce using rule 155 (expresionAuxiliar2 -> EQUAL_OP .)
    CTE_F           reduce using rule 155 (expresionAuxiliar2 -> EQUAL_OP .)


state 125

    (156) expresionAuxiliar2 -> BIGGER_THAN .

    L_PAREN         reduce using rule 156 (expresionAuxiliar2 -> BIGGER_THAN .)
    PLUS_OP         reduce using rule 156 (expresionAuxiliar2 -> BIGGER_THAN .)
    MINUS_OP        reduce using rule 156 (expresionAuxiliar2 -> BIGGER_THAN .)
    ID              reduce using rule 156 (expresionAuxiliar2 -> BIGGER_THAN .)
    CTE_I           reduce using rule 156 (expresionAuxiliar2 -> BIGGER_THAN .)
    CTE_F           reduce using rule 156 (expresionAuxiliar2 -> BIGGER_THAN .)


state 126

    (157) expresionAuxiliar2 -> LESS_THAN .

    L_PAREN         reduce using rule 157 (expresionAuxiliar2 -> LESS_THAN .)
    PLUS_OP         reduce using rule 157 (expresionAuxiliar2 -> LESS_THAN .)
    MINUS_OP        reduce using rule 157 (expresionAuxiliar2 -> LESS_THAN .)
    ID              reduce using rule 157 (expresionAuxiliar2 -> LESS_THAN .)
    CTE_I           reduce using rule 157 (expresionAuxiliar2 -> LESS_THAN .)
    CTE_F           reduce using rule 157 (expresionAuxiliar2 -> LESS_THAN .)


state 127

    (158) expresionAuxiliar2 -> BIGGER_EQUAL_THAN .

    L_PAREN         reduce using rule 158 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    PLUS_OP         reduce using rule 158 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    MINUS_OP        reduce using rule 158 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    ID              reduce using rule 158 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    CTE_I           reduce using rule 158 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)
    CTE_F           reduce using rule 158 (expresionAuxiliar2 -> BIGGER_EQUAL_THAN .)


state 128

    (159) expresionAuxiliar2 -> LESS_EQUAL_THAN .

    L_PAREN         reduce using rule 159 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    PLUS_OP         reduce using rule 159 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    MINUS_OP        reduce using rule 159 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    ID              reduce using rule 159 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    CTE_I           reduce using rule 159 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)
    CTE_F           reduce using rule 159 (expresionAuxiliar2 -> LESS_EQUAL_THAN .)


state 129

    (77) pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN . SEMICOLON agregarCuadYCompSemPantalla

    SEMICOLON       shift and go to state 150


state 130

    (105) expAuxiliar1 -> operadorMenos agregarOperador . exp
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 151
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 131

    (14) agregarOperador -> empty .

    L_PAREN         reduce using rule 14 (agregarOperador -> empty .)
    PLUS_OP         reduce using rule 14 (agregarOperador -> empty .)
    MINUS_OP        reduce using rule 14 (agregarOperador -> empty .)
    ID              reduce using rule 14 (agregarOperador -> empty .)
    CTE_I           reduce using rule 14 (agregarOperador -> empty .)
    CTE_F           reduce using rule 14 (agregarOperador -> empty .)


state 132

    (106) expAuxiliar1 -> operadorMas agregarOperador . exp
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 152
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 133

    (70) terminoAuxiliar1 -> operadorEntre agregarOperador . termino
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    termino                        shift and go to state 153
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 134

    (71) terminoAuxiliar1 -> operadorPor agregarOperador . termino
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    termino                        shift and go to state 154
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 135

    (136) elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista . L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_BRACKETS      shift and go to state 155


state 136

    (138) agregarLongLista -> empty .

    L_BRACKETS      reduce using rule 138 (agregarLongLista -> empty .)


state 137

    (144) llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN . llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (145) llamadaAuxiliar1 -> . llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
    (146) llamadaAuxiliar1 -> . empty
    (147) llamadaAuxiliar2 -> . exp
    (148) llamadaAuxiliar2 -> . sp_cte agregarOperando
    (206) empty -> .
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (196) sp_cte -> . CTE_STRING
    (197) sp_cte -> . cte_bool
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    R_PAREN         reduce using rule 206 (empty -> .)
    CTE_STRING      shift and go to state 161
    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    llamadaAuxiliar1               shift and go to state 156
    llamadaAuxiliar2               shift and go to state 157
    empty                          shift and go to state 158
    exp                            shift and go to state 159
    sp_cte                         shift and go to state 160
    termino                        shift and go to state 41
    cte_bool                       shift and go to state 162
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 138

    (62) variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON . variablesAuxiliar3
    (67) variablesAuxiliar3 -> . variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (68) variablesAuxiliar3 -> . empty
    (63) variablesAuxiliar1 -> . tipo
    (64) variablesAuxiliar1 -> . tipo_lista
    (206) empty -> .
    (186) tipo -> . ENTERO
    (187) tipo -> . FLOTANTE
    (188) tipo -> . BOOLEANO
    (189) tipo -> . TEXTO
    (185) tipo_lista -> . LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS

    PANTALLA        reduce using rule 206 (empty -> .)
    FIGURAS         reduce using rule 206 (empty -> .)
    GRAVEDAD        reduce using rule 206 (empty -> .)
    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)
    SI              reduce using rule 206 (empty -> .)
    IMPRIMIR        reduce using rule 206 (empty -> .)
    CICLO           reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    REGRESAR        reduce using rule 206 (empty -> .)
    DIBUJAR         reduce using rule 206 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 206 (empty -> .)
    R_BRACES        reduce using rule 206 (empty -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31
    LISTA           shift and go to state 32

    variablesAuxiliar1             shift and go to state 165
    variablesAuxiliar3             shift and go to state 166
    empty                          shift and go to state 167
    tipo                           shift and go to state 26
    tipo_lista                     shift and go to state 27

state 139

    (65) variablesAuxiliar2 -> COMMA ID . agregaVarTabla variablesAuxiliar2
    (55) agregaVarTabla -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    agregaVarTabla                 shift and go to state 168
    empty                          shift and go to state 75

state 140

    (185) tipo_lista -> LISTA listaVar tipo L_BRACKETS CTE_I . R_BRACKETS

    R_BRACKETS      shift and go to state 169


state 141

    (12) apoloAuxiliar -> APOLO apoloTablaFunc . agregaFuncTabla creaTablaVar bloque
    (56) agregaFuncTabla -> . empty
    (206) empty -> .

    L_BRACES        reduce using rule 206 (empty -> .)

    agregaFuncTabla                shift and go to state 170
    empty                          shift and go to state 171

state 142

    (48) apoloTablaFunc -> empty .

    L_BRACES        reduce using rule 48 (apoloTablaFunc -> empty .)


state 143

    (79) funciones -> funcionesAuxiliar1 ID . asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (52) asignarAlcance -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)

    asignarAlcance                 shift and go to state 172
    empty                          shift and go to state 62

state 144

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA exp . R_PAREN SEMICOLON agregarCuadYCompSemGravedad

    R_PAREN         shift and go to state 173


state 145

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId . L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON

    L_BRACES        shift and go to state 174


state 146

    (60) checarFiguraId -> empty .

    L_BRACES        reduce using rule 60 (checarFiguraId -> empty .)


state 147

    (164) factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .

    DIV_OP          reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    TIMES_OP        reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    MINUS_OP        reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    PLUS_OP         reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    COMMA           reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    N_EQUAL_OP      reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    EQUAL_OP        reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    BIGGER_THAN     reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    LESS_THAN       reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    BIGGER_EQUAL_THAN reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    LESS_EQUAL_THAN reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    R_PAREN         reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    AND             reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    OR              reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    SEMICOLON       reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)
    R_BRACKETS      reduce using rule 164 (factor -> L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso .)


state 148

    (18) eliminarPisoFalso -> empty .

    DIV_OP          reduce using rule 18 (eliminarPisoFalso -> empty .)
    TIMES_OP        reduce using rule 18 (eliminarPisoFalso -> empty .)
    MINUS_OP        reduce using rule 18 (eliminarPisoFalso -> empty .)
    PLUS_OP         reduce using rule 18 (eliminarPisoFalso -> empty .)
    COMMA           reduce using rule 18 (eliminarPisoFalso -> empty .)
    N_EQUAL_OP      reduce using rule 18 (eliminarPisoFalso -> empty .)
    EQUAL_OP        reduce using rule 18 (eliminarPisoFalso -> empty .)
    BIGGER_THAN     reduce using rule 18 (eliminarPisoFalso -> empty .)
    LESS_THAN       reduce using rule 18 (eliminarPisoFalso -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 18 (eliminarPisoFalso -> empty .)
    LESS_EQUAL_THAN reduce using rule 18 (eliminarPisoFalso -> empty .)
    R_PAREN         reduce using rule 18 (eliminarPisoFalso -> empty .)
    AND             reduce using rule 18 (eliminarPisoFalso -> empty .)
    OR              reduce using rule 18 (eliminarPisoFalso -> empty .)
    SEMICOLON       reduce using rule 18 (eliminarPisoFalso -> empty .)
    R_BRACKETS      reduce using rule 18 (eliminarPisoFalso -> empty .)


state 149

    (152) expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador . exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 175
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 150

    (77) pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON . agregarCuadYCompSemPantalla
    (23) agregarCuadYCompSemPantalla -> . empty
    (206) empty -> .

    FIGURAS         reduce using rule 206 (empty -> .)
    GRAVEDAD        reduce using rule 206 (empty -> .)
    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)

    agregarCuadYCompSemPantalla    shift and go to state 176
    empty                          shift and go to state 177

state 151

    (105) expAuxiliar1 -> operadorMenos agregarOperador exp .

    COMMA           reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    N_EQUAL_OP      reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    EQUAL_OP        reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    BIGGER_THAN     reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    LESS_THAN       reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    BIGGER_EQUAL_THAN reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    LESS_EQUAL_THAN reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    R_PAREN         reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    AND             reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    OR              reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    SEMICOLON       reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)
    R_BRACKETS      reduce using rule 105 (expAuxiliar1 -> operadorMenos agregarOperador exp .)


state 152

    (106) expAuxiliar1 -> operadorMas agregarOperador exp .

    COMMA           reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    N_EQUAL_OP      reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    EQUAL_OP        reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    BIGGER_THAN     reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    LESS_THAN       reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    BIGGER_EQUAL_THAN reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    LESS_EQUAL_THAN reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    R_PAREN         reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    AND             reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    OR              reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    SEMICOLON       reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)
    R_BRACKETS      reduce using rule 106 (expAuxiliar1 -> operadorMas agregarOperador exp .)


state 153

    (70) terminoAuxiliar1 -> operadorEntre agregarOperador termino .

    MINUS_OP        reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    PLUS_OP         reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    COMMA           reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    N_EQUAL_OP      reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    EQUAL_OP        reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    BIGGER_THAN     reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    LESS_THAN       reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    BIGGER_EQUAL_THAN reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    LESS_EQUAL_THAN reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    R_PAREN         reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    AND             reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    OR              reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    SEMICOLON       reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)
    R_BRACKETS      reduce using rule 70 (terminoAuxiliar1 -> operadorEntre agregarOperador termino .)


state 154

    (71) terminoAuxiliar1 -> operadorPor agregarOperador termino .

    MINUS_OP        reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    PLUS_OP         reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    COMMA           reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    N_EQUAL_OP      reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    EQUAL_OP        reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    BIGGER_THAN     reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    LESS_THAN       reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    BIGGER_EQUAL_THAN reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    LESS_EQUAL_THAN reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    R_PAREN         reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    AND             reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    OR              reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    SEMICOLON       reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)
    R_BRACKETS      reduce using rule 71 (terminoAuxiliar1 -> operadorPor agregarOperador termino .)


state 155

    (136) elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS . exp R_BRACKETS agregarCuadsElemArr
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 178
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 156

    (144) llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 . R_PAREN generarAccionGoSub

    R_PAREN         shift and go to state 179


state 157

    (145) llamadaAuxiliar1 -> llamadaAuxiliar2 . generarAccionParam llamadaAuxiliar3
    (44) generarAccionParam -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)

    generarAccionParam             shift and go to state 180
    empty                          shift and go to state 181

state 158

    (146) llamadaAuxiliar1 -> empty .

    R_PAREN         reduce using rule 146 (llamadaAuxiliar1 -> empty .)


state 159

    (147) llamadaAuxiliar2 -> exp .

    COMMA           reduce using rule 147 (llamadaAuxiliar2 -> exp .)
    R_PAREN         reduce using rule 147 (llamadaAuxiliar2 -> exp .)


state 160

    (148) llamadaAuxiliar2 -> sp_cte . agregarOperando
    (21) agregarOperando -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)

    agregarOperando                shift and go to state 182
    empty                          shift and go to state 183

state 161

    (196) sp_cte -> CTE_STRING .

    COMMA           reduce using rule 196 (sp_cte -> CTE_STRING .)
    R_PAREN         reduce using rule 196 (sp_cte -> CTE_STRING .)
    SEMICOLON       reduce using rule 196 (sp_cte -> CTE_STRING .)
    R_BRACKETS      reduce using rule 196 (sp_cte -> CTE_STRING .)


state 162

    (197) sp_cte -> cte_bool .

    COMMA           reduce using rule 197 (sp_cte -> cte_bool .)
    R_PAREN         reduce using rule 197 (sp_cte -> cte_bool .)
    SEMICOLON       reduce using rule 197 (sp_cte -> cte_bool .)
    R_BRACKETS      reduce using rule 197 (sp_cte -> cte_bool .)


state 163

    (198) cte_bool -> VERDADERO .

    COMMA           reduce using rule 198 (cte_bool -> VERDADERO .)
    R_PAREN         reduce using rule 198 (cte_bool -> VERDADERO .)
    R_BRACES        reduce using rule 198 (cte_bool -> VERDADERO .)
    SEMICOLON       reduce using rule 198 (cte_bool -> VERDADERO .)
    R_BRACKETS      reduce using rule 198 (cte_bool -> VERDADERO .)


state 164

    (199) cte_bool -> FALSO .

    COMMA           reduce using rule 199 (cte_bool -> FALSO .)
    R_PAREN         reduce using rule 199 (cte_bool -> FALSO .)
    R_BRACES        reduce using rule 199 (cte_bool -> FALSO .)
    SEMICOLON       reduce using rule 199 (cte_bool -> FALSO .)
    R_BRACKETS      reduce using rule 199 (cte_bool -> FALSO .)


state 165

    (67) variablesAuxiliar3 -> variablesAuxiliar1 . ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3

    ID              shift and go to state 184


state 166

    (62) variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .

    PANTALLA        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    FIGURAS         reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    GRAVEDAD        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    FUNCIONES       reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    APOLO           reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    SI              reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    IMPRIMIR        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    CICLO           reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    ID              reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    REGRESAR        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    DIBUJAR         reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    DIBUJAR_LINEA   reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    R_BRACES        reduce using rule 62 (variables -> VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)


state 167

    (68) variablesAuxiliar3 -> empty .

    PANTALLA        reduce using rule 68 (variablesAuxiliar3 -> empty .)
    FIGURAS         reduce using rule 68 (variablesAuxiliar3 -> empty .)
    GRAVEDAD        reduce using rule 68 (variablesAuxiliar3 -> empty .)
    FUNCIONES       reduce using rule 68 (variablesAuxiliar3 -> empty .)
    APOLO           reduce using rule 68 (variablesAuxiliar3 -> empty .)
    SI              reduce using rule 68 (variablesAuxiliar3 -> empty .)
    IMPRIMIR        reduce using rule 68 (variablesAuxiliar3 -> empty .)
    CICLO           reduce using rule 68 (variablesAuxiliar3 -> empty .)
    ID              reduce using rule 68 (variablesAuxiliar3 -> empty .)
    REGRESAR        reduce using rule 68 (variablesAuxiliar3 -> empty .)
    DIBUJAR         reduce using rule 68 (variablesAuxiliar3 -> empty .)
    DIBUJAR_LINEA   reduce using rule 68 (variablesAuxiliar3 -> empty .)
    R_BRACES        reduce using rule 68 (variablesAuxiliar3 -> empty .)


state 168

    (65) variablesAuxiliar2 -> COMMA ID agregaVarTabla . variablesAuxiliar2
    (65) variablesAuxiliar2 -> . COMMA ID agregaVarTabla variablesAuxiliar2
    (66) variablesAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 108
    SEMICOLON       reduce using rule 206 (empty -> .)

    variablesAuxiliar2             shift and go to state 185
    empty                          shift and go to state 109

state 169

    (185) tipo_lista -> LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS .

    ID              reduce using rule 185 (tipo_lista -> LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS .)


state 170

    (12) apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla . creaTablaVar bloque
    (53) creaTablaVar -> . empty
    (206) empty -> .

    L_BRACES        reduce using rule 206 (empty -> .)

    creaTablaVar                   shift and go to state 186
    empty                          shift and go to state 187

state 171

    (56) agregaFuncTabla -> empty .

    L_BRACES        reduce using rule 56 (agregaFuncTabla -> empty .)
    L_PAREN         reduce using rule 56 (agregaFuncTabla -> empty .)


state 172

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance . agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (56) agregaFuncTabla -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)

    agregaFuncTabla                shift and go to state 188
    empty                          shift and go to state 171

state 173

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN . SEMICOLON agregarCuadYCompSemGravedad

    SEMICOLON       shift and go to state 189


state 174

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES . figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (95) figura_atributos -> . MEDIDA COLON CTE_I
    (96) figura_atributos -> . figura_atributosAuxiliar1 COLON CTE_F
    (97) figura_atributos -> . MOVIBLE COLON cte_bool
    (98) figura_atributos -> . COLOR COLON color_cte
    (99) figura_atributosAuxiliar1 -> . FRICCION
    (100) figura_atributosAuxiliar1 -> . MASA
    (101) figura_atributosAuxiliar1 -> . REBOTE

    MEDIDA          shift and go to state 191
    MOVIBLE         shift and go to state 193
    COLOR           shift and go to state 194
    FRICCION        shift and go to state 195
    MASA            shift and go to state 196
    REBOTE          shift and go to state 197

    figura_atributos               shift and go to state 190
    figura_atributosAuxiliar1      shift and go to state 192

state 175

    (152) expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp . comprobarSemanticaOperadoresRelacionales expresionAuxiliar3
    (19) comprobarSemanticaOperadoresRelacionales -> . empty
    (206) empty -> .

    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    comprobarSemanticaOperadoresRelacionales shift and go to state 198
    empty                          shift and go to state 199

state 176

    (77) pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .

    FIGURAS         reduce using rule 77 (pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .)
    GRAVEDAD        reduce using rule 77 (pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .)
    FUNCIONES       reduce using rule 77 (pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .)
    APOLO           reduce using rule 77 (pantalla -> PANTALLA L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemPantalla .)


state 177

    (23) agregarCuadYCompSemPantalla -> empty .

    FIGURAS         reduce using rule 23 (agregarCuadYCompSemPantalla -> empty .)
    GRAVEDAD        reduce using rule 23 (agregarCuadYCompSemPantalla -> empty .)
    FUNCIONES       reduce using rule 23 (agregarCuadYCompSemPantalla -> empty .)
    APOLO           reduce using rule 23 (agregarCuadYCompSemPantalla -> empty .)


state 178

    (136) elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp . R_BRACKETS agregarCuadsElemArr

    R_BRACKETS      shift and go to state 200


state 179

    (144) llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN . generarAccionGoSub
    (45) generarAccionGoSub -> . empty
    (206) empty -> .

    DIV_OP          reduce using rule 206 (empty -> .)
    TIMES_OP        reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    generarAccionGoSub             shift and go to state 201
    empty                          shift and go to state 202

state 180

    (145) llamadaAuxiliar1 -> llamadaAuxiliar2 generarAccionParam . llamadaAuxiliar3
    (149) llamadaAuxiliar3 -> . COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
    (150) llamadaAuxiliar3 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 204
    R_PAREN         reduce using rule 206 (empty -> .)

    llamadaAuxiliar3               shift and go to state 203
    empty                          shift and go to state 205

state 181

    (44) generarAccionParam -> empty .

    COMMA           reduce using rule 44 (generarAccionParam -> empty .)
    R_PAREN         reduce using rule 44 (generarAccionParam -> empty .)


state 182

    (148) llamadaAuxiliar2 -> sp_cte agregarOperando .

    COMMA           reduce using rule 148 (llamadaAuxiliar2 -> sp_cte agregarOperando .)
    R_PAREN         reduce using rule 148 (llamadaAuxiliar2 -> sp_cte agregarOperando .)


state 183

    (21) agregarOperando -> empty .

    COMMA           reduce using rule 21 (agregarOperando -> empty .)
    R_PAREN         reduce using rule 21 (agregarOperando -> empty .)
    SEMICOLON       reduce using rule 21 (agregarOperando -> empty .)
    R_BRACKETS      reduce using rule 21 (agregarOperando -> empty .)


state 184

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID . agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (55) agregaVarTabla -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    agregaVarTabla                 shift and go to state 206
    empty                          shift and go to state 75

state 185

    (65) variablesAuxiliar2 -> COMMA ID agregaVarTabla variablesAuxiliar2 .

    SEMICOLON       reduce using rule 65 (variablesAuxiliar2 -> COMMA ID agregaVarTabla variablesAuxiliar2 .)


state 186

    (12) apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla creaTablaVar . bloque
    (123) bloque -> . L_BRACES bloqueAuxiliar1 R_BRACES

    L_BRACES        shift and go to state 208

    bloque                         shift and go to state 207

state 187

    (53) creaTablaVar -> empty .

    L_BRACES        reduce using rule 53 (creaTablaVar -> empty .)
    L_PAREN         reduce using rule 53 (creaTablaVar -> empty .)


state 188

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla . creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (53) creaTablaVar -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)

    creaTablaVar                   shift and go to state 209
    empty                          shift and go to state 187

state 189

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON . agregarCuadYCompSemGravedad
    (25) agregarCuadYCompSemGravedad -> . empty
    (206) empty -> .

    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)

    agregarCuadYCompSemGravedad    shift and go to state 210
    empty                          shift and go to state 211

state 190

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos . figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON
    (102) figura_atributosAuxiliar2 -> . COMMA figura_atributos figura_atributosAuxiliar2
    (103) figura_atributosAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 213
    R_BRACES        reduce using rule 206 (empty -> .)

    figura_atributosAuxiliar2      shift and go to state 212
    empty                          shift and go to state 214

state 191

    (95) figura_atributos -> MEDIDA . COLON CTE_I

    COLON           shift and go to state 215


state 192

    (96) figura_atributos -> figura_atributosAuxiliar1 . COLON CTE_F

    COLON           shift and go to state 216


state 193

    (97) figura_atributos -> MOVIBLE . COLON cte_bool

    COLON           shift and go to state 217


state 194

    (98) figura_atributos -> COLOR . COLON color_cte

    COLON           shift and go to state 218


state 195

    (99) figura_atributosAuxiliar1 -> FRICCION .

    COLON           reduce using rule 99 (figura_atributosAuxiliar1 -> FRICCION .)


state 196

    (100) figura_atributosAuxiliar1 -> MASA .

    COLON           reduce using rule 100 (figura_atributosAuxiliar1 -> MASA .)


state 197

    (101) figura_atributosAuxiliar1 -> REBOTE .

    COLON           reduce using rule 101 (figura_atributosAuxiliar1 -> REBOTE .)


state 198

    (152) expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales . expresionAuxiliar3
    (160) expresionAuxiliar3 -> . expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO
    (161) expresionAuxiliar3 -> . empty
    (162) expresionAuxiliar4 -> . operadorY
    (163) expresionAuxiliar4 -> . operadorO
    (206) empty -> .
    (204) operadorY -> . AND
    (205) operadorO -> . OR

    R_PAREN         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    AND             shift and go to state 224
    OR              shift and go to state 225

    expresionAuxiliar3             shift and go to state 219
    expresionAuxiliar4             shift and go to state 220
    empty                          shift and go to state 221
    operadorY                      shift and go to state 222
    operadorO                      shift and go to state 223

state 199

    (19) comprobarSemanticaOperadoresRelacionales -> empty .

    AND             reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)
    OR              reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)
    R_PAREN         reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)
    COMMA           reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)
    SEMICOLON       reduce using rule 19 (comprobarSemanticaOperadoresRelacionales -> empty .)


state 200

    (136) elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS . agregarCuadsElemArr
    (137) agregarCuadsElemArr -> . empty
    (206) empty -> .

    DIV_OP          reduce using rule 206 (empty -> .)
    TIMES_OP        reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    N_EQUAL_OP      reduce using rule 206 (empty -> .)
    EQUAL_OP        reduce using rule 206 (empty -> .)
    BIGGER_THAN     reduce using rule 206 (empty -> .)
    LESS_THAN       reduce using rule 206 (empty -> .)
    BIGGER_EQUAL_THAN reduce using rule 206 (empty -> .)
    LESS_EQUAL_THAN reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)
    AND             reduce using rule 206 (empty -> .)
    OR              reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)
    ASSIGN_OP       reduce using rule 206 (empty -> .)

    agregarCuadsElemArr            shift and go to state 226
    empty                          shift and go to state 227

state 201

    (144) llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .

    DIV_OP          reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    TIMES_OP        reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    MINUS_OP        reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    PLUS_OP         reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    COMMA           reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    N_EQUAL_OP      reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    EQUAL_OP        reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    BIGGER_THAN     reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    LESS_THAN       reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    BIGGER_EQUAL_THAN reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    LESS_EQUAL_THAN reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    R_PAREN         reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    AND             reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    OR              reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    SEMICOLON       reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)
    R_BRACKETS      reduce using rule 144 (llamada -> ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub .)


state 202

    (45) generarAccionGoSub -> empty .

    DIV_OP          reduce using rule 45 (generarAccionGoSub -> empty .)
    TIMES_OP        reduce using rule 45 (generarAccionGoSub -> empty .)
    MINUS_OP        reduce using rule 45 (generarAccionGoSub -> empty .)
    PLUS_OP         reduce using rule 45 (generarAccionGoSub -> empty .)
    COMMA           reduce using rule 45 (generarAccionGoSub -> empty .)
    N_EQUAL_OP      reduce using rule 45 (generarAccionGoSub -> empty .)
    EQUAL_OP        reduce using rule 45 (generarAccionGoSub -> empty .)
    BIGGER_THAN     reduce using rule 45 (generarAccionGoSub -> empty .)
    LESS_THAN       reduce using rule 45 (generarAccionGoSub -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 45 (generarAccionGoSub -> empty .)
    LESS_EQUAL_THAN reduce using rule 45 (generarAccionGoSub -> empty .)
    R_PAREN         reduce using rule 45 (generarAccionGoSub -> empty .)
    AND             reduce using rule 45 (generarAccionGoSub -> empty .)
    OR              reduce using rule 45 (generarAccionGoSub -> empty .)
    SEMICOLON       reduce using rule 45 (generarAccionGoSub -> empty .)
    R_BRACKETS      reduce using rule 45 (generarAccionGoSub -> empty .)


state 203

    (145) llamadaAuxiliar1 -> llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3 .

    R_PAREN         reduce using rule 145 (llamadaAuxiliar1 -> llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3 .)


state 204

    (149) llamadaAuxiliar3 -> COMMA . llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
    (147) llamadaAuxiliar2 -> . exp
    (148) llamadaAuxiliar2 -> . sp_cte agregarOperando
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (196) sp_cte -> . CTE_STRING
    (197) sp_cte -> . cte_bool
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    CTE_STRING      shift and go to state 161
    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    llamadaAuxiliar2               shift and go to state 228
    exp                            shift and go to state 159
    sp_cte                         shift and go to state 160
    termino                        shift and go to state 41
    cte_bool                       shift and go to state 162
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 205

    (150) llamadaAuxiliar3 -> empty .

    R_PAREN         reduce using rule 150 (llamadaAuxiliar3 -> empty .)


state 206

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla . variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (65) variablesAuxiliar2 -> . COMMA ID agregaVarTabla variablesAuxiliar2
    (66) variablesAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 108
    SEMICOLON       reduce using rule 206 (empty -> .)

    variablesAuxiliar2             shift and go to state 229
    empty                          shift and go to state 109

state 207

    (12) apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla creaTablaVar bloque .

    $end            reduce using rule 12 (apoloAuxiliar -> APOLO apoloTablaFunc agregaFuncTabla creaTablaVar bloque .)


state 208

    (123) bloque -> L_BRACES . bloqueAuxiliar1 R_BRACES
    (124) bloqueAuxiliar1 -> . empty
    (125) bloqueAuxiliar1 -> . estatuto bloqueAuxiliar1
    (206) empty -> .
    (108) estatuto -> . asignacion SEMICOLON
    (109) estatuto -> . condicion
    (110) estatuto -> . escritura
    (111) estatuto -> . ciclo
    (112) estatuto -> . dibujar
    (113) estatuto -> . llamada SEMICOLON
    (114) estatuto -> . incremento SEMICOLON
    (115) estatuto -> . retorno
    (129) asignacion -> . asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1
    (120) condicion -> . SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (139) escritura -> . IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (119) ciclo -> . CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (116) dibujar -> . dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (73) retorno -> . REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (134) asignacionAuxiliar2 -> . ID checarDefID agregarIdHaciaPilas
    (135) asignacionAuxiliar2 -> . elemArr
    (117) dibujarAuxiliar1 -> . DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (118) dibujarAuxiliar1 -> . DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    R_BRACES        reduce using rule 206 (empty -> .)
    SI              shift and go to state 242
    IMPRIMIR        shift and go to state 243
    CICLO           shift and go to state 244
    ID              shift and go to state 246
    REGRESAR        shift and go to state 247
    DIBUJAR         shift and go to state 249
    DIBUJAR_LINEA   shift and go to state 250

    bloqueAuxiliar1                shift and go to state 230
    empty                          shift and go to state 231
    estatuto                       shift and go to state 232
    asignacion                     shift and go to state 233
    condicion                      shift and go to state 234
    escritura                      shift and go to state 235
    ciclo                          shift and go to state 236
    dibujar                        shift and go to state 237
    llamada                        shift and go to state 238
    incremento                     shift and go to state 239
    retorno                        shift and go to state 240
    asignacionAuxiliar2            shift and go to state 241
    dibujarAuxiliar1               shift and go to state 245
    elemArr                        shift and go to state 248

state 209

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar . L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    L_PAREN         shift and go to state 251


state 210

    (78) gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad .

    FUNCIONES       reduce using rule 78 (gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad .)
    APOLO           reduce using rule 78 (gravedad -> GRAVEDAD L_PAREN exp COMMA exp R_PAREN SEMICOLON agregarCuadYCompSemGravedad .)


state 211

    (25) agregarCuadYCompSemGravedad -> empty .

    FUNCIONES       reduce using rule 25 (agregarCuadYCompSemGravedad -> empty .)
    APOLO           reduce using rule 25 (agregarCuadYCompSemGravedad -> empty .)


state 212

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 . R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON

    R_BRACES        shift and go to state 252


state 213

    (102) figura_atributosAuxiliar2 -> COMMA . figura_atributos figura_atributosAuxiliar2
    (95) figura_atributos -> . MEDIDA COLON CTE_I
    (96) figura_atributos -> . figura_atributosAuxiliar1 COLON CTE_F
    (97) figura_atributos -> . MOVIBLE COLON cte_bool
    (98) figura_atributos -> . COLOR COLON color_cte
    (99) figura_atributosAuxiliar1 -> . FRICCION
    (100) figura_atributosAuxiliar1 -> . MASA
    (101) figura_atributosAuxiliar1 -> . REBOTE

    MEDIDA          shift and go to state 191
    MOVIBLE         shift and go to state 193
    COLOR           shift and go to state 194
    FRICCION        shift and go to state 195
    MASA            shift and go to state 196
    REBOTE          shift and go to state 197

    figura_atributos               shift and go to state 253
    figura_atributosAuxiliar1      shift and go to state 192

state 214

    (103) figura_atributosAuxiliar2 -> empty .

    R_BRACES        reduce using rule 103 (figura_atributosAuxiliar2 -> empty .)


state 215

    (95) figura_atributos -> MEDIDA COLON . CTE_I

    CTE_I           shift and go to state 254


state 216

    (96) figura_atributos -> figura_atributosAuxiliar1 COLON . CTE_F

    CTE_F           shift and go to state 255


state 217

    (97) figura_atributos -> MOVIBLE COLON . cte_bool
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO

    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164

    cte_bool                       shift and go to state 256

state 218

    (98) figura_atributos -> COLOR COLON . color_cte
    (190) color_cte -> . ROJO
    (191) color_cte -> . VERDE
    (192) color_cte -> . AZUL
    (193) color_cte -> . AMARILLO
    (194) color_cte -> . ROSA
    (195) color_cte -> . VIOLETA

    ROJO            shift and go to state 258
    VERDE           shift and go to state 259
    AZUL            shift and go to state 260
    AMARILLO        shift and go to state 261
    ROSA            shift and go to state 262
    VIOLETA         shift and go to state 263

    color_cte                      shift and go to state 257

state 219

    (152) expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3 .

    R_PAREN         reduce using rule 152 (expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3 .)
    COMMA           reduce using rule 152 (expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3 .)
    SEMICOLON       reduce using rule 152 (expresionAuxiliar1 -> expresionAuxiliar2 agregarOperador exp comprobarSemanticaOperadoresRelacionales expresionAuxiliar3 .)


state 220

    (160) expresionAuxiliar3 -> expresionAuxiliar4 . agregarOperador expresion compSemYGenCuadYO
    (14) agregarOperador -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarOperador                shift and go to state 264
    empty                          shift and go to state 131

state 221

    (161) expresionAuxiliar3 -> empty .

    R_PAREN         reduce using rule 161 (expresionAuxiliar3 -> empty .)
    COMMA           reduce using rule 161 (expresionAuxiliar3 -> empty .)
    SEMICOLON       reduce using rule 161 (expresionAuxiliar3 -> empty .)


state 222

    (162) expresionAuxiliar4 -> operadorY .

    L_PAREN         reduce using rule 162 (expresionAuxiliar4 -> operadorY .)
    PLUS_OP         reduce using rule 162 (expresionAuxiliar4 -> operadorY .)
    MINUS_OP        reduce using rule 162 (expresionAuxiliar4 -> operadorY .)
    ID              reduce using rule 162 (expresionAuxiliar4 -> operadorY .)
    CTE_I           reduce using rule 162 (expresionAuxiliar4 -> operadorY .)
    CTE_F           reduce using rule 162 (expresionAuxiliar4 -> operadorY .)


state 223

    (163) expresionAuxiliar4 -> operadorO .

    L_PAREN         reduce using rule 163 (expresionAuxiliar4 -> operadorO .)
    PLUS_OP         reduce using rule 163 (expresionAuxiliar4 -> operadorO .)
    MINUS_OP        reduce using rule 163 (expresionAuxiliar4 -> operadorO .)
    ID              reduce using rule 163 (expresionAuxiliar4 -> operadorO .)
    CTE_I           reduce using rule 163 (expresionAuxiliar4 -> operadorO .)
    CTE_F           reduce using rule 163 (expresionAuxiliar4 -> operadorO .)


state 224

    (204) operadorY -> AND .

    L_PAREN         reduce using rule 204 (operadorY -> AND .)
    PLUS_OP         reduce using rule 204 (operadorY -> AND .)
    MINUS_OP        reduce using rule 204 (operadorY -> AND .)
    ID              reduce using rule 204 (operadorY -> AND .)
    CTE_I           reduce using rule 204 (operadorY -> AND .)
    CTE_F           reduce using rule 204 (operadorY -> AND .)


state 225

    (205) operadorO -> OR .

    L_PAREN         reduce using rule 205 (operadorO -> OR .)
    PLUS_OP         reduce using rule 205 (operadorO -> OR .)
    MINUS_OP        reduce using rule 205 (operadorO -> OR .)
    ID              reduce using rule 205 (operadorO -> OR .)
    CTE_I           reduce using rule 205 (operadorO -> OR .)
    CTE_F           reduce using rule 205 (operadorO -> OR .)


state 226

    (136) elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .

    DIV_OP          reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    TIMES_OP        reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    MINUS_OP        reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    PLUS_OP         reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    COMMA           reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    N_EQUAL_OP      reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    EQUAL_OP        reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    BIGGER_THAN     reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    LESS_THAN       reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    BIGGER_EQUAL_THAN reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    LESS_EQUAL_THAN reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    R_PAREN         reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    AND             reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    OR              reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    SEMICOLON       reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    R_BRACKETS      reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)
    ASSIGN_OP       reduce using rule 136 (elemArr -> ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr .)


state 227

    (137) agregarCuadsElemArr -> empty .

    DIV_OP          reduce using rule 137 (agregarCuadsElemArr -> empty .)
    TIMES_OP        reduce using rule 137 (agregarCuadsElemArr -> empty .)
    MINUS_OP        reduce using rule 137 (agregarCuadsElemArr -> empty .)
    PLUS_OP         reduce using rule 137 (agregarCuadsElemArr -> empty .)
    COMMA           reduce using rule 137 (agregarCuadsElemArr -> empty .)
    N_EQUAL_OP      reduce using rule 137 (agregarCuadsElemArr -> empty .)
    EQUAL_OP        reduce using rule 137 (agregarCuadsElemArr -> empty .)
    BIGGER_THAN     reduce using rule 137 (agregarCuadsElemArr -> empty .)
    LESS_THAN       reduce using rule 137 (agregarCuadsElemArr -> empty .)
    BIGGER_EQUAL_THAN reduce using rule 137 (agregarCuadsElemArr -> empty .)
    LESS_EQUAL_THAN reduce using rule 137 (agregarCuadsElemArr -> empty .)
    R_PAREN         reduce using rule 137 (agregarCuadsElemArr -> empty .)
    AND             reduce using rule 137 (agregarCuadsElemArr -> empty .)
    OR              reduce using rule 137 (agregarCuadsElemArr -> empty .)
    SEMICOLON       reduce using rule 137 (agregarCuadsElemArr -> empty .)
    R_BRACKETS      reduce using rule 137 (agregarCuadsElemArr -> empty .)
    ASSIGN_OP       reduce using rule 137 (agregarCuadsElemArr -> empty .)


state 228

    (149) llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 . generarAccionParam llamadaAuxiliar3
    (44) generarAccionParam -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)

    generarAccionParam             shift and go to state 265
    empty                          shift and go to state 181

state 229

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 . SEMICOLON variablesAuxiliar3

    SEMICOLON       shift and go to state 266


state 230

    (123) bloque -> L_BRACES bloqueAuxiliar1 . R_BRACES

    R_BRACES        shift and go to state 267


state 231

    (124) bloqueAuxiliar1 -> empty .

    R_BRACES        reduce using rule 124 (bloqueAuxiliar1 -> empty .)


state 232

    (125) bloqueAuxiliar1 -> estatuto . bloqueAuxiliar1
    (124) bloqueAuxiliar1 -> . empty
    (125) bloqueAuxiliar1 -> . estatuto bloqueAuxiliar1
    (206) empty -> .
    (108) estatuto -> . asignacion SEMICOLON
    (109) estatuto -> . condicion
    (110) estatuto -> . escritura
    (111) estatuto -> . ciclo
    (112) estatuto -> . dibujar
    (113) estatuto -> . llamada SEMICOLON
    (114) estatuto -> . incremento SEMICOLON
    (115) estatuto -> . retorno
    (129) asignacion -> . asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1
    (120) condicion -> . SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (139) escritura -> . IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (119) ciclo -> . CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (116) dibujar -> . dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (73) retorno -> . REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (134) asignacionAuxiliar2 -> . ID checarDefID agregarIdHaciaPilas
    (135) asignacionAuxiliar2 -> . elemArr
    (117) dibujarAuxiliar1 -> . DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (118) dibujarAuxiliar1 -> . DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    R_BRACES        reduce using rule 206 (empty -> .)
    SI              shift and go to state 242
    IMPRIMIR        shift and go to state 243
    CICLO           shift and go to state 244
    ID              shift and go to state 246
    REGRESAR        shift and go to state 247
    DIBUJAR         shift and go to state 249
    DIBUJAR_LINEA   shift and go to state 250

    estatuto                       shift and go to state 232
    bloqueAuxiliar1                shift and go to state 268
    empty                          shift and go to state 231
    asignacion                     shift and go to state 233
    condicion                      shift and go to state 234
    escritura                      shift and go to state 235
    ciclo                          shift and go to state 236
    dibujar                        shift and go to state 237
    llamada                        shift and go to state 238
    incremento                     shift and go to state 239
    retorno                        shift and go to state 240
    asignacionAuxiliar2            shift and go to state 241
    dibujarAuxiliar1               shift and go to state 245
    elemArr                        shift and go to state 248

state 233

    (108) estatuto -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 269


state 234

    (109) estatuto -> condicion .

    SI              reduce using rule 109 (estatuto -> condicion .)
    IMPRIMIR        reduce using rule 109 (estatuto -> condicion .)
    CICLO           reduce using rule 109 (estatuto -> condicion .)
    ID              reduce using rule 109 (estatuto -> condicion .)
    REGRESAR        reduce using rule 109 (estatuto -> condicion .)
    DIBUJAR         reduce using rule 109 (estatuto -> condicion .)
    DIBUJAR_LINEA   reduce using rule 109 (estatuto -> condicion .)
    R_BRACES        reduce using rule 109 (estatuto -> condicion .)


state 235

    (110) estatuto -> escritura .

    SI              reduce using rule 110 (estatuto -> escritura .)
    IMPRIMIR        reduce using rule 110 (estatuto -> escritura .)
    CICLO           reduce using rule 110 (estatuto -> escritura .)
    ID              reduce using rule 110 (estatuto -> escritura .)
    REGRESAR        reduce using rule 110 (estatuto -> escritura .)
    DIBUJAR         reduce using rule 110 (estatuto -> escritura .)
    DIBUJAR_LINEA   reduce using rule 110 (estatuto -> escritura .)
    R_BRACES        reduce using rule 110 (estatuto -> escritura .)


state 236

    (111) estatuto -> ciclo .

    SI              reduce using rule 111 (estatuto -> ciclo .)
    IMPRIMIR        reduce using rule 111 (estatuto -> ciclo .)
    CICLO           reduce using rule 111 (estatuto -> ciclo .)
    ID              reduce using rule 111 (estatuto -> ciclo .)
    REGRESAR        reduce using rule 111 (estatuto -> ciclo .)
    DIBUJAR         reduce using rule 111 (estatuto -> ciclo .)
    DIBUJAR_LINEA   reduce using rule 111 (estatuto -> ciclo .)
    R_BRACES        reduce using rule 111 (estatuto -> ciclo .)


state 237

    (112) estatuto -> dibujar .

    SI              reduce using rule 112 (estatuto -> dibujar .)
    IMPRIMIR        reduce using rule 112 (estatuto -> dibujar .)
    CICLO           reduce using rule 112 (estatuto -> dibujar .)
    ID              reduce using rule 112 (estatuto -> dibujar .)
    REGRESAR        reduce using rule 112 (estatuto -> dibujar .)
    DIBUJAR         reduce using rule 112 (estatuto -> dibujar .)
    DIBUJAR_LINEA   reduce using rule 112 (estatuto -> dibujar .)
    R_BRACES        reduce using rule 112 (estatuto -> dibujar .)


state 238

    (113) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 270


state 239

    (114) estatuto -> incremento . SEMICOLON

    SEMICOLON       shift and go to state 271


state 240

    (115) estatuto -> retorno .

    SI              reduce using rule 115 (estatuto -> retorno .)
    IMPRIMIR        reduce using rule 115 (estatuto -> retorno .)
    CICLO           reduce using rule 115 (estatuto -> retorno .)
    ID              reduce using rule 115 (estatuto -> retorno .)
    REGRESAR        reduce using rule 115 (estatuto -> retorno .)
    DIBUJAR         reduce using rule 115 (estatuto -> retorno .)
    DIBUJAR_LINEA   reduce using rule 115 (estatuto -> retorno .)
    R_BRACES        reduce using rule 115 (estatuto -> retorno .)


state 241

    (129) asignacion -> asignacionAuxiliar2 . ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1

    ASSIGN_OP       shift and go to state 272


state 242

    (120) condicion -> SI . L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof

    L_PAREN         shift and go to state 273


state 243

    (139) escritura -> IMPRIMIR . L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON

    L_PAREN         shift and go to state 274


state 244

    (119) ciclo -> CICLO . L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo

    L_PAREN         shift and go to state 275


state 245

    (116) dibujar -> dibujarAuxiliar1 . COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen

    COMMA           shift and go to state 276


state 246

    (144) llamada -> ID . checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> ID . checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (134) asignacionAuxiliar2 -> ID . checarDefID agregarIdHaciaPilas
    (136) elemArr -> ID . checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (42) checarSiExisteFuncion -> . empty
    (54) checarDefID -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_EQUAL_OP   reduce using rule 206 (empty -> .)
    MINUS_EQUAL_OP  reduce using rule 206 (empty -> .)
    L_BRACKETS      reduce using rule 206 (empty -> .)
    ASSIGN_OP       reduce using rule 206 (empty -> .)

    checarSiExisteFuncion          shift and go to state 72
    checarDefID                    shift and go to state 277
    empty                          shift and go to state 278

state 247

    (73) retorno -> REGRESAR . checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (39) checarRetorno -> . empty
    (206) empty -> .

    CTE_STRING      reduce using rule 206 (empty -> .)
    VERDADERO       reduce using rule 206 (empty -> .)
    FALSO           reduce using rule 206 (empty -> .)
    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    checarRetorno                  shift and go to state 279
    empty                          shift and go to state 280

state 248

    (135) asignacionAuxiliar2 -> elemArr .

    ASSIGN_OP       reduce using rule 135 (asignacionAuxiliar2 -> elemArr .)


state 249

    (117) dibujarAuxiliar1 -> DIBUJAR . agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (30) agregarOperadorDibujar -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)

    agregarOperadorDibujar         shift and go to state 281
    empty                          shift and go to state 282

state 250

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA . agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp
    (29) agregarOperadorDibujarLinea -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)

    agregarOperadorDibujarLinea    shift and go to state 283
    empty                          shift and go to state 284

state 251

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN . tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (186) tipo -> . ENTERO
    (187) tipo -> . FLOTANTE
    (188) tipo -> . BOOLEANO
    (189) tipo -> . TEXTO

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31

    tipo                           shift and go to state 285

state 252

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES . creaFigVar figurasAuxiliar1 SEMICOLON
    (61) creaFigVar -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    creaFigVar                     shift and go to state 286
    empty                          shift and go to state 287

state 253

    (102) figura_atributosAuxiliar2 -> COMMA figura_atributos . figura_atributosAuxiliar2
    (102) figura_atributosAuxiliar2 -> . COMMA figura_atributos figura_atributosAuxiliar2
    (103) figura_atributosAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 213
    R_BRACES        reduce using rule 206 (empty -> .)

    figura_atributosAuxiliar2      shift and go to state 288
    empty                          shift and go to state 214

state 254

    (95) figura_atributos -> MEDIDA COLON CTE_I .

    COMMA           reduce using rule 95 (figura_atributos -> MEDIDA COLON CTE_I .)
    R_BRACES        reduce using rule 95 (figura_atributos -> MEDIDA COLON CTE_I .)


state 255

    (96) figura_atributos -> figura_atributosAuxiliar1 COLON CTE_F .

    COMMA           reduce using rule 96 (figura_atributos -> figura_atributosAuxiliar1 COLON CTE_F .)
    R_BRACES        reduce using rule 96 (figura_atributos -> figura_atributosAuxiliar1 COLON CTE_F .)


state 256

    (97) figura_atributos -> MOVIBLE COLON cte_bool .

    COMMA           reduce using rule 97 (figura_atributos -> MOVIBLE COLON cte_bool .)
    R_BRACES        reduce using rule 97 (figura_atributos -> MOVIBLE COLON cte_bool .)


state 257

    (98) figura_atributos -> COLOR COLON color_cte .

    COMMA           reduce using rule 98 (figura_atributos -> COLOR COLON color_cte .)
    R_BRACES        reduce using rule 98 (figura_atributos -> COLOR COLON color_cte .)


state 258

    (190) color_cte -> ROJO .

    COMMA           reduce using rule 190 (color_cte -> ROJO .)
    R_BRACES        reduce using rule 190 (color_cte -> ROJO .)


state 259

    (191) color_cte -> VERDE .

    COMMA           reduce using rule 191 (color_cte -> VERDE .)
    R_BRACES        reduce using rule 191 (color_cte -> VERDE .)


state 260

    (192) color_cte -> AZUL .

    COMMA           reduce using rule 192 (color_cte -> AZUL .)
    R_BRACES        reduce using rule 192 (color_cte -> AZUL .)


state 261

    (193) color_cte -> AMARILLO .

    COMMA           reduce using rule 193 (color_cte -> AMARILLO .)
    R_BRACES        reduce using rule 193 (color_cte -> AMARILLO .)


state 262

    (194) color_cte -> ROSA .

    COMMA           reduce using rule 194 (color_cte -> ROSA .)
    R_BRACES        reduce using rule 194 (color_cte -> ROSA .)


state 263

    (195) color_cte -> VIOLETA .

    COMMA           reduce using rule 195 (color_cte -> VIOLETA .)
    R_BRACES        reduce using rule 195 (color_cte -> VIOLETA .)


state 264

    (160) expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador . expresion compSemYGenCuadYO
    (151) expresion -> . exp expresionAuxiliar1
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    expresion                      shift and go to state 289
    exp                            shift and go to state 87
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 265

    (149) llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 generarAccionParam . llamadaAuxiliar3
    (149) llamadaAuxiliar3 -> . COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3
    (150) llamadaAuxiliar3 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 204
    R_PAREN         reduce using rule 206 (empty -> .)

    llamadaAuxiliar3               shift and go to state 290
    empty                          shift and go to state 205

state 266

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON . variablesAuxiliar3
    (67) variablesAuxiliar3 -> . variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (68) variablesAuxiliar3 -> . empty
    (63) variablesAuxiliar1 -> . tipo
    (64) variablesAuxiliar1 -> . tipo_lista
    (206) empty -> .
    (186) tipo -> . ENTERO
    (187) tipo -> . FLOTANTE
    (188) tipo -> . BOOLEANO
    (189) tipo -> . TEXTO
    (185) tipo_lista -> . LISTA listaVar tipo L_BRACKETS CTE_I R_BRACKETS

    PANTALLA        reduce using rule 206 (empty -> .)
    FIGURAS         reduce using rule 206 (empty -> .)
    GRAVEDAD        reduce using rule 206 (empty -> .)
    FUNCIONES       reduce using rule 206 (empty -> .)
    APOLO           reduce using rule 206 (empty -> .)
    SI              reduce using rule 206 (empty -> .)
    IMPRIMIR        reduce using rule 206 (empty -> .)
    CICLO           reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    REGRESAR        reduce using rule 206 (empty -> .)
    DIBUJAR         reduce using rule 206 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 206 (empty -> .)
    R_BRACES        reduce using rule 206 (empty -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31
    LISTA           shift and go to state 32

    variablesAuxiliar1             shift and go to state 165
    variablesAuxiliar3             shift and go to state 291
    empty                          shift and go to state 167
    tipo                           shift and go to state 26
    tipo_lista                     shift and go to state 27

state 267

    (123) bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .

    $end            reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    SI_NO           reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    SEMICOLON       reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    SI              reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    IMPRIMIR        reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    CICLO           reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    ID              reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    REGRESAR        reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    DIBUJAR         reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    DIBUJAR_LINEA   reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)
    R_BRACES        reduce using rule 123 (bloque -> L_BRACES bloqueAuxiliar1 R_BRACES .)


state 268

    (125) bloqueAuxiliar1 -> estatuto bloqueAuxiliar1 .

    R_BRACES        reduce using rule 125 (bloqueAuxiliar1 -> estatuto bloqueAuxiliar1 .)


state 269

    (108) estatuto -> asignacion SEMICOLON .

    SI              reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    IMPRIMIR        reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    CICLO           reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    ID              reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    REGRESAR        reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    DIBUJAR         reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    DIBUJAR_LINEA   reduce using rule 108 (estatuto -> asignacion SEMICOLON .)
    R_BRACES        reduce using rule 108 (estatuto -> asignacion SEMICOLON .)


state 270

    (113) estatuto -> llamada SEMICOLON .

    SI              reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    IMPRIMIR        reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    CICLO           reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    ID              reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    REGRESAR        reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    DIBUJAR         reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    DIBUJAR_LINEA   reduce using rule 113 (estatuto -> llamada SEMICOLON .)
    R_BRACES        reduce using rule 113 (estatuto -> llamada SEMICOLON .)


state 271

    (114) estatuto -> incremento SEMICOLON .

    SI              reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    IMPRIMIR        reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    CICLO           reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    ID              reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    REGRESAR        reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    DIBUJAR         reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    DIBUJAR_LINEA   reduce using rule 114 (estatuto -> incremento SEMICOLON .)
    R_BRACES        reduce using rule 114 (estatuto -> incremento SEMICOLON .)


state 272

    (129) asignacion -> asignacionAuxiliar2 ASSIGN_OP . agregarOperadorAsignacion asignacionAuxiliar1
    (130) agregarOperadorAsignacion -> . empty
    (206) empty -> .

    CTE_STRING      reduce using rule 206 (empty -> .)
    VERDADERO       reduce using rule 206 (empty -> .)
    FALSO           reduce using rule 206 (empty -> .)
    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)
    L_BRACKETS      reduce using rule 206 (empty -> .)

    agregarOperadorAsignacion      shift and go to state 292
    empty                          shift and go to state 293

state 273

    (120) condicion -> SI L_PAREN . expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (151) expresion -> . exp expresionAuxiliar1
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    expresion                      shift and go to state 294
    exp                            shift and go to state 87
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 274

    (139) escritura -> IMPRIMIR L_PAREN . escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (140) escrituraAuxiliar1 -> . expresion agregarCuadEScrituraExpresion
    (141) escrituraAuxiliar1 -> . sp_cte agregarCuadEscrituraSPCTE
    (151) expresion -> . exp expresionAuxiliar1
    (196) sp_cte -> . CTE_STRING
    (197) sp_cte -> . cte_bool
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    CTE_STRING      shift and go to state 161
    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    escrituraAuxiliar1             shift and go to state 295
    expresion                      shift and go to state 296
    sp_cte                         shift and go to state 297
    exp                            shift and go to state 87
    cte_bool                       shift and go to state 162
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 275

    (119) ciclo -> CICLO L_PAREN . asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (129) asignacion -> . asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1
    (134) asignacionAuxiliar2 -> . ID checarDefID agregarIdHaciaPilas
    (135) asignacionAuxiliar2 -> . elemArr
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    ID              shift and go to state 299

    asignacion                     shift and go to state 298
    asignacionAuxiliar2            shift and go to state 241
    elemArr                        shift and go to state 248

state 276

    (116) dibujar -> dibujarAuxiliar1 COMMA . exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 300
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 277

    (126) incremento -> ID checarDefID . agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (134) asignacionAuxiliar2 -> ID checarDefID . agregarIdHaciaPilas
    (136) elemArr -> ID checarDefID . agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (13) agregarIdHaciaPilas -> . empty
    (206) empty -> .

    PLUS_EQUAL_OP   reduce using rule 206 (empty -> .)
    MINUS_EQUAL_OP  reduce using rule 206 (empty -> .)
    L_BRACKETS      reduce using rule 206 (empty -> .)
    ASSIGN_OP       reduce using rule 206 (empty -> .)

    agregarIdHaciaPilas            shift and go to state 301
    empty                          shift and go to state 104

state 278

    (42) checarSiExisteFuncion -> empty .
    (54) checarDefID -> empty .

    L_PAREN         reduce using rule 42 (checarSiExisteFuncion -> empty .)
    PLUS_EQUAL_OP   reduce using rule 54 (checarDefID -> empty .)
    MINUS_EQUAL_OP  reduce using rule 54 (checarDefID -> empty .)
    L_BRACKETS      reduce using rule 54 (checarDefID -> empty .)
    ASSIGN_OP       reduce using rule 54 (checarDefID -> empty .)


state 279

    (73) retorno -> REGRESAR checarRetorno . agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (40) agregarOperadorRetorno -> . empty
    (206) empty -> .

    CTE_STRING      reduce using rule 206 (empty -> .)
    VERDADERO       reduce using rule 206 (empty -> .)
    FALSO           reduce using rule 206 (empty -> .)
    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    agregarOperadorRetorno         shift and go to state 302
    empty                          shift and go to state 303

state 280

    (39) checarRetorno -> empty .

    CTE_STRING      reduce using rule 39 (checarRetorno -> empty .)
    VERDADERO       reduce using rule 39 (checarRetorno -> empty .)
    FALSO           reduce using rule 39 (checarRetorno -> empty .)
    L_PAREN         reduce using rule 39 (checarRetorno -> empty .)
    PLUS_OP         reduce using rule 39 (checarRetorno -> empty .)
    MINUS_OP        reduce using rule 39 (checarRetorno -> empty .)
    ID              reduce using rule 39 (checarRetorno -> empty .)
    CTE_I           reduce using rule 39 (checarRetorno -> empty .)
    CTE_F           reduce using rule 39 (checarRetorno -> empty .)
    SEMICOLON       reduce using rule 39 (checarRetorno -> empty .)


state 281

    (117) dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar . L_PAREN ID checarSiExisteFiguraId

    L_PAREN         shift and go to state 304


state 282

    (30) agregarOperadorDibujar -> empty .

    L_PAREN         reduce using rule 30 (agregarOperadorDibujar -> empty .)


state 283

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea . L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp

    L_PAREN         shift and go to state 305


state 284

    (29) agregarOperadorDibujarLinea -> empty .

    L_PAREN         reduce using rule 29 (agregarOperadorDibujarLinea -> empty .)


state 285

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo . ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    ID              shift and go to state 306


state 286

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar . figurasAuxiliar1 SEMICOLON
    (89) figurasAuxiliar1 -> . COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (90) figurasAuxiliar1 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 308
    SEMICOLON       reduce using rule 206 (empty -> .)

    figurasAuxiliar1               shift and go to state 307
    empty                          shift and go to state 309

state 287

    (61) creaFigVar -> empty .

    COMMA           reduce using rule 61 (creaFigVar -> empty .)
    SEMICOLON       reduce using rule 61 (creaFigVar -> empty .)


state 288

    (102) figura_atributosAuxiliar2 -> COMMA figura_atributos figura_atributosAuxiliar2 .

    R_BRACES        reduce using rule 102 (figura_atributosAuxiliar2 -> COMMA figura_atributos figura_atributosAuxiliar2 .)


state 289

    (160) expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion . compSemYGenCuadYO
    (20) compSemYGenCuadYO -> . empty
    (206) empty -> .

    R_PAREN         reduce using rule 206 (empty -> .)
    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    compSemYGenCuadYO              shift and go to state 310
    empty                          shift and go to state 311

state 290

    (149) llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3 .

    R_PAREN         reduce using rule 149 (llamadaAuxiliar3 -> COMMA llamadaAuxiliar2 generarAccionParam llamadaAuxiliar3 .)


state 291

    (67) variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .

    PANTALLA        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    FIGURAS         reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    GRAVEDAD        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    FUNCIONES       reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    APOLO           reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    SI              reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    IMPRIMIR        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    CICLO           reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    ID              reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    REGRESAR        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    DIBUJAR         reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    DIBUJAR_LINEA   reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)
    R_BRACES        reduce using rule 67 (variablesAuxiliar3 -> variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3 .)


state 292

    (129) asignacion -> asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion . asignacionAuxiliar1
    (131) asignacionAuxiliar1 -> . expresion agregarCuadYCompSemAsignacion
    (132) asignacionAuxiliar1 -> . lista_cte
    (133) asignacionAuxiliar1 -> . sp_cte agregarOperando agregarCuadYCompSemAsignacion
    (151) expresion -> . exp expresionAuxiliar1
    (176) lista_cte -> . reiniciarContadorIndices L_BRACKETS lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 R_BRACKETS p_sacarListaPilaOperandos
    (196) sp_cte -> . CTE_STRING
    (197) sp_cte -> . cte_bool
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (183) reiniciarContadorIndices -> . empty
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (206) empty -> .
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    CTE_STRING      shift and go to state 161
    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164
    L_BRACKETS      reduce using rule 206 (empty -> .)
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    asignacionAuxiliar1            shift and go to state 312
    expresion                      shift and go to state 313
    lista_cte                      shift and go to state 314
    sp_cte                         shift and go to state 315
    exp                            shift and go to state 87
    reiniciarContadorIndices       shift and go to state 316
    cte_bool                       shift and go to state 162
    termino                        shift and go to state 41
    empty                          shift and go to state 317
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 293

    (130) agregarOperadorAsignacion -> empty .

    CTE_STRING      reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    VERDADERO       reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    FALSO           reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    L_PAREN         reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    PLUS_OP         reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    MINUS_OP        reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    ID              reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    CTE_I           reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    CTE_F           reduce using rule 130 (agregarOperadorAsignacion -> empty .)
    L_BRACKETS      reduce using rule 130 (agregarOperadorAsignacion -> empty .)


state 294

    (120) condicion -> SI L_PAREN expresion . R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof

    R_PAREN         shift and go to state 318


state 295

    (139) escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 . escrituraAuxiliar2 R_PAREN SEMICOLON
    (142) escrituraAuxiliar2 -> . COMMA escrituraAuxiliar1 escrituraAuxiliar2
    (143) escrituraAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 320
    R_PAREN         reduce using rule 206 (empty -> .)

    escrituraAuxiliar2             shift and go to state 319
    empty                          shift and go to state 321

state 296

    (140) escrituraAuxiliar1 -> expresion . agregarCuadEScrituraExpresion
    (27) agregarCuadEScrituraExpresion -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)

    agregarCuadEScrituraExpresion  shift and go to state 322
    empty                          shift and go to state 323

state 297

    (141) escrituraAuxiliar1 -> sp_cte . agregarCuadEscrituraSPCTE
    (28) agregarCuadEscrituraSPCTE -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)

    agregarCuadEscrituraSPCTE      shift and go to state 324
    empty                          shift and go to state 325

state 298

    (119) ciclo -> CICLO L_PAREN asignacion . SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo

    SEMICOLON       shift and go to state 326


state 299

    (134) asignacionAuxiliar2 -> ID . checarDefID agregarIdHaciaPilas
    (136) elemArr -> ID . checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (54) checarDefID -> . empty
    (206) empty -> .

    L_BRACKETS      reduce using rule 206 (empty -> .)
    ASSIGN_OP       reduce using rule 206 (empty -> .)

    checarDefID                    shift and go to state 327
    empty                          shift and go to state 328

state 300

    (116) dibujar -> dibujarAuxiliar1 COMMA exp . COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen

    COMMA           shift and go to state 329


state 301

    (126) incremento -> ID checarDefID agregarIdHaciaPilas . incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (134) asignacionAuxiliar2 -> ID checarDefID agregarIdHaciaPilas .
    (136) elemArr -> ID checarDefID agregarIdHaciaPilas . agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (127) incrementoAuxiliar1 -> . PLUS_EQUAL_OP
    (128) incrementoAuxiliar1 -> . MINUS_EQUAL_OP
    (138) agregarLongLista -> . empty
    (206) empty -> .

    ASSIGN_OP       reduce using rule 134 (asignacionAuxiliar2 -> ID checarDefID agregarIdHaciaPilas .)
    PLUS_EQUAL_OP   shift and go to state 331
    MINUS_EQUAL_OP  shift and go to state 332
    L_BRACKETS      reduce using rule 206 (empty -> .)

    incrementoAuxiliar1            shift and go to state 330
    agregarLongLista               shift and go to state 135
    empty                          shift and go to state 136

state 302

    (73) retorno -> REGRESAR checarRetorno agregarOperadorRetorno . retornoAuxiliar1 SEMICOLON genCuadRetorno
    (74) retornoAuxiliar1 -> . expresion
    (75) retornoAuxiliar1 -> . sp_cte agregarOperando
    (76) retornoAuxiliar1 -> . empty agregarOperandoVoid
    (151) expresion -> . exp expresionAuxiliar1
    (196) sp_cte -> . CTE_STRING
    (197) sp_cte -> . cte_bool
    (206) empty -> .
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    CTE_STRING      shift and go to state 161
    SEMICOLON       reduce using rule 206 (empty -> .)
    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    retornoAuxiliar1               shift and go to state 333
    expresion                      shift and go to state 334
    sp_cte                         shift and go to state 335
    empty                          shift and go to state 336
    exp                            shift and go to state 87
    cte_bool                       shift and go to state 162
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 303

    (40) agregarOperadorRetorno -> empty .

    CTE_STRING      reduce using rule 40 (agregarOperadorRetorno -> empty .)
    VERDADERO       reduce using rule 40 (agregarOperadorRetorno -> empty .)
    FALSO           reduce using rule 40 (agregarOperadorRetorno -> empty .)
    L_PAREN         reduce using rule 40 (agregarOperadorRetorno -> empty .)
    PLUS_OP         reduce using rule 40 (agregarOperadorRetorno -> empty .)
    MINUS_OP        reduce using rule 40 (agregarOperadorRetorno -> empty .)
    ID              reduce using rule 40 (agregarOperadorRetorno -> empty .)
    CTE_I           reduce using rule 40 (agregarOperadorRetorno -> empty .)
    CTE_F           reduce using rule 40 (agregarOperadorRetorno -> empty .)
    SEMICOLON       reduce using rule 40 (agregarOperadorRetorno -> empty .)


state 304

    (117) dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN . ID checarSiExisteFiguraId

    ID              shift and go to state 337


state 305

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN . ID checarSiExisteFiguraId COMMA exp COMMA exp

    ID              shift and go to state 338


state 306

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID . agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (57) agregaParamFunc -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)

    agregaParamFunc                shift and go to state 339
    empty                          shift and go to state 340

state 307

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 . SEMICOLON

    SEMICOLON       shift and go to state 341


state 308

    (89) figurasAuxiliar1 -> COMMA . figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (91) figura -> . CUADRADO
    (92) figura -> . CIRCULO
    (93) figura -> . TRIANGULO
    (94) figura -> . LINEA

    CUADRADO        shift and go to state 82
    CIRCULO         shift and go to state 83
    TRIANGULO       shift and go to state 84
    LINEA           shift and go to state 85

    figura                         shift and go to state 342

state 309

    (90) figurasAuxiliar1 -> empty .

    SEMICOLON       reduce using rule 90 (figurasAuxiliar1 -> empty .)


state 310

    (160) expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO .

    R_PAREN         reduce using rule 160 (expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO .)
    COMMA           reduce using rule 160 (expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO .)
    SEMICOLON       reduce using rule 160 (expresionAuxiliar3 -> expresionAuxiliar4 agregarOperador expresion compSemYGenCuadYO .)


state 311

    (20) compSemYGenCuadYO -> empty .

    R_PAREN         reduce using rule 20 (compSemYGenCuadYO -> empty .)
    COMMA           reduce using rule 20 (compSemYGenCuadYO -> empty .)
    SEMICOLON       reduce using rule 20 (compSemYGenCuadYO -> empty .)


state 312

    (129) asignacion -> asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 .

    SEMICOLON       reduce using rule 129 (asignacion -> asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1 .)


state 313

    (131) asignacionAuxiliar1 -> expresion . agregarCuadYCompSemAsignacion
    (22) agregarCuadYCompSemAsignacion -> . empty
    (206) empty -> .

    SEMICOLON       reduce using rule 206 (empty -> .)

    agregarCuadYCompSemAsignacion  shift and go to state 343
    empty                          shift and go to state 344

state 314

    (132) asignacionAuxiliar1 -> lista_cte .

    SEMICOLON       reduce using rule 132 (asignacionAuxiliar1 -> lista_cte .)


state 315

    (133) asignacionAuxiliar1 -> sp_cte . agregarOperando agregarCuadYCompSemAsignacion
    (21) agregarOperando -> . empty
    (206) empty -> .

    SEMICOLON       reduce using rule 206 (empty -> .)

    agregarOperando                shift and go to state 345
    empty                          shift and go to state 183

state 316

    (176) lista_cte -> reiniciarContadorIndices . L_BRACKETS lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 R_BRACKETS p_sacarListaPilaOperandos

    L_BRACKETS      shift and go to state 346


state 317

    (183) reiniciarContadorIndices -> empty .

    L_BRACKETS      reduce using rule 183 (reiniciarContadorIndices -> empty .)


state 318

    (120) condicion -> SI L_PAREN expresion R_PAREN . generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (32) generarCuadCondicionGotoFIf -> . empty
    (206) empty -> .

    L_BRACES        reduce using rule 206 (empty -> .)

    generarCuadCondicionGotoFIf    shift and go to state 347
    empty                          shift and go to state 348

state 319

    (139) escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 . R_PAREN SEMICOLON

    R_PAREN         shift and go to state 349


state 320

    (142) escrituraAuxiliar2 -> COMMA . escrituraAuxiliar1 escrituraAuxiliar2
    (140) escrituraAuxiliar1 -> . expresion agregarCuadEScrituraExpresion
    (141) escrituraAuxiliar1 -> . sp_cte agregarCuadEscrituraSPCTE
    (151) expresion -> . exp expresionAuxiliar1
    (196) sp_cte -> . CTE_STRING
    (197) sp_cte -> . cte_bool
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    CTE_STRING      shift and go to state 161
    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    escrituraAuxiliar1             shift and go to state 350
    expresion                      shift and go to state 296
    sp_cte                         shift and go to state 297
    exp                            shift and go to state 87
    cte_bool                       shift and go to state 162
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 321

    (143) escrituraAuxiliar2 -> empty .

    R_PAREN         reduce using rule 143 (escrituraAuxiliar2 -> empty .)


state 322

    (140) escrituraAuxiliar1 -> expresion agregarCuadEScrituraExpresion .

    COMMA           reduce using rule 140 (escrituraAuxiliar1 -> expresion agregarCuadEScrituraExpresion .)
    R_PAREN         reduce using rule 140 (escrituraAuxiliar1 -> expresion agregarCuadEScrituraExpresion .)


state 323

    (27) agregarCuadEScrituraExpresion -> empty .

    COMMA           reduce using rule 27 (agregarCuadEScrituraExpresion -> empty .)
    R_PAREN         reduce using rule 27 (agregarCuadEScrituraExpresion -> empty .)


state 324

    (141) escrituraAuxiliar1 -> sp_cte agregarCuadEscrituraSPCTE .

    COMMA           reduce using rule 141 (escrituraAuxiliar1 -> sp_cte agregarCuadEscrituraSPCTE .)
    R_PAREN         reduce using rule 141 (escrituraAuxiliar1 -> sp_cte agregarCuadEscrituraSPCTE .)


state 325

    (28) agregarCuadEscrituraSPCTE -> empty .

    COMMA           reduce using rule 28 (agregarCuadEscrituraSPCTE -> empty .)
    R_PAREN         reduce using rule 28 (agregarCuadEscrituraSPCTE -> empty .)


state 326

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON . agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (35) agregarAPilaSaltosRegresoCiclo -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarAPilaSaltosRegresoCiclo shift and go to state 351
    empty                          shift and go to state 352

state 327

    (134) asignacionAuxiliar2 -> ID checarDefID . agregarIdHaciaPilas
    (136) elemArr -> ID checarDefID . agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (13) agregarIdHaciaPilas -> . empty
    (206) empty -> .

    L_BRACKETS      reduce using rule 206 (empty -> .)
    ASSIGN_OP       reduce using rule 206 (empty -> .)

    agregarIdHaciaPilas            shift and go to state 353
    empty                          shift and go to state 104

state 328

    (54) checarDefID -> empty .

    L_BRACKETS      reduce using rule 54 (checarDefID -> empty .)
    ASSIGN_OP       reduce using rule 54 (checarDefID -> empty .)
    PLUS_EQUAL_OP   reduce using rule 54 (checarDefID -> empty .)
    MINUS_EQUAL_OP  reduce using rule 54 (checarDefID -> empty .)


state 329

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA . exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 354
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 330

    (126) incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 . agregarOperador exp agregarCuadYCompSemAsignacion
    (14) agregarOperador -> . empty
    (206) empty -> .

    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    agregarOperador                shift and go to state 355
    empty                          shift and go to state 131

state 331

    (127) incrementoAuxiliar1 -> PLUS_EQUAL_OP .

    L_PAREN         reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    PLUS_OP         reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    MINUS_OP        reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    ID              reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    CTE_I           reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)
    CTE_F           reduce using rule 127 (incrementoAuxiliar1 -> PLUS_EQUAL_OP .)


state 332

    (128) incrementoAuxiliar1 -> MINUS_EQUAL_OP .

    L_PAREN         reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    PLUS_OP         reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    MINUS_OP        reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    ID              reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    CTE_I           reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)
    CTE_F           reduce using rule 128 (incrementoAuxiliar1 -> MINUS_EQUAL_OP .)


state 333

    (73) retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 . SEMICOLON genCuadRetorno

    SEMICOLON       shift and go to state 356


state 334

    (74) retornoAuxiliar1 -> expresion .

    SEMICOLON       reduce using rule 74 (retornoAuxiliar1 -> expresion .)


state 335

    (75) retornoAuxiliar1 -> sp_cte . agregarOperando
    (21) agregarOperando -> . empty
    (206) empty -> .

    SEMICOLON       reduce using rule 206 (empty -> .)

    agregarOperando                shift and go to state 357
    empty                          shift and go to state 183

state 336

    (76) retornoAuxiliar1 -> empty . agregarOperandoVoid
    (41) agregarOperandoVoid -> . empty
    (206) empty -> .

    SEMICOLON       reduce using rule 206 (empty -> .)

    empty                          shift and go to state 358
    agregarOperandoVoid            shift and go to state 359

state 337

    (117) dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN ID . checarSiExisteFiguraId
    (46) checarSiExisteFiguraId -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)

    checarSiExisteFiguraId         shift and go to state 360
    empty                          shift and go to state 361

state 338

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID . checarSiExisteFiguraId COMMA exp COMMA exp
    (46) checarSiExisteFiguraId -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)

    checarSiExisteFiguraId         shift and go to state 362
    empty                          shift and go to state 361

state 339

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc . funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (82) funcionesAuxiliar2 -> . COMMA tipo ID agregaParamFunc funcionesAuxiliar2
    (83) funcionesAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 364
    R_PAREN         reduce using rule 206 (empty -> .)

    funcionesAuxiliar2             shift and go to state 363
    empty                          shift and go to state 365

state 340

    (57) agregaParamFunc -> empty .

    COMMA           reduce using rule 57 (agregaParamFunc -> empty .)
    R_PAREN         reduce using rule 57 (agregaParamFunc -> empty .)


state 341

    (88) figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON .

    GRAVEDAD        reduce using rule 88 (figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON .)
    FUNCIONES       reduce using rule 88 (figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON .)
    APOLO           reduce using rule 88 (figuras -> FIGURAS creaFigFuncSimb asignarAlcance figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 SEMICOLON .)


state 342

    (89) figurasAuxiliar1 -> COMMA figura . ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1

    ID              shift and go to state 366


state 343

    (131) asignacionAuxiliar1 -> expresion agregarCuadYCompSemAsignacion .

    SEMICOLON       reduce using rule 131 (asignacionAuxiliar1 -> expresion agregarCuadYCompSemAsignacion .)


state 344

    (22) agregarCuadYCompSemAsignacion -> empty .

    SEMICOLON       reduce using rule 22 (agregarCuadYCompSemAsignacion -> empty .)
    R_PAREN         reduce using rule 22 (agregarCuadYCompSemAsignacion -> empty .)


state 345

    (133) asignacionAuxiliar1 -> sp_cte agregarOperando . agregarCuadYCompSemAsignacion
    (22) agregarCuadYCompSemAsignacion -> . empty
    (206) empty -> .

    SEMICOLON       reduce using rule 206 (empty -> .)

    agregarCuadYCompSemAsignacion  shift and go to state 367
    empty                          shift and go to state 344

state 346

    (176) lista_cte -> reiniciarContadorIndices L_BRACKETS . lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 R_BRACKETS p_sacarListaPilaOperandos
    (177) lista_cteAuxiliar1 -> . exp
    (178) lista_cteAuxiliar1 -> . sp_cte agregarOperando
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (196) sp_cte -> . CTE_STRING
    (197) sp_cte -> . cte_bool
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    CTE_STRING      shift and go to state 161
    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    lista_cteAuxiliar1             shift and go to state 368
    exp                            shift and go to state 369
    sp_cte                         shift and go to state 370
    termino                        shift and go to state 41
    cte_bool                       shift and go to state 162
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 347

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf . bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (123) bloque -> . L_BRACES bloqueAuxiliar1 R_BRACES

    L_BRACES        shift and go to state 208

    bloque                         shift and go to state 371

state 348

    (32) generarCuadCondicionGotoFIf -> empty .

    L_BRACES        reduce using rule 32 (generarCuadCondicionGotoFIf -> empty .)


state 349

    (139) escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 372


state 350

    (142) escrituraAuxiliar2 -> COMMA escrituraAuxiliar1 . escrituraAuxiliar2
    (142) escrituraAuxiliar2 -> . COMMA escrituraAuxiliar1 escrituraAuxiliar2
    (143) escrituraAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 320
    R_PAREN         reduce using rule 206 (empty -> .)

    escrituraAuxiliar2             shift and go to state 373
    empty                          shift and go to state 321

state 351

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo . expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (151) expresion -> . exp expresionAuxiliar1
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    expresion                      shift and go to state 374
    exp                            shift and go to state 87
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 352

    (35) agregarAPilaSaltosRegresoCiclo -> empty .

    L_PAREN         reduce using rule 35 (agregarAPilaSaltosRegresoCiclo -> empty .)
    PLUS_OP         reduce using rule 35 (agregarAPilaSaltosRegresoCiclo -> empty .)
    MINUS_OP        reduce using rule 35 (agregarAPilaSaltosRegresoCiclo -> empty .)
    ID              reduce using rule 35 (agregarAPilaSaltosRegresoCiclo -> empty .)
    CTE_I           reduce using rule 35 (agregarAPilaSaltosRegresoCiclo -> empty .)
    CTE_F           reduce using rule 35 (agregarAPilaSaltosRegresoCiclo -> empty .)


state 353

    (134) asignacionAuxiliar2 -> ID checarDefID agregarIdHaciaPilas .
    (136) elemArr -> ID checarDefID agregarIdHaciaPilas . agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr
    (138) agregarLongLista -> . empty
    (206) empty -> .

    ASSIGN_OP       reduce using rule 134 (asignacionAuxiliar2 -> ID checarDefID agregarIdHaciaPilas .)
    L_BRACKETS      reduce using rule 206 (empty -> .)

    agregarLongLista               shift and go to state 135
    empty                          shift and go to state 136

state 354

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp . R_PAREN SEMICOLON agregarCuadDibujarGen

    R_PAREN         shift and go to state 375


state 355

    (126) incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador . exp agregarCuadYCompSemAsignacion
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 376
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 356

    (73) retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON . genCuadRetorno
    (38) genCuadRetorno -> . empty
    (206) empty -> .

    SI              reduce using rule 206 (empty -> .)
    IMPRIMIR        reduce using rule 206 (empty -> .)
    CICLO           reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    REGRESAR        reduce using rule 206 (empty -> .)
    DIBUJAR         reduce using rule 206 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 206 (empty -> .)
    R_BRACES        reduce using rule 206 (empty -> .)

    genCuadRetorno                 shift and go to state 377
    empty                          shift and go to state 378

state 357

    (75) retornoAuxiliar1 -> sp_cte agregarOperando .

    SEMICOLON       reduce using rule 75 (retornoAuxiliar1 -> sp_cte agregarOperando .)


state 358

    (41) agregarOperandoVoid -> empty .

    SEMICOLON       reduce using rule 41 (agregarOperandoVoid -> empty .)


state 359

    (76) retornoAuxiliar1 -> empty agregarOperandoVoid .

    SEMICOLON       reduce using rule 76 (retornoAuxiliar1 -> empty agregarOperandoVoid .)


state 360

    (117) dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId .

    COMMA           reduce using rule 117 (dibujarAuxiliar1 -> DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId .)


state 361

    (46) checarSiExisteFiguraId -> empty .

    COMMA           reduce using rule 46 (checarSiExisteFiguraId -> empty .)


state 362

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId . COMMA exp COMMA exp

    COMMA           shift and go to state 379


state 363

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 . R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    R_PAREN         shift and go to state 380


state 364

    (82) funcionesAuxiliar2 -> COMMA . tipo ID agregaParamFunc funcionesAuxiliar2
    (186) tipo -> . ENTERO
    (187) tipo -> . FLOTANTE
    (188) tipo -> . BOOLEANO
    (189) tipo -> . TEXTO

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 29
    BOOLEANO        shift and go to state 30
    TEXTO           shift and go to state 31

    tipo                           shift and go to state 381

state 365

    (83) funcionesAuxiliar2 -> empty .

    R_PAREN         reduce using rule 83 (funcionesAuxiliar2 -> empty .)


state 366

    (89) figurasAuxiliar1 -> COMMA figura ID . checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (60) checarFiguraId -> . empty
    (206) empty -> .

    L_BRACES        reduce using rule 206 (empty -> .)

    checarFiguraId                 shift and go to state 382
    empty                          shift and go to state 146

state 367

    (133) asignacionAuxiliar1 -> sp_cte agregarOperando agregarCuadYCompSemAsignacion .

    SEMICOLON       reduce using rule 133 (asignacionAuxiliar1 -> sp_cte agregarOperando agregarCuadYCompSemAsignacion .)


state 368

    (176) lista_cte -> reiniciarContadorIndices L_BRACKETS lista_cteAuxiliar1 . comprobarTipoElem lista_cteAuxiliar2 R_BRACKETS p_sacarListaPilaOperandos
    (181) comprobarTipoElem -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    comprobarTipoElem              shift and go to state 383
    empty                          shift and go to state 384

state 369

    (177) lista_cteAuxiliar1 -> exp .

    COMMA           reduce using rule 177 (lista_cteAuxiliar1 -> exp .)
    R_BRACKETS      reduce using rule 177 (lista_cteAuxiliar1 -> exp .)


state 370

    (178) lista_cteAuxiliar1 -> sp_cte . agregarOperando
    (21) agregarOperando -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    agregarOperando                shift and go to state 385
    empty                          shift and go to state 183

state 371

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque . condicionAuxiliar1 SEMICOLON llenarGotof
    (121) condicionAuxiliar1 -> . SI_NO generarCuadCondicionGotoFElse bloque
    (122) condicionAuxiliar1 -> . empty
    (206) empty -> .

    SI_NO           shift and go to state 387
    SEMICOLON       reduce using rule 206 (empty -> .)

    condicionAuxiliar1             shift and go to state 386
    empty                          shift and go to state 388

state 372

    (139) escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .

    SI              reduce using rule 139 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 139 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    CICLO           reduce using rule 139 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    ID              reduce using rule 139 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    REGRESAR        reduce using rule 139 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    DIBUJAR         reduce using rule 139 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    DIBUJAR_LINEA   reduce using rule 139 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)
    R_BRACES        reduce using rule 139 (escritura -> IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON .)


state 373

    (142) escrituraAuxiliar2 -> COMMA escrituraAuxiliar1 escrituraAuxiliar2 .

    R_PAREN         reduce using rule 142 (escrituraAuxiliar2 -> COMMA escrituraAuxiliar1 escrituraAuxiliar2 .)


state 374

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion . SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo

    SEMICOLON       shift and go to state 389


state 375

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN . SEMICOLON agregarCuadDibujarGen

    SEMICOLON       shift and go to state 390


state 376

    (126) incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp . agregarCuadYCompSemAsignacion
    (22) agregarCuadYCompSemAsignacion -> . empty
    (206) empty -> .

    SEMICOLON       reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)

    agregarCuadYCompSemAsignacion  shift and go to state 391
    empty                          shift and go to state 344

state 377

    (73) retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .

    SI              reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    IMPRIMIR        reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    CICLO           reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    ID              reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    REGRESAR        reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    DIBUJAR         reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    DIBUJAR_LINEA   reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)
    R_BRACES        reduce using rule 73 (retorno -> REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno .)


state 378

    (38) genCuadRetorno -> empty .

    SI              reduce using rule 38 (genCuadRetorno -> empty .)
    IMPRIMIR        reduce using rule 38 (genCuadRetorno -> empty .)
    CICLO           reduce using rule 38 (genCuadRetorno -> empty .)
    ID              reduce using rule 38 (genCuadRetorno -> empty .)
    REGRESAR        reduce using rule 38 (genCuadRetorno -> empty .)
    DIBUJAR         reduce using rule 38 (genCuadRetorno -> empty .)
    DIBUJAR_LINEA   reduce using rule 38 (genCuadRetorno -> empty .)
    R_BRACES        reduce using rule 38 (genCuadRetorno -> empty .)


state 379

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA . exp COMMA exp
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 392
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 380

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN . L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars

    L_BRACES        shift and go to state 393


state 381

    (82) funcionesAuxiliar2 -> COMMA tipo . ID agregaParamFunc funcionesAuxiliar2

    ID              shift and go to state 394


state 382

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId . L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1

    L_BRACES        shift and go to state 395


state 383

    (176) lista_cte -> reiniciarContadorIndices L_BRACKETS lista_cteAuxiliar1 comprobarTipoElem . lista_cteAuxiliar2 R_BRACKETS p_sacarListaPilaOperandos
    (179) lista_cteAuxiliar2 -> . COMMA comprobarIndices lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2
    (180) lista_cteAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 397
    R_BRACKETS      reduce using rule 206 (empty -> .)

    lista_cteAuxiliar2             shift and go to state 396
    empty                          shift and go to state 398

state 384

    (181) comprobarTipoElem -> empty .

    COMMA           reduce using rule 181 (comprobarTipoElem -> empty .)
    R_BRACKETS      reduce using rule 181 (comprobarTipoElem -> empty .)


state 385

    (178) lista_cteAuxiliar1 -> sp_cte agregarOperando .

    COMMA           reduce using rule 178 (lista_cteAuxiliar1 -> sp_cte agregarOperando .)
    R_BRACKETS      reduce using rule 178 (lista_cteAuxiliar1 -> sp_cte agregarOperando .)


state 386

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 . SEMICOLON llenarGotof

    SEMICOLON       shift and go to state 399


state 387

    (121) condicionAuxiliar1 -> SI_NO . generarCuadCondicionGotoFElse bloque
    (34) generarCuadCondicionGotoFElse -> . empty
    (206) empty -> .

    L_BRACES        reduce using rule 206 (empty -> .)

    generarCuadCondicionGotoFElse  shift and go to state 400
    empty                          shift and go to state 401

state 388

    (122) condicionAuxiliar1 -> empty .

    SEMICOLON       reduce using rule 122 (condicionAuxiliar1 -> empty .)


state 389

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON . generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (36) generarCuadCondCiclo -> . empty
    (206) empty -> .

    ID              reduce using rule 206 (empty -> .)

    generarCuadCondCiclo           shift and go to state 402
    empty                          shift and go to state 403

state 390

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON . agregarCuadDibujarGen
    (31) agregarCuadDibujarGen -> . empty
    (206) empty -> .

    SI              reduce using rule 206 (empty -> .)
    IMPRIMIR        reduce using rule 206 (empty -> .)
    CICLO           reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    REGRESAR        reduce using rule 206 (empty -> .)
    DIBUJAR         reduce using rule 206 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 206 (empty -> .)
    R_BRACES        reduce using rule 206 (empty -> .)

    agregarCuadDibujarGen          shift and go to state 404
    empty                          shift and go to state 405

state 391

    (126) incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion .

    SEMICOLON       reduce using rule 126 (incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion .)
    R_PAREN         reduce using rule 126 (incremento -> ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion .)


state 392

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp . COMMA exp

    COMMA           shift and go to state 406


state 393

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES . funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars
    (84) funcionesAuxiliar3 -> . variables
    (85) funcionesAuxiliar3 -> . empty
    (62) variables -> . VARIABLES variablesAuxiliar1 ID agregaVarTabla variablesAuxiliar2 SEMICOLON variablesAuxiliar3
    (206) empty -> .

    VARIABLES       shift and go to state 17
    SI              reduce using rule 206 (empty -> .)
    IMPRIMIR        reduce using rule 206 (empty -> .)
    CICLO           reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    REGRESAR        reduce using rule 206 (empty -> .)
    DIBUJAR         reduce using rule 206 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 206 (empty -> .)
    R_BRACES        reduce using rule 206 (empty -> .)

    funcionesAuxiliar3             shift and go to state 407
    variables                      shift and go to state 408
    empty                          shift and go to state 409

state 394

    (82) funcionesAuxiliar2 -> COMMA tipo ID . agregaParamFunc funcionesAuxiliar2
    (57) agregaParamFunc -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_PAREN         reduce using rule 206 (empty -> .)

    agregaParamFunc                shift and go to state 410
    empty                          shift and go to state 340

state 395

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES . figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (95) figura_atributos -> . MEDIDA COLON CTE_I
    (96) figura_atributos -> . figura_atributosAuxiliar1 COLON CTE_F
    (97) figura_atributos -> . MOVIBLE COLON cte_bool
    (98) figura_atributos -> . COLOR COLON color_cte
    (99) figura_atributosAuxiliar1 -> . FRICCION
    (100) figura_atributosAuxiliar1 -> . MASA
    (101) figura_atributosAuxiliar1 -> . REBOTE

    MEDIDA          shift and go to state 191
    MOVIBLE         shift and go to state 193
    COLOR           shift and go to state 194
    FRICCION        shift and go to state 195
    MASA            shift and go to state 196
    REBOTE          shift and go to state 197

    figura_atributos               shift and go to state 411
    figura_atributosAuxiliar1      shift and go to state 192

state 396

    (176) lista_cte -> reiniciarContadorIndices L_BRACKETS lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 . R_BRACKETS p_sacarListaPilaOperandos

    R_BRACKETS      shift and go to state 412


state 397

    (179) lista_cteAuxiliar2 -> COMMA . comprobarIndices lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2
    (182) comprobarIndices -> . empty
    (206) empty -> .

    CTE_STRING      reduce using rule 206 (empty -> .)
    VERDADERO       reduce using rule 206 (empty -> .)
    FALSO           reduce using rule 206 (empty -> .)
    L_PAREN         reduce using rule 206 (empty -> .)
    PLUS_OP         reduce using rule 206 (empty -> .)
    MINUS_OP        reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    CTE_I           reduce using rule 206 (empty -> .)
    CTE_F           reduce using rule 206 (empty -> .)

    comprobarIndices               shift and go to state 413
    empty                          shift and go to state 414

state 398

    (180) lista_cteAuxiliar2 -> empty .

    R_BRACKETS      reduce using rule 180 (lista_cteAuxiliar2 -> empty .)


state 399

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON . llenarGotof
    (33) llenarGotof -> . empty
    (206) empty -> .

    SI              reduce using rule 206 (empty -> .)
    IMPRIMIR        reduce using rule 206 (empty -> .)
    CICLO           reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    REGRESAR        reduce using rule 206 (empty -> .)
    DIBUJAR         reduce using rule 206 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 206 (empty -> .)
    R_BRACES        reduce using rule 206 (empty -> .)

    llenarGotof                    shift and go to state 415
    empty                          shift and go to state 416

state 400

    (121) condicionAuxiliar1 -> SI_NO generarCuadCondicionGotoFElse . bloque
    (123) bloque -> . L_BRACES bloqueAuxiliar1 R_BRACES

    L_BRACES        shift and go to state 208

    bloque                         shift and go to state 417

state 401

    (34) generarCuadCondicionGotoFElse -> empty .

    L_BRACES        reduce using rule 34 (generarCuadCondicionGotoFElse -> empty .)


state 402

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo . incremento R_PAREN bloque generarCuadRetCiclo
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion

    ID              shift and go to state 419

    incremento                     shift and go to state 418

state 403

    (36) generarCuadCondCiclo -> empty .

    ID              reduce using rule 36 (generarCuadCondCiclo -> empty .)


state 404

    (116) dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .

    SI              reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    IMPRIMIR        reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    CICLO           reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    ID              reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    REGRESAR        reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    DIBUJAR         reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    DIBUJAR_LINEA   reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)
    R_BRACES        reduce using rule 116 (dibujar -> dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen .)


state 405

    (31) agregarCuadDibujarGen -> empty .

    SI              reduce using rule 31 (agregarCuadDibujarGen -> empty .)
    IMPRIMIR        reduce using rule 31 (agregarCuadDibujarGen -> empty .)
    CICLO           reduce using rule 31 (agregarCuadDibujarGen -> empty .)
    ID              reduce using rule 31 (agregarCuadDibujarGen -> empty .)
    REGRESAR        reduce using rule 31 (agregarCuadDibujarGen -> empty .)
    DIBUJAR         reduce using rule 31 (agregarCuadDibujarGen -> empty .)
    DIBUJAR_LINEA   reduce using rule 31 (agregarCuadDibujarGen -> empty .)
    R_BRACES        reduce using rule 31 (agregarCuadDibujarGen -> empty .)


state 406

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA . exp
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    exp                            shift and go to state 420
    termino                        shift and go to state 41
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 407

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 . funcionesAuxiliar4 R_BRACES liberaTablaVars
    (86) funcionesAuxiliar4 -> . estatuto funcionesAuxiliar4
    (87) funcionesAuxiliar4 -> . empty
    (108) estatuto -> . asignacion SEMICOLON
    (109) estatuto -> . condicion
    (110) estatuto -> . escritura
    (111) estatuto -> . ciclo
    (112) estatuto -> . dibujar
    (113) estatuto -> . llamada SEMICOLON
    (114) estatuto -> . incremento SEMICOLON
    (115) estatuto -> . retorno
    (206) empty -> .
    (129) asignacion -> . asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1
    (120) condicion -> . SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (139) escritura -> . IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (119) ciclo -> . CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (116) dibujar -> . dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (73) retorno -> . REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (134) asignacionAuxiliar2 -> . ID checarDefID agregarIdHaciaPilas
    (135) asignacionAuxiliar2 -> . elemArr
    (117) dibujarAuxiliar1 -> . DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (118) dibujarAuxiliar1 -> . DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    R_BRACES        reduce using rule 206 (empty -> .)
    SI              shift and go to state 242
    IMPRIMIR        shift and go to state 243
    CICLO           shift and go to state 244
    ID              shift and go to state 246
    REGRESAR        shift and go to state 247
    DIBUJAR         shift and go to state 249
    DIBUJAR_LINEA   shift and go to state 250

    funcionesAuxiliar4             shift and go to state 421
    estatuto                       shift and go to state 422
    empty                          shift and go to state 423
    asignacion                     shift and go to state 233
    condicion                      shift and go to state 234
    escritura                      shift and go to state 235
    ciclo                          shift and go to state 236
    dibujar                        shift and go to state 237
    llamada                        shift and go to state 238
    incremento                     shift and go to state 239
    retorno                        shift and go to state 240
    asignacionAuxiliar2            shift and go to state 241
    dibujarAuxiliar1               shift and go to state 245
    elemArr                        shift and go to state 248

state 408

    (84) funcionesAuxiliar3 -> variables .

    SI              reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    IMPRIMIR        reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    CICLO           reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    ID              reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    REGRESAR        reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    DIBUJAR         reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    DIBUJAR_LINEA   reduce using rule 84 (funcionesAuxiliar3 -> variables .)
    R_BRACES        reduce using rule 84 (funcionesAuxiliar3 -> variables .)


state 409

    (85) funcionesAuxiliar3 -> empty .

    SI              reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    IMPRIMIR        reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    CICLO           reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    ID              reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    REGRESAR        reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    DIBUJAR         reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    DIBUJAR_LINEA   reduce using rule 85 (funcionesAuxiliar3 -> empty .)
    R_BRACES        reduce using rule 85 (funcionesAuxiliar3 -> empty .)


state 410

    (82) funcionesAuxiliar2 -> COMMA tipo ID agregaParamFunc . funcionesAuxiliar2
    (82) funcionesAuxiliar2 -> . COMMA tipo ID agregaParamFunc funcionesAuxiliar2
    (83) funcionesAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 364
    R_PAREN         reduce using rule 206 (empty -> .)

    funcionesAuxiliar2             shift and go to state 424
    empty                          shift and go to state 365

state 411

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos . figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (102) figura_atributosAuxiliar2 -> . COMMA figura_atributos figura_atributosAuxiliar2
    (103) figura_atributosAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 213
    R_BRACES        reduce using rule 206 (empty -> .)

    figura_atributosAuxiliar2      shift and go to state 425
    empty                          shift and go to state 214

state 412

    (176) lista_cte -> reiniciarContadorIndices L_BRACKETS lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 R_BRACKETS . p_sacarListaPilaOperandos
    (184) p_sacarListaPilaOperandos -> . empty
    (206) empty -> .

    SEMICOLON       reduce using rule 206 (empty -> .)

    p_sacarListaPilaOperandos      shift and go to state 426
    empty                          shift and go to state 427

state 413

    (179) lista_cteAuxiliar2 -> COMMA comprobarIndices . lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2
    (177) lista_cteAuxiliar1 -> . exp
    (178) lista_cteAuxiliar1 -> . sp_cte agregarOperando
    (104) exp -> . termino compSemMasMenosYGenCuad expAuxiliar1
    (196) sp_cte -> . CTE_STRING
    (197) sp_cte -> . cte_bool
    (69) termino -> . factor comprobarSemanticaPorEntre terminoAuxiliar1
    (198) cte_bool -> . VERDADERO
    (199) cte_bool -> . FALSO
    (164) factor -> . L_PAREN agregarPisoFalso expresion R_PAREN eliminarPisoFalso
    (165) factor -> . factorAuxiliar1 factorAuxiliar3 factorAuxiliar4
    (166) factor -> . factorAuxiliar3
    (167) factorAuxiliar1 -> . PLUS_OP
    (168) factorAuxiliar1 -> . MINUS_OP
    (171) factorAuxiliar3 -> . factorAuxiliar2
    (172) factorAuxiliar3 -> . ID checarDefID agregarIdHaciaPilas
    (173) factorAuxiliar3 -> . llamada
    (174) factorAuxiliar3 -> . elemArr
    (169) factorAuxiliar2 -> . CTE_I
    (170) factorAuxiliar2 -> . CTE_F
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    CTE_STRING      shift and go to state 161
    VERDADERO       shift and go to state 163
    FALSO           shift and go to state 164
    L_PAREN         shift and go to state 39
    PLUS_OP         shift and go to state 45
    MINUS_OP        shift and go to state 46
    ID              shift and go to state 48
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52

    lista_cteAuxiliar1             shift and go to state 428
    exp                            shift and go to state 369
    sp_cte                         shift and go to state 370
    termino                        shift and go to state 41
    cte_bool                       shift and go to state 162
    factor                         shift and go to state 42
    factorAuxiliar1                shift and go to state 43
    factorAuxiliar3                shift and go to state 44
    factorAuxiliar2                shift and go to state 47
    llamada                        shift and go to state 49
    elemArr                        shift and go to state 50

state 414

    (182) comprobarIndices -> empty .

    CTE_STRING      reduce using rule 182 (comprobarIndices -> empty .)
    VERDADERO       reduce using rule 182 (comprobarIndices -> empty .)
    FALSO           reduce using rule 182 (comprobarIndices -> empty .)
    L_PAREN         reduce using rule 182 (comprobarIndices -> empty .)
    PLUS_OP         reduce using rule 182 (comprobarIndices -> empty .)
    MINUS_OP        reduce using rule 182 (comprobarIndices -> empty .)
    ID              reduce using rule 182 (comprobarIndices -> empty .)
    CTE_I           reduce using rule 182 (comprobarIndices -> empty .)
    CTE_F           reduce using rule 182 (comprobarIndices -> empty .)


state 415

    (120) condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .

    SI              reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    IMPRIMIR        reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    CICLO           reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    ID              reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    REGRESAR        reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    DIBUJAR         reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    DIBUJAR_LINEA   reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)
    R_BRACES        reduce using rule 120 (condicion -> SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof .)


state 416

    (33) llenarGotof -> empty .

    SI              reduce using rule 33 (llenarGotof -> empty .)
    IMPRIMIR        reduce using rule 33 (llenarGotof -> empty .)
    CICLO           reduce using rule 33 (llenarGotof -> empty .)
    ID              reduce using rule 33 (llenarGotof -> empty .)
    REGRESAR        reduce using rule 33 (llenarGotof -> empty .)
    DIBUJAR         reduce using rule 33 (llenarGotof -> empty .)
    DIBUJAR_LINEA   reduce using rule 33 (llenarGotof -> empty .)
    R_BRACES        reduce using rule 33 (llenarGotof -> empty .)


state 417

    (121) condicionAuxiliar1 -> SI_NO generarCuadCondicionGotoFElse bloque .

    SEMICOLON       reduce using rule 121 (condicionAuxiliar1 -> SI_NO generarCuadCondicionGotoFElse bloque .)


state 418

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento . R_PAREN bloque generarCuadRetCiclo

    R_PAREN         shift and go to state 429


state 419

    (126) incremento -> ID . checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (54) checarDefID -> . empty
    (206) empty -> .

    PLUS_EQUAL_OP   reduce using rule 206 (empty -> .)
    MINUS_EQUAL_OP  reduce using rule 206 (empty -> .)

    checarDefID                    shift and go to state 430
    empty                          shift and go to state 328

state 420

    (118) dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp .

    COMMA           reduce using rule 118 (dibujarAuxiliar1 -> DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp .)


state 421

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 . R_BRACES liberaTablaVars

    R_BRACES        shift and go to state 431


state 422

    (86) funcionesAuxiliar4 -> estatuto . funcionesAuxiliar4
    (86) funcionesAuxiliar4 -> . estatuto funcionesAuxiliar4
    (87) funcionesAuxiliar4 -> . empty
    (108) estatuto -> . asignacion SEMICOLON
    (109) estatuto -> . condicion
    (110) estatuto -> . escritura
    (111) estatuto -> . ciclo
    (112) estatuto -> . dibujar
    (113) estatuto -> . llamada SEMICOLON
    (114) estatuto -> . incremento SEMICOLON
    (115) estatuto -> . retorno
    (206) empty -> .
    (129) asignacion -> . asignacionAuxiliar2 ASSIGN_OP agregarOperadorAsignacion asignacionAuxiliar1
    (120) condicion -> . SI L_PAREN expresion R_PAREN generarCuadCondicionGotoFIf bloque condicionAuxiliar1 SEMICOLON llenarGotof
    (139) escritura -> . IMPRIMIR L_PAREN escrituraAuxiliar1 escrituraAuxiliar2 R_PAREN SEMICOLON
    (119) ciclo -> . CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo
    (116) dibujar -> . dibujarAuxiliar1 COMMA exp COMMA exp R_PAREN SEMICOLON agregarCuadDibujarGen
    (144) llamada -> . ID checarSiExisteFuncion generarAccionERA L_PAREN llamadaAuxiliar1 R_PAREN generarAccionGoSub
    (126) incremento -> . ID checarDefID agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (73) retorno -> . REGRESAR checarRetorno agregarOperadorRetorno retornoAuxiliar1 SEMICOLON genCuadRetorno
    (134) asignacionAuxiliar2 -> . ID checarDefID agregarIdHaciaPilas
    (135) asignacionAuxiliar2 -> . elemArr
    (117) dibujarAuxiliar1 -> . DIBUJAR agregarOperadorDibujar L_PAREN ID checarSiExisteFiguraId
    (118) dibujarAuxiliar1 -> . DIBUJAR_LINEA agregarOperadorDibujarLinea L_PAREN ID checarSiExisteFiguraId COMMA exp COMMA exp
    (136) elemArr -> . ID checarDefID agregarIdHaciaPilas agregarLongLista L_BRACKETS exp R_BRACKETS agregarCuadsElemArr

    R_BRACES        reduce using rule 206 (empty -> .)
    SI              shift and go to state 242
    IMPRIMIR        shift and go to state 243
    CICLO           shift and go to state 244
    ID              shift and go to state 246
    REGRESAR        shift and go to state 247
    DIBUJAR         shift and go to state 249
    DIBUJAR_LINEA   shift and go to state 250

    estatuto                       shift and go to state 422
    funcionesAuxiliar4             shift and go to state 432
    empty                          shift and go to state 423
    asignacion                     shift and go to state 233
    condicion                      shift and go to state 234
    escritura                      shift and go to state 235
    ciclo                          shift and go to state 236
    dibujar                        shift and go to state 237
    llamada                        shift and go to state 238
    incremento                     shift and go to state 239
    retorno                        shift and go to state 240
    asignacionAuxiliar2            shift and go to state 241
    dibujarAuxiliar1               shift and go to state 245
    elemArr                        shift and go to state 248

state 423

    (87) funcionesAuxiliar4 -> empty .

    R_BRACES        reduce using rule 87 (funcionesAuxiliar4 -> empty .)


state 424

    (82) funcionesAuxiliar2 -> COMMA tipo ID agregaParamFunc funcionesAuxiliar2 .

    R_PAREN         reduce using rule 82 (funcionesAuxiliar2 -> COMMA tipo ID agregaParamFunc funcionesAuxiliar2 .)


state 425

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 . R_BRACES creaFigVar figurasAuxiliar1

    R_BRACES        shift and go to state 433


state 426

    (176) lista_cte -> reiniciarContadorIndices L_BRACKETS lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 R_BRACKETS p_sacarListaPilaOperandos .

    SEMICOLON       reduce using rule 176 (lista_cte -> reiniciarContadorIndices L_BRACKETS lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 R_BRACKETS p_sacarListaPilaOperandos .)


state 427

    (184) p_sacarListaPilaOperandos -> empty .

    SEMICOLON       reduce using rule 184 (p_sacarListaPilaOperandos -> empty .)


state 428

    (179) lista_cteAuxiliar2 -> COMMA comprobarIndices lista_cteAuxiliar1 . comprobarTipoElem lista_cteAuxiliar2
    (181) comprobarTipoElem -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    R_BRACKETS      reduce using rule 206 (empty -> .)

    comprobarTipoElem              shift and go to state 434
    empty                          shift and go to state 384

state 429

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN . bloque generarCuadRetCiclo
    (123) bloque -> . L_BRACES bloqueAuxiliar1 R_BRACES

    L_BRACES        shift and go to state 208

    bloque                         shift and go to state 435

state 430

    (126) incremento -> ID checarDefID . agregarIdHaciaPilas incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (13) agregarIdHaciaPilas -> . empty
    (206) empty -> .

    PLUS_EQUAL_OP   reduce using rule 206 (empty -> .)
    MINUS_EQUAL_OP  reduce using rule 206 (empty -> .)

    agregarIdHaciaPilas            shift and go to state 436
    empty                          shift and go to state 104

state 431

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES . liberaTablaVars
    (58) liberaTablaVars -> . empty
    (206) empty -> .

    APOLO           reduce using rule 206 (empty -> .)

    liberaTablaVars                shift and go to state 437
    empty                          shift and go to state 438

state 432

    (86) funcionesAuxiliar4 -> estatuto funcionesAuxiliar4 .

    R_BRACES        reduce using rule 86 (funcionesAuxiliar4 -> estatuto funcionesAuxiliar4 .)


state 433

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES . creaFigVar figurasAuxiliar1
    (61) creaFigVar -> . empty
    (206) empty -> .

    COMMA           reduce using rule 206 (empty -> .)
    SEMICOLON       reduce using rule 206 (empty -> .)

    creaFigVar                     shift and go to state 439
    empty                          shift and go to state 287

state 434

    (179) lista_cteAuxiliar2 -> COMMA comprobarIndices lista_cteAuxiliar1 comprobarTipoElem . lista_cteAuxiliar2
    (179) lista_cteAuxiliar2 -> . COMMA comprobarIndices lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2
    (180) lista_cteAuxiliar2 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 397
    R_BRACKETS      reduce using rule 206 (empty -> .)

    lista_cteAuxiliar2             shift and go to state 440
    empty                          shift and go to state 398

state 435

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque . generarCuadRetCiclo
    (37) generarCuadRetCiclo -> . empty
    (206) empty -> .

    SI              reduce using rule 206 (empty -> .)
    IMPRIMIR        reduce using rule 206 (empty -> .)
    CICLO           reduce using rule 206 (empty -> .)
    ID              reduce using rule 206 (empty -> .)
    REGRESAR        reduce using rule 206 (empty -> .)
    DIBUJAR         reduce using rule 206 (empty -> .)
    DIBUJAR_LINEA   reduce using rule 206 (empty -> .)
    R_BRACES        reduce using rule 206 (empty -> .)

    generarCuadRetCiclo            shift and go to state 441
    empty                          shift and go to state 442

state 436

    (126) incremento -> ID checarDefID agregarIdHaciaPilas . incrementoAuxiliar1 agregarOperador exp agregarCuadYCompSemAsignacion
    (127) incrementoAuxiliar1 -> . PLUS_EQUAL_OP
    (128) incrementoAuxiliar1 -> . MINUS_EQUAL_OP

    PLUS_EQUAL_OP   shift and go to state 331
    MINUS_EQUAL_OP  shift and go to state 332

    incrementoAuxiliar1            shift and go to state 330

state 437

    (79) funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars .

    APOLO           reduce using rule 79 (funciones -> funcionesAuxiliar1 ID asignarAlcance agregaFuncTabla creaTablaVar L_PAREN tipo ID agregaParamFunc funcionesAuxiliar2 R_PAREN L_BRACES funcionesAuxiliar3 funcionesAuxiliar4 R_BRACES liberaTablaVars .)


state 438

    (58) liberaTablaVars -> empty .

    APOLO           reduce using rule 58 (liberaTablaVars -> empty .)


state 439

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar . figurasAuxiliar1
    (89) figurasAuxiliar1 -> . COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1
    (90) figurasAuxiliar1 -> . empty
    (206) empty -> .

    COMMA           shift and go to state 308
    SEMICOLON       reduce using rule 206 (empty -> .)

    figurasAuxiliar1               shift and go to state 443
    empty                          shift and go to state 309

state 440

    (179) lista_cteAuxiliar2 -> COMMA comprobarIndices lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 .

    R_BRACKETS      reduce using rule 179 (lista_cteAuxiliar2 -> COMMA comprobarIndices lista_cteAuxiliar1 comprobarTipoElem lista_cteAuxiliar2 .)


state 441

    (119) ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .

    SI              reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    IMPRIMIR        reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    CICLO           reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    ID              reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    REGRESAR        reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    DIBUJAR         reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    DIBUJAR_LINEA   reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)
    R_BRACES        reduce using rule 119 (ciclo -> CICLO L_PAREN asignacion SEMICOLON agregarAPilaSaltosRegresoCiclo expresion SEMICOLON generarCuadCondCiclo incremento R_PAREN bloque generarCuadRetCiclo .)


state 442

    (37) generarCuadRetCiclo -> empty .

    SI              reduce using rule 37 (generarCuadRetCiclo -> empty .)
    IMPRIMIR        reduce using rule 37 (generarCuadRetCiclo -> empty .)
    CICLO           reduce using rule 37 (generarCuadRetCiclo -> empty .)
    ID              reduce using rule 37 (generarCuadRetCiclo -> empty .)
    REGRESAR        reduce using rule 37 (generarCuadRetCiclo -> empty .)
    DIBUJAR         reduce using rule 37 (generarCuadRetCiclo -> empty .)
    DIBUJAR_LINEA   reduce using rule 37 (generarCuadRetCiclo -> empty .)
    R_BRACES        reduce using rule 37 (generarCuadRetCiclo -> empty .)


state 443

    (89) figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 .

    SEMICOLON       reduce using rule 89 (figurasAuxiliar1 -> COMMA figura ID checarFiguraId L_BRACES figura_atributos figura_atributosAuxiliar2 R_BRACES creaFigVar figurasAuxiliar1 .)

